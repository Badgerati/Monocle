<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebDriver</name>
    </assembly>
    <members>
        <member name="T:OpenQA.Selenium.By">
            <summary>
            Provides a mechanism by which to find elements within a document.
            </summary>
            <remarks>It is possible to create your own locating mechanisms for finding documents.
            In order to do this,subclass this class and override the protected methods. However,
            it is expected that that all subclasses rely on the basic finding mechanisms provided
            through static methods of this class. An example of this can be found in OpenQA.Support.ByIdOrName
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.By.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.By"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.By.#ctor(System.Func{OpenQA.Selenium.ISearchContext,OpenQA.Selenium.IWebElement},System.Func{OpenQA.Selenium.ISearchContext,System.Collections.ObjectModel.ReadOnlyCollection{OpenQA.Selenium.IWebElement}})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.By"/> class using the given functions to find elements.
            </summary>
            <param name="findElementMethod">A function that takes an object implementing <see cref="T:OpenQA.Selenium.ISearchContext"/>
            and returns the found <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
            <param name="findElementsMethod">A function that takes an object implementing <see cref="T:OpenQA.Selenium.ISearchContext"/>
            and returns a <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of the found<see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see>.
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see>/>.</param>
        </member>
        <member name="P:OpenQA.Selenium.By.Description">
            <summary>
            Gets or sets the value of the description for this <see cref="T:OpenQA.Selenium.By"/> class instance.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.By.FindElementMethod">
            <summary>
            Gets or sets the method used to find a single element matching specified criteria.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.By.FindElementsMethod">
            <summary>
            Gets or sets the method used to find all elements matching specified criteria.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.By.op_Equality(OpenQA.Selenium.By,OpenQA.Selenium.By)">
            <summary>
            Determines if two <see cref="T:OpenQA.Selenium.By"/> instances are equal.
            </summary>
            <param name="one">One instance to compare.</param>
            <param name="two">The other instance to compare.</param>
            <returns><see langword="true"/> if the two instances are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.op_Inequality(OpenQA.Selenium.By,OpenQA.Selenium.By)">
            <summary>
            Determines if two <see cref="T:OpenQA.Selenium.By"/> instances are unequal.
            </summary>s
            <param name="one">One instance to compare.</param>
            <param name="two">The other instance to compare.</param>
            <returns><see langword="true"/> if the two instances are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.Id(System.String)">
            <summary>
            Gets a mechanism to find elements by their ID.
            </summary>
            <param name="idToFind">The ID to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.LinkText(System.String)">
            <summary>
            Gets a mechanism to find elements by their link text.
            </summary>
            <param name="linkTextToFind">The link text to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.Name(System.String)">
            <summary>
            Gets a mechanism to find elements by their name.
            </summary>
            <param name="nameToFind">The name to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.XPath(System.String)">
            <summary>
            Gets a mechanism to find elements by an XPath query.
            When searching within a WebElement using xpath be aware that WebDriver follows standard conventions:
            a search prefixed with "//" will search the entire document, not just the children of this current node.
            Use ".//" to limit your search to the children of this WebElement.
            </summary>
            <param name="xpathToFind">The XPath query to use.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.ClassName(System.String)">
            <summary>
            Gets a mechanism to find elements by their CSS class.
            </summary>
            <param name="classNameToFind">The CSS class to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
            <remarks>If an element has many classes then this will match against each of them.
            For example if the value is "one two onone", then the following values for the
            className parameter will match: "one" and "two".</remarks>
        </member>
        <member name="M:OpenQA.Selenium.By.PartialLinkText(System.String)">
            <summary>
            Gets a mechanism to find elements by a partial match on their link text.
            </summary>
            <param name="partialLinkTextToFind">The partial link text to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.TagName(System.String)">
            <summary>
            Gets a mechanism to find elements by their tag name.
            </summary>
            <param name="tagNameToFind">The tag name to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.CssSelector(System.String)">
            <summary>
            Gets a mechanism to find elements by their cascading style sheet (CSS) selector.
            </summary>
            <param name="cssSelectorToFind">The CSS selector to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.FindElement(OpenQA.Selenium.ISearchContext)">
            <summary>
            Finds the first element matching the criteria.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext"/> object to use to search for the elements.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.FindElements(OpenQA.Selenium.ISearchContext)">
            <summary>
            Finds all elements matching the criteria.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext"/> object to use to search for the elements.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.ToString">
            <summary>
            Gets a string representation of the finder.
            </summary>
            <returns>The string displaying the finder content.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object">Object</see> is equal
            to the current <see cref="T:System.Object">Object</see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object">Object</see> to compare with the
            current <see cref="T:System.Object">Object</see>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object">Object</see>
            is equal to the current <see cref="T:System.Object">Object</see>; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeDriver">
            <summary>
            Provides a mechanism to write tests against Chrome
            </summary>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new ChromeDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                }
            }
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Chrome.ChromeDriver.AcceptUntrustedCertificates">
            <summary>
            Accept untrusted SSL Certificates
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(OpenQA.Selenium.Chrome.ChromeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> class using the specified options.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> to be used with the Chrome driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(OpenQA.Selenium.Chrome.ChromeDriverService)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> class using the specified driver service.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> class using the specified path
            to the directory containing ChromeDriver.exe.
            </summary>
            <param name="chromeDriverDirectory">The full path to the directory containing ChromeDriver.exe.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(System.String,OpenQA.Selenium.Chrome.ChromeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> class using the specified path
            to the directory containing ChromeDriver.exe and options.
            </summary>
            <param name="chromeDriverDirectory">The full path to the directory containing ChromeDriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> to be used with the Chrome driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(System.String,OpenQA.Selenium.Chrome.ChromeOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> class using the specified path
            to the directory containing ChromeDriver.exe, options, and command timeout.
            </summary>
            <param name="chromeDriverDirectory">The full path to the directory containing ChromeDriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> to be used with the Chrome driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(OpenQA.Selenium.Chrome.ChromeDriverService,OpenQA.Selenium.Chrome.ChromeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> class using the specified
            <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/> and options.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(OpenQA.Selenium.Chrome.ChromeDriverService,OpenQA.Selenium.Chrome.ChromeOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> class using the specified <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/>.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> to be used with the Chrome driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriver.FileDetector">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.IFileDetector"/> responsible for detecting
            sequences of keystrokes representing file paths and names.
            </summary>
            <remarks>The Chrome driver does not allow a file detector to be set,
            as the server component of the Chrome driver (ChromeDriver.exe) only
            allows uploads from the local computer environment. Attempting to set
            this property has no effect, but does not throw an exception. If you
            are attempting to run the Chrome driver remotely, use <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/>
            in conjunction with a standalone WebDriver server.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriver.NetworkConditions">
            <summary>
            Gets or sets the network condition emulation for Chrome.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.ExecuteChromeCommand(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes a custom Chrome command.
            </summary>
            <param name="commandName">Name of the command to execute.</param>
            <param name="commandParameters">Parameters of the command to execute.</param>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeDriverService">
            <summary>
            Exposes the service provided by the native ChromeDriver executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriverService.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/> class.
            </summary>
            <param name="executablePath">The full path to the ChromeDriver executable.</param>
            <param name="executableFileName">The file name of the ChromeDriver executable.</param>
            <param name="port">The port on which the ChromeDriver executable should listen.</param>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriverService.LogPath">
            <summary>
            Gets or sets the location of the log file written to by the ChromeDriver executable.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriverService.UrlPathPrefix">
            <summary>
            Gets or sets the base URL path prefix for commands (e.g., "wd/url").
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriverService.PortServerAddress">
            <summary>
            Gets or sets the address of a server to contact for reserving a port.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriverService.AndroidDebugBridgePort">
            <summary>
            Gets or sets the port on which the Android Debug Bridge is listening for commands.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriverService.EnableVerboseLogging">
            <summary>
            Gets or sets a value indicating whether to enable verbose logging for the ChromeDriver executable.
            Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriverService.WhitelistedIPAddresses">
            <summary>
            Gets or sets the comma-delimited list of IP addresses that are approved to
            connect to this instance of the Chrome driver. Defaults to an empty string,
            which means only the local loopback address can connect.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriverService.CreateDefaultService">
            <summary>
            Creates a default instance of the ChromeDriverService.
            </summary>
            <returns>A ChromeDriverService that implements default settings.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriverService.CreateDefaultService(System.String)">
            <summary>
            Creates a default instance of the ChromeDriverService using a specified path to the ChromeDriver executable.
            </summary>
            <param name="driverPath">The directory containing the ChromeDriver executable.</param>
            <returns>A ChromeDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriverService.CreateDefaultService(System.String,System.String)">
            <summary>
            Creates a default instance of the ChromeDriverService using a specified path to the ChromeDriver executable with the given name.
            </summary>
            <param name="driverPath">The directory containing the ChromeDriver executable.</param>
            <param name="driverExecutableFileName">The name of the ChromeDriver executable file.</param>
            <returns>A ChromeDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriverService.ChromeDriverServiceFileName">
            <summary>
            Returns the Chrome driver filename for the currently running platform
            </summary>
            <returns>The file name of the Chrome driver service executable.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings">
            <summary>
            Represents the type-safe options for setting settings for emulating a
            mobile device in the Chrome browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings"/> class.
            </summary>
            <param name="userAgent">The user agent string to be used by the browser when emulating
            a mobile device.</param>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings.UserAgent">
            <summary>
            Gets or sets the user agent string to be used by the browser when emulating
            a mobile device.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings.Width">
            <summary>
            Gets or sets the width in pixels to be used by the browser when emulating
            a mobile device.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings.Height">
            <summary>
            Gets or sets the height in pixels to be used by the browser when emulating
            a mobile device.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings.PixelRatio">
            <summary>
            Gets or sets the pixel ratio to be used by the browser when emulating
            a mobile device.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings.EnableTouchEvents">
            <summary>
            Gets or sets a value indicating whether touch events should be enabled by
            the browser when emulating a mobile device. Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeNetworkConditions">
            <summary>
            Provides manipulation of getting and setting network conditions from Chrome.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeNetworkConditions.IsOffline">
            <summary>
            Gets or sets a value indicating whether the network is offline. Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeNetworkConditions.Latency">
            <summary>
            Gets or sets the simulated latency of the connection. Typically given in milliseconds.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeNetworkConditions.DownloadThroughput">
            <summary>
            Gets or sets the throughput of the network connection in kb/second for downloading.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeNetworkConditions.UploadThroughput">
            <summary>
            Gets or sets the throughput of the network connection in kb/second for uploading.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeOptions">
            <summary>
            Class to manage options specific to <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/>
            </summary>
            <remarks>
            Used with ChromeDriver.exe v17.0.963.0 and higher.
            </remarks>
            <example>
            <code>
            ChromeOptions options = new ChromeOptions();
            options.AddExtensions("\path\to\extension.crx");
            options.BinaryLocation = "\path\to\chrome";
            </code>
            <para></para>
            <para>For use with ChromeDriver:</para>
            <para></para>
            <code>
            ChromeDriver driver = new ChromeDriver(options);
            </code>
            <para></para>
            <para>For use with RemoteWebDriver:</para>
            <para></para>
            <code>
            RemoteWebDriver driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), options.ToCapabilities());
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Chrome.ChromeOptions.Capability">
            <summary>
            Gets the name of the capability used to store Chrome options in
            a <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> object.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.BinaryLocation">
            <summary>
            Gets or sets the location of the Chrome browser's binary executable file.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.LeaveBrowserRunning">
            <summary>
            Gets or sets a value indicating whether Chrome should be left running after the
            ChromeDriver instance is exited. Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.Arguments">
            <summary>
            Gets the list of arguments appended to the Chrome command line as a string array.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.Extensions">
            <summary>
            Gets the list of extensions to be installed as an array of base64-encoded strings.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.DebuggerAddress">
            <summary>
            Gets or sets the address of a Chrome debugger server to connect to.
            Should be of the form "{hostname|IP address}:port".
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.MinidumpPath">
            <summary>
            Gets or sets the directory in which to store minidump files.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.PerformanceLoggingPreferences">
            <summary>
            Gets or sets the performance logging preferences for the driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.UseSpecCompliantProtocol">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/> instance
            should use the legacy OSS protocol dialect or a dialect compliant with the W3C
            WebDriver Specification.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddArgument(System.String)">
            <summary>
            Adds a single argument to the list of arguments to be appended to the Chrome.exe command line.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddArguments(System.String[])">
            <summary>
            Adds arguments to be appended to the Chrome.exe command line.
            </summary>
            <param name="argumentsToAdd">An array of arguments to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddArguments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds arguments to be appended to the Chrome.exe command line.
            </summary>
            <param name="argumentsToAdd">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object of arguments to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExcludedArgument(System.String)">
            <summary>
            Adds a single argument to be excluded from the list of arguments passed by default
            to the Chrome.exe command line by chromedriver.exe.
            </summary>
            <param name="argument">The argument to exclude.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExcludedArguments(System.String[])">
            <summary>
            Adds arguments to be excluded from the list of arguments passed by default
            to the Chrome.exe command line by chromedriver.exe.
            </summary>
            <param name="argumentsToExclude">An array of arguments to exclude.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExcludedArguments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds arguments to be excluded from the list of arguments passed by default
            to the Chrome.exe command line by chromedriver.exe.
            </summary>
            <param name="argumentsToExclude">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object of arguments to exclude.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExtension(System.String)">
            <summary>
            Adds a path to a packed Chrome extension (.crx file) to the list of extensions
            to be installed in the instance of Chrome.
            </summary>
            <param name="pathToExtension">The full path to the extension to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExtensions(System.String[])">
            <summary>
            Adds a list of paths to packed Chrome extensions (.crx files) to be installed
            in the instance of Chrome.
            </summary>
            <param name="extensions">An array of full paths to the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExtensions(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a list of paths to packed Chrome extensions (.crx files) to be installed
            in the instance of Chrome.
            </summary>
            <param name="extensions">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of full paths to the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddEncodedExtension(System.String)">
            <summary>
            Adds a base64-encoded string representing a Chrome extension to the list of extensions
            to be installed in the instance of Chrome.
            </summary>
            <param name="extension">A base64-encoded string representing the extension to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddEncodedExtensions(System.String[])">
            <summary>
            Adds a list of base64-encoded strings representing Chrome extensions to the list of extensions
            to be installed in the instance of Chrome.
            </summary>
            <param name="extensions">An array of base64-encoded strings representing the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddEncodedExtensions(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a list of base64-encoded strings representing Chrome extensions to be installed
            in the instance of Chrome.
            </summary>
            <param name="extensions">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of base64-encoded strings
            representing the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddUserProfilePreference(System.String,System.Object)">
            <summary>
            Adds a preference for the user-specific profile or "user data directory."
            If the specified preference already exists, it will be overwritten.
            </summary>
            <param name="preferenceName">The name of the preference to set.</param>
            <param name="preferenceValue">The value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddLocalStatePreference(System.String,System.Object)">
            <summary>
            Adds a preference for the local state file in the user's data directory for Chrome.
            If the specified preference already exists, it will be overwritten.
            </summary>
            <param name="preferenceName">The name of the preference to set.</param>
            <param name="preferenceValue">The value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.EnableMobileEmulation(System.String)">
            <summary>
            Allows the Chrome browser to emulate a mobile device.
            </summary>
            <param name="deviceName">The name of the device to emulate. The device name must be a
            valid device name from the Chrome DevTools Emulation panel.</param>
            <remarks>Specifying an invalid device name will not throw an exeption, but
            will generate an error in Chrome when the driver starts. To unset mobile
            emulation, call this method with <see langword="null"/> as the argument.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.EnableMobileEmulation(OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings)">
            <summary>
            Allows the Chrome browser to emulate a mobile device.
            </summary>
            <param name="deviceSettings">The <see cref="T:OpenQA.Selenium.Chrome.ChromeMobileEmulationDeviceSettings"/>
            object containing the settings of the device to emulate.</param>
            <exception cref="T:System.ArgumentException">Thrown if the device settings option does
            not have a user agent string set.</exception>
            <remarks>Specifying an invalid device name will not throw an exeption, but
            will generate an error in Chrome when the driver starts. To unset mobile
            emulation, call this method with <see langword="null"/> as the argument.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddWindowType(System.String)">
            <summary>
            Adds a type of window that will be listed in the list of window handles
            returned by the Chrome driver.
            </summary>
            <param name="windowType">The name of the window type to add.</param>
            <remarks>This method can be used to allow the driver to access {webview}
            elements by adding "webview" as a window type.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddWindowTypes(System.String[])">
            <summary>
            Adds a list of window types that will be listed in the list of window handles
            returned by the Chrome driver.
            </summary>
            <param name="windowTypesToAdd">An array of window types to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddWindowTypes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a list of window types that will be listed in the list of window handles
            returned by the Chrome driver.
            </summary>
            <param name="windowTypesToAdd">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of window types to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddAdditionalCapability(System.String,System.Object)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Chrome driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.Chrome.ChromeOptions.AddAdditionalCapability(System.String,System.Object)"/>
            where <paramref name="capabilityName"/> has already been added will overwrite the
            existing value with the new value in <paramref name="capabilityValue"/>.
            Also, by default, calling this method adds capabilities to the options object passed to
            chromedriver.exe.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddAdditionalCapability(System.String,System.Object,System.Boolean)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Chrome driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <param name="isGlobalCapability">Indicates whether the capability is to be set as a global
            capability for the driver instead of a Chrome-specific option.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.Chrome.ChromeOptions.AddAdditionalCapability(System.String,System.Object,System.Boolean)"/>
            where <paramref name="capabilityName"/> has already been added will overwrite the
            existing value with the new value in <paramref name="capabilityValue"/></remarks>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.ToCapabilities">
            <summary>
            Returns DesiredCapabilities for Chrome with these options included as
            capabilities. This does not copy the options. Further changes will be
            reflected in the returned capabilities.
            </summary>
            <returns>The DesiredCapabilities for Chrome with these options.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromePerformanceLoggingPreferences">
            <summary>
            Represents the type-safe options for setting preferences for performance
            logging in the Chrome browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromePerformanceLoggingPreferences.IsCollectingNetworkEvents">
            <summary>
            Gets or sets a value indicating whether Chrome will collect events from the Network domain.
            Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromePerformanceLoggingPreferences.IsCollectingPageEvents">
            <summary>
            Gets or sets a value indicating whether Chrome will collect events from the Page domain.
            Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromePerformanceLoggingPreferences.BufferUsageReportingInterval">
            <summary>
            Gets or sets the interval between Chrome DevTools trace buffer usage events.
            Defaults to 1000 milliseconds.
            </summary>
            <exception cref="T:System.ArgumentException">Thrown when an attempt is made to set
            the value to a time span of less tnan or equal to zero milliseconds.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromePerformanceLoggingPreferences.TracingCategories">
            <summary>
            Gets a comma-separated list of the categories for which tracing is enabled.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromePerformanceLoggingPreferences.AddTracingCategory(System.String)">
            <summary>
            Adds a single category to the list of Chrome tracing categories for which events should be collected.
            </summary>
            <param name="category">The category to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromePerformanceLoggingPreferences.AddTracingCategories(System.String[])">
            <summary>
            Adds categories to the list of Chrome tracing categories for which events should be collected.
            </summary>
            <param name="categoriesToAdd">An array of categories to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromePerformanceLoggingPreferences.AddTracingCategories(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds categories to the list of Chrome tracing categories for which events should be collected.
            </summary>
            <param name="categoriesToAdd">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object of categories to add.</param>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeWebElement">
            <summary>
            Provides a mechanism to get elements off the page for test
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeWebElement.#ctor(OpenQA.Selenium.Chrome.ChromeDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeWebElement"/> class.
            </summary>
            <param name="parent">Driver in use</param>
            <param name="elementId">Id of the element</param>
        </member>
        <member name="T:OpenQA.Selenium.Cookie">
            <summary>
            Represents a cookie in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name,
            value, domain, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name,
            value, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name,
            value, and path.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name and value.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Name">
            <summary>
            Gets the name of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Value">
            <summary>
            Gets the value of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Domain">
            <summary>
            Gets the domain of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Path">
            <summary>
            Gets the path of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Secure">
            <summary>
            Gets a value indicating whether the cookie is secure.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.IsHttpOnly">
            <summary>
            Gets a value indicating whether the cookie is an HTTP-only cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Expiry">
            <summary>
            Gets the expiration date of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.ExpirySeconds">
            <summary>
            Gets the cookie expiration date in seconds from the defined zero date (01 January 1970 00:00:00 UTC).
            </summary>
            <remarks>This property only exists so that the JSON serializer can serialize a
            cookie without resorting to a custom converter.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.FromDictionary(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Converts a Dictionary to a Cookie.
            </summary>
            <param name="rawCookie">The Dictionary object containing the cookie parameters.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Cookie"/> object with the proper parameters set.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.ToString">
            <summary>
            Creates and returns a string representation of the cookie.
            </summary>
            <returns>A string representation of the cookie.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object">Object</see> is equal
            to the current <see cref="T:System.Object">Object</see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object">Object</see> to compare with the
            current <see cref="T:System.Object">Object</see>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object">Object</see>
            is equal to the current <see cref="T:System.Object">Object</see>; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.DefaultFileDetector">
            <summary>
            Represents the default file detector for determining whether a file
            must be uploaded to a remote server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DefaultFileDetector.IsFile(System.String)">
            <summary>
            Returns a value indicating whether a specified key sequence represents
            a file name and path.
            </summary>
            <param name="keySequence">The sequence to test for file existence.</param>
            <returns>This method always returns <see langword="false"/> in this implementation.</returns>
        </member>
        <member name="T:OpenQA.Selenium.UnhandledPromptBehavior">
            <summary>
            Specifies the behavior of handling unexpected alerts in the IE driver.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.UnhandledPromptBehavior.Default">
            <summary>
            Indicates the behavior is not set.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.UnhandledPromptBehavior.Ignore">
            <summary>
            Ignore unexpected alerts, such that the user must handle them.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.UnhandledPromptBehavior.Accept">
            <summary>
            Accept unexpected alerts.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.UnhandledPromptBehavior.Dismiss">
            <summary>
            Dismiss unexpected alerts.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.UnhandledPromptBehavior.AcceptAndNotify">
            <summary>
            Accepts unexpected alerts and notifies the user that the alert has
            been accepted by throwing an <see cref="T:OpenQA.Selenium.UnhandledAlertException"/>
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.UnhandledPromptBehavior.DismissAndNotify">
            <summary>
            Dismisses unexpected alerts and notifies the user that the alert has
            been dismissed by throwing an <see cref="T:OpenQA.Selenium.UnhandledAlertException"/>
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.PageLoadStrategy">
            <summary>
            Specifies the behavior of waiting for page loads in the driver.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PageLoadStrategy.Default">
            <summary>
            Indicates the behavior is not set.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PageLoadStrategy.Normal">
            <summary>
            Waits for pages to load and ready state to be 'complete'.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PageLoadStrategy.Eager">
            <summary>
            Waits for pages to load and for ready state to be 'interactive' or 'complete'.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PageLoadStrategy.None">
            <summary>
            Does not wait for pages to load, returning immediately.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.DriverOptions">
            <summary>
            Base class for managing options specific to a browser driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverOptions.BrowserName">
            <summary>
            Gets or sets the name of the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverOptions.BrowserVersion">
            <summary>
            Gets or sets the version of the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverOptions.PlatformName">
            <summary>
            Gets or sets the name of the platform on which the browser is running.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverOptions.AcceptInsecureCertificates">
            <summary>
            Gets or sets a value indicating whether the browser should accept self-signed
            SSL certificates.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverOptions.UnhandledPromptBehavior">
            <summary>
            Gets or sets the value for describing how unexpected alerts are to be handled in the browser.
            Defaults to <see cref="F:OpenQA.Selenium.UnhandledPromptBehavior.Default"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverOptions.PageLoadStrategy">
            <summary>
            Gets or sets the value for describing how the browser is to wait for pages to load in the browser.
            Defaults to <see cref="F:OpenQA.Selenium.PageLoadStrategy.Default"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverOptions.Proxy">
            <summary>
            Gets or sets the <see cref="P:OpenQA.Selenium.DriverOptions.Proxy"/> to be used with this browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.AddAdditionalCapability(System.String,System.Object)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the specific browser driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.DriverOptions.AddAdditionalCapability(System.String,System.Object)"/>
            where <paramref name="capabilityName"/> has already been added will overwrite the
            existing value with the new value in <paramref name="capabilityValue"/>.
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.ToCapabilities">
            <summary>
            Returns the <see cref="T:OpenQA.Selenium.ICapabilities"/> for the specific browser driver with these
            options included as capabilities. This does not copy the options. Further
            changes will be reflected in the returned capabilities.
            </summary>
            <returns>The <see cref="T:OpenQA.Selenium.ICapabilities"/> for browser driver with these options.</returns>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.GetMergeResult(OpenQA.Selenium.DriverOptions)">
            <summary>
            Compares this <see cref="T:OpenQA.Selenium.DriverOptions"/> object with another to see if there
            are merge conflicts between them.
            </summary>
            <param name="other">The <see cref="T:OpenQA.Selenium.DriverOptions"/> object to compare with.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.DriverOptionsMergeResult"/> object containing the status of the attempted merge.</returns>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.SetLoggingPreference(System.String,OpenQA.Selenium.LogLevel)">
            <summary>
            Sets the logging preferences for this driver.
            </summary>
            <param name="logType">The type of log for which to set the preference.
            Known log types can be found in the <see cref="T:OpenQA.Selenium.LogType"/> class.</param>
            <param name="logLevel">The <see cref="T:OpenQA.Selenium.LogLevel"/> value to which to set the log level.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.ToString">
            <summary>
            Returns a string representation of this <see cref="T:OpenQA.Selenium.DriverOptions"/>.
            </summary>
            <returns>A string representation of this <see cref="T:OpenQA.Selenium.DriverOptions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.ToDictionary">
            <summary>
            Returns the current options as a <see cref="T:System.Collections.Generic.Dictionary`2"/>.
            </summary>
            <returns>The current options as a <see cref="T:System.Collections.Generic.Dictionary`2"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.AddKnownCapabilityName(System.String,System.String)">
            <summary>
            Adds a known capability to the list of known capabilities and associates it
            with the type-safe property name of the options class to be used instead.
            </summary>
            <param name="capabilityName">The name of the capability.</param>
            <param name="typeSafeOptionName">The name of the option property or method to be used instead.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.IsKnownCapabilityName(System.String)">
            <summary>
            Gets a value indicating whether the specified capability name is a known capability name which has a type-safe option.
            </summary>
            <param name="capabilityName">The name of the capability to check.</param>
            <returns><see langword="true"/> if the capability name is known; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.GetTypeSafeOptionName(System.String)">
            <summary>
            Gets the name of the type-safe option for a given capability name.
            </summary>
            <param name="capabilityName">The name of the capability to check.</param>
            <returns>The name of the type-safe option for the given capability name.</returns>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.GenerateLoggingPreferencesDictionary">
            <summary>
            Generates the logging preferences dictionary for transmission as a desired capability.
            </summary>
            <returns>The dictionary containing the logging preferences.</returns>
        </member>
        <member name="M:OpenQA.Selenium.DriverOptions.GenerateDesiredCapabilities(System.Boolean)">
            <summary>
            Generates the current options as a capabilities object for further processing.
            </summary>
            <param name="isSpecificationCompliant">A value indicating whether to generate capabilities compliant with the W3C WebDriver Specification.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> object representing the current options for further processing.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DriverOptionsMergeResult.IsMergeConflict">
            <summary>
            Gets or sets a value indicating whether the DriverOptions would conflict when merged with another option
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DriverOptionsMergeResult.MergeConflictOptionName">
            <summary>
            Gets or sets the name of the name of the option that is in conflict.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CapabilityType">
            <summary>
            Provides types of capabilities for the DesiredCapabilities object.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.BrowserName">
            <summary>
            Capability name used for the browser name.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.BrowserVersion">
            <summary>
            Capability name used for the browser version.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.PlatformName">
            <summary>
            Capability name used for the platform name.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Platform">
            <summary>
            Capability name used for the browser platform.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Version">
            <summary>
            Capability name used for the browser version.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.IsJavaScriptEnabled">
            <summary>
            Capability name used to indicate whether JavaScript is enabled for the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.TakesScreenshot">
            <summary>
            Capability name used to indicate whether the browser can take screenshots.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.HandlesAlerts">
            <summary>
            Capability name used to indicate whether the browser can handle alerts.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.SupportsFindingByCss">
            <summary>
            Capability name used to indicate whether the browser can find elements via CSS selectors.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Proxy">
            <summary>
            Capability name used for the browser proxy.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Rotatable">
            <summary>
            Capability name used to indicate whether the browser supports rotation.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.AcceptSslCertificates">
            <summary>
            Capability name used to indicate whether the browser accepts SSL certificates.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.AcceptInsecureCertificates">
            <summary>
            Capability name used to indicate whether the browser accepts SSL certificates on W3C Endpoints
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.HasNativeEvents">
            <summary>
            Capability name used to indicate whether the browser uses native events.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.UnexpectedAlertBehavior">
            <summary>
            Capability name used to indicate how the browser handles unexpected alerts.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.UnhandledPromptBehavior">
            <summary>
            Capability name used to indicate how the browser handles unhandled user prompts.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.PageLoadStrategy">
            <summary>
            Capability name used to indicate the page load strategy for the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.LoggingPreferences">
            <summary>
            Capability name used to indicate the logging preferences for the session.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.DisableOverlappedElementCheck">
            <summary>
            Capability name used to disable the check for overlapping elements.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.EnableProfiling">
            <summary>
            Capability name used to enable the profiling log for the session.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.SupportsLocationContext">
            <summary>
            Capability name used to indicate whether the driver supports geolocation context.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.SupportsApplicationCache">
            <summary>
            Capability name used to indicate whether the driver supports application cache.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.SupportsWebStorage">
            <summary>
            Capability name used to indicate whether the driver supports web storage.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.SetWindowRect">
            <summary>
            Capability name used to indicate whether the driver supports setting the browser window's size and position.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Timeouts">
            <summary>
            Capability name used to get or set timeout values when creating a session.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.Command">
            <summary>
            Provides a way to send commands to the remote server
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Command.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.Command"/> class using a command name and a JSON-encoded string for the parameters.
            </summary>
            <param name="name">Name of the command</param>
            <param name="jsonParameters">Parameters for the command as a JSON-encoded string.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Command.#ctor(OpenQA.Selenium.Remote.SessionId,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.Command"/> class for a Session
            </summary>
            <param name="sessionId">Session ID the driver is using</param>
            <param name="name">Name of the command</param>
            <param name="parameters">Parameters for that command</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Command.SessionId">
            <summary>
            Gets the SessionID of the command
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Command.Name">
            <summary>
            Gets the command name
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Command.Parameters">
            <summary>
            Gets the parameters of the command
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Command.ParametersAsJsonString">
            <summary>
            Gets the parameters of the command as a JSON-encoded string.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Command.ToString">
            <summary>
            Returns a string of the Command object
            </summary>
            <returns>A string representation of the Command Object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Command.ConvertParametersFromJson(System.String)">
            <summary>
            Gets the command parameters as a <see cref="T:System.Collections.Generic.Dictionary`2"/>, with a string key, and an object value.
            </summary>
            <param name="value">The JSON-encoded string representing the command parameters.</param>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> with a string keys, and an object value. </returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CommandInfo">
            <summary>
            Provides the execution information for a <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/>.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CommandInfo.PostCommand">
            <summary>
            POST verb for the command info
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CommandInfo.GetCommand">
            <summary>
            GET verb for the command info
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CommandInfo.DeleteCommand">
            <summary>
            DELETE verb for the command info
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.CommandInfo"/> class
            </summary>
            <param name="method">Method of the Command</param>
            <param name="resourcePath">Relative URL path to the resource used to execute the command</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.CommandInfo.ResourcePath">
            <summary>
            Gets the URL representing the path to the resource.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.CommandInfo.Method">
            <summary>
            Gets the HTTP method associated with the command.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfo.CreateCommandUri(System.Uri,OpenQA.Selenium.Remote.Command)">
            <summary>
            Creates the full URI associated with this command, substituting command
            parameters for tokens in the URI template.
            </summary>
            <param name="baseUri">The base URI associated with the command.</param>
            <param name="commandToExecute">The command containing the parameters with which
            to substitute the tokens in the template.</param>
            <returns>The full URI for the command, with the parameters of the command
            substituted for the tokens in the template.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CommandInfoRepository">
            <summary>
            Holds the information about all commands specified by the JSON wire protocol.
            This class cannot be inherited, as it is intended to be a singleton, and
            allowing subclasses introduces the possibility of multiple instances.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfoRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.CommandInfoRepository"/> class.
            Protected accessibility prevents a default instance from being created.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.CommandInfoRepository.SpecificationLevel">
            <summary>
            Gets the level of the W3C WebDriver specification that this repository supports.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfoRepository.GetCommandInfo(System.String)">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Remote.CommandInfo"/> for a <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/>.
            </summary>
            <param name="commandName">The <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/> for which to get the information.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Remote.CommandInfo"/> for the specified command.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfoRepository.TryAddCommand(System.String,OpenQA.Selenium.Remote.CommandInfo)">
            <summary>
            Tries to add a command to the list of known commands.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="commandInfo">The command information.</param>
            <returns><see langword="true"/> if the new command has been added successfully; otherwise, <see langword="false"/>.</returns>
            <remarks>
            This method is used by WebDriver implementations to add additional custom driver-specific commands.
            This method will not overwrite existing commands for a specific name, and will return <see langword="false"/>
            in that case.
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfoRepository.InitializeCommandDictionary">
            <summary>
            Initializes the dictionary of commands for the CommandInfoRepository
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.DesiredCapabilities">
            <summary>
            Class to Create the capabilities of the browser you require for <see cref="T:OpenQA.Selenium.IWebDriver"/>.
            If you wish to use default values use the static methods
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.#ctor(System.String,System.String,OpenQA.Selenium.Platform)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> class
            </summary>
            <param name="browser">Name of the browser e.g. firefox, internet explorer, safari</param>
            <param name="version">Version of the browser</param>
            <param name="platform">The platform it works on</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> class
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> class
            </summary>
            <param name="rawMap">Dictionary of items for the remote driver</param>
            <example>
            <code>
            DesiredCapabilities capabilities = new DesiredCapabilities(new Dictionary<![CDATA[<string,object>]]>(){["browserName","firefox"],["version",string.Empty],["javaScript",true]});
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.#ctor(System.String,System.String,OpenQA.Selenium.Platform,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> class
            </summary>
            <param name="browser">Name of the browser e.g. firefox, internet explorer, safari</param>
            <param name="version">Version of the browser</param>
            <param name="platform">The platform it works on</param>
            <param name="isSpecCompliant">Sets a value indicating whether the capabilities are
            compliant with the W3C WebDriver specification.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.BrowserName">
            <summary>
            Gets the browser name
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.Platform">
            <summary>
            Gets or sets the platform
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.Version">
            <summary>
            Gets the browser version
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.AcceptInsecureCerts">
            <summary>
            Gets or sets a value indicating whether the browser accepts SSL certificates.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.OpenQA#Selenium#Internal#IHasCapabilitiesDictionary#CapabilitiesDictionary">
            <summary>
            Gets the underlying Dictionary for a given set of capabilities.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.CapabilitiesDictionary">
            <summary>
            Gets the underlying Dictionary for a given set of capabilities.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.Item(System.String)">
            <summary>
            Gets the capability value with the specified name.
            </summary>
            <param name="capabilityName">The name of the capability to get.</param>
            <returns>The value of the capability.</returns>
            <exception cref="T:System.ArgumentException">
            The specified capability name is not in the set of capabilities.
            </exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.HasCapability(System.String)">
            <summary>
            Gets a value indicating whether the browser has a given capability.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>Returns <see langword="true"/> if the browser has the capability; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.GetCapability(System.String)">
            <summary>
            Gets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>An object associated with the capability, or <see langword="null"/>
            if the capability is not set on the browser.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.SetCapability(System.String,System.Object)">
            <summary>
            Sets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <param name="capabilityValue">The value for the capability.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.GetHashCode">
            <summary>
            Return HashCode for the DesiredCapabilities that has been created
            </summary>
            <returns>Integer of HashCode generated</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.ToString">
            <summary>
            Return a string of capabilities being used
            </summary>
            <returns>String of capabilities being used</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.Equals(System.Object)">
            <summary>
            Compare two DesiredCapabilities and will return either true or false
            </summary>
            <param name="obj">DesiredCapabilities you wish to compare</param>
            <returns>true if they are the same or false if they are not</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.AsReadOnly">
            <summary>
            Returns a read-only version of this capabilities object.
            </summary>
            <returns>A read-only version of this capabilities object.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.DriverCommand">
            <summary>
            Values describing the list of commands understood by a remote server using the JSON wire protocol.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DefineDriverMapping">
            <summary>
            Represents the Define Driver Mapping command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Status">
            <summary>
            Represents the Status command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.NewSession">
            <summary>
            Represents a New Session command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetSessionList">
            <summary>
            Represents the Get Session List command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetSessionCapabilities">
            <summary>
            Represents the Get Session Capabilities command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Close">
            <summary>
            Represents a Browser close command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Quit">
            <summary>
            Represents a browser quit command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Get">
            <summary>
            Represents a GET command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GoBack">
            <summary>
            Represents a Browser going back command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GoForward">
            <summary>
            Represents a Browser going forward command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Refresh">
            <summary>
            Represents a Browser refreshing command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.AddCookie">
            <summary>
            Represents adding a cookie command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetAllCookies">
            <summary>
            Represents getting all cookies command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetCookie">
            <summary>
            Represents getting cookie command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DeleteCookie">
            <summary>
            Represents deleting a cookie command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DeleteAllCookies">
            <summary>
            Represents Deleting all cookies command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FindElement">
            <summary>
            Represents FindElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FindElements">
            <summary>
            Represents FindElements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FindChildElement">
            <summary>
            Represents FindChildElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FindChildElements">
            <summary>
            Represents FindChildElements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DescribeElement">
            <summary>
            Describes an element
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ClearElement">
            <summary>
            Represents ClearElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ClickElement">
            <summary>
            Represents ClickElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SendKeysToElement">
            <summary>
            Represents SendKeysToElements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TapElement">
            <summary>
            Represents TapElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SubmitElement">
            <summary>
            Represents SubmitElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetCurrentWindowHandle">
            <summary>
            Represents GetCurrentWindowHandle command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetWindowHandles">
            <summary>
            Represents GetWindowHandles command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SwitchToWindow">
            <summary>
            Represents SwitchToWindow command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SwitchToFrame">
            <summary>
            Represents SwitchToFrame command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SwitchToParentFrame">
            <summary>
            Represents SwitchToParentFrame command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetActiveElement">
            <summary>
            Represents GetActiveElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetCurrentUrl">
            <summary>
            Represents GetCurrentUrl command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetPageSource">
            <summary>
            Represents GetPageSource command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetTitle">
            <summary>
            Represents GetTitle command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ExecuteScript">
            <summary>
            Represents ExecuteScript command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ExecuteAsyncScript">
            <summary>
            Represents ExecuteAsyncScript command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementText">
            <summary>
            Represents GetElementText command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementTagName">
            <summary>
            Represents GetElementTagName command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.IsElementSelected">
            <summary>
            Represents IsElementSelected command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.IsElementEnabled">
            <summary>
            Represents IsElementEnabled command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.IsElementDisplayed">
            <summary>
            Represents IsElementDisplayed command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementLocation">
            <summary>
            Represents GetElementLocation command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementLocationOnceScrolledIntoView">
            <summary>
            Represents GetElementLocationOnceScrolledIntoView command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementSize">
            <summary>
            Represents GetElementSize command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementRect">
            <summary>
            Represents GetElementRect command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementAttribute">
            <summary>
            Represents GetElementAttribute command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementProperty">
            <summary>
            Represents GetElementProperty command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementValueOfCssProperty">
            <summary>
            Represents GetElementValueOfCSSProperty command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ElementEquals">
            <summary>
            Represents ElementEquals command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Screenshot">
            <summary>
            Represents Screenshot command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ElementScreenshot">
            <summary>
            Represents the ElementScreenshot command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetOrientation">
            <summary>
            Represents GetOrientation command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetOrientation">
            <summary>
            Represents SetOrientation command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetWindowSize">
            <summary>
            Represents GetWindowSize command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetWindowSize">
            <summary>
            Represents SetWindowSize command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetWindowPosition">
            <summary>
            Represents GetWindowPosition command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetWindowPosition">
            <summary>
            Represents SetWindowPosition command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetWindowRect">
            <summary>
            Represents GetWindowRect command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetWindowRect">
            <summary>
            Represents SetWindowRect command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MaximizeWindow">
            <summary>
            Represents MaximizeWindow command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MinimizeWindow">
            <summary>
            Represents MinimizeWindow command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FullScreenWindow">
            <summary>
            Represents FullScreenWindow command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DismissAlert">
            <summary>
            Represents the DismissAlert command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.AcceptAlert">
            <summary>
            Represents the AcceptAlert command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetAlertText">
            <summary>
            Represents the GetAlertText command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetAlertValue">
            <summary>
            Represents the SetAlertValue command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetAlertCredentials">
            <summary>
            Represents the Authenticate command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ImplicitlyWait">
            <summary>
            Represents the ImplicitlyWait command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetAsyncScriptTimeout">
            <summary>
            Represents the SetAsyncScriptTimeout command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetTimeouts">
            <summary>
            Represents the SetTimeout command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetTimeouts">
            <summary>
            Represents the SetTimeout command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Actions">
            <summary>
            Represents the Actions command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.CancelActions">
            <summary>
            Represents the CancelActions command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseClick">
            <summary>
            Represents the MouseClick command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseDoubleClick">
            <summary>
            Represents the MouseDoubleClick command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseDown">
            <summary>
            Represents the MouseDown command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseUp">
            <summary>
            Represents the MouseUp command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseMoveTo">
            <summary>
            Represents the MouseMoveTo command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SendKeysToActiveElement">
            <summary>
            Represents the SendKeysToActiveElement command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.UploadFile">
            <summary>
            Represents the UploadFile command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TouchSingleTap">
            <summary>
            Represents the TouchSingleTap command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TouchPress">
            <summary>
            Represents the TouchPress command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TouchRelease">
            <summary>
            Represents the TouchRelease command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TouchMove">
            <summary>
            Represents the TouchMove command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TouchScroll">
            <summary>
            Represents the TouchScroll command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TouchDoubleTap">
            <summary>
            Represents the TouchDoubleTap command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TouchLongPress">
            <summary>
            Represents the TouchLongPress command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.TouchFlick">
            <summary>
            Represents the TouchFlick command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetLocation">
            <summary>
            Represents the GetLocation command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetLocation">
            <summary>
            Represents the SetLocation command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetAppCache">
            <summary>
            Represents the GetAppCache command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetAppCacheStatus">
            <summary>
            Represents the application cache GetStatus command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ClearAppCache">
            <summary>
            Represents the ClearAppCache command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetLocalStorageItem">
            <summary>
            Represents the GetLocalStorageItem command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetLocalStorageKeys">
            <summary>
            Represents the GetLocalStorageKeys command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetLocalStorageItem">
            <summary>
            Represents the SetLocalStorageItem command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.RemoveLocalStorageItem">
            <summary>
            Represents the RemoveLocalStorageItem command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ClearLocalStorage">
            <summary>
            Represents the ClearLocalStorage command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetLocalStorageSize">
            <summary>
            Represents the GetLocalStorageSize command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetSessionStorageItem">
            <summary>
            Represents the GetSessionStorageItem command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetSessionStorageKeys">
            <summary>
            Represents the GetSessionStorageKeys command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetSessionStorageItem">
            <summary>
            Represents the SetSessionStorageItem command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.RemoveSessionStorageItem">
            <summary>
            Represents the RemoveSessionStorageItem command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ClearSessionStorage">
            <summary>
            Represents the ClearSessionStorage command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetSessionStorageSize">
            <summary>
            Represents the GetSessionStorageSize command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetAvailableLogTypes">
            <summary>
            Represents the GetAvailableLogTypes command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetLog">
            <summary>
            Represents the GetLog command.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.DriverServiceCommandExecutor">
            <summary>
            Provides a mechanism to execute commands on the browser
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.#ctor(OpenQA.Selenium.DriverService,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.DriverServiceCommandExecutor"/> class.
            </summary>
            <param name="driverService">The <see cref="T:OpenQA.Selenium.DriverService"/> that drives the browser.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.#ctor(OpenQA.Selenium.DriverService,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.DriverServiceCommandExecutor"/> class.
            </summary>
            <param name="driverService">The <see cref="T:OpenQA.Selenium.DriverService"/> that drives the browser.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
            <param name="enableKeepAlive"><see langword="true"/> if the KeepAlive header should be sent
            with HTTP requests; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.CommandInfoRepository">
            <summary>
            Gets the <see cref="P:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.CommandInfoRepository"/> object associated with this executor.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.HttpExecutor">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Remote.HttpCommandExecutor"/> that sends commands to the remote
            end WebDriver implementation.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Remote.DriverServiceCommandExecutor"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenQA.Selenium.Remote.HttpCommandExecutor"/> and
            optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and resources;
            <see langword="false"/> to only release unmanaged resources.</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ErrorResponse">
            <summary>
            Provides a way to store errors from a response
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ErrorResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.ErrorResponse"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ErrorResponse.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.ErrorResponse"/> class using the specified values.
            </summary>
            <param name="responseValue">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing names and values of
            the properties of this <see cref="T:OpenQA.Selenium.Remote.ErrorResponse"/>.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ErrorResponse.Message">
            <summary>
            Gets or sets the message from the response
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ErrorResponse.ClassName">
            <summary>
            Gets or sets the class name that threw the error
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ErrorResponse.Screenshot">
            <summary>
            Gets or sets the screenshot of the error
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ErrorResponse.StackTrace">
            <summary>
            Gets or sets the stack trace of the error
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.HttpCommandExecutor">
            <summary>
            Provides a way of executing Commands over HTTP
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.HttpCommandExecutor.#ctor(System.Uri,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.HttpCommandExecutor"/> class
            </summary>
            <param name="addressOfRemoteServer">Address of the WebDriver Server</param>
            <param name="timeout">The timeout within which the server must respond.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.HttpCommandExecutor.#ctor(System.Uri,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.HttpCommandExecutor"/> class
            </summary>
            <param name="addressOfRemoteServer">Address of the WebDriver Server</param>
            <param name="timeout">The timeout within which the server must respond.</param>
            <param name="enableKeepAlive"><see langword="true"/> if the KeepAlive header should be sent
            with HTTP requests; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.HttpCommandExecutor.CommandInfoRepository">
            <summary>
            Gets the repository of objects containin information about commands.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.HttpCommandExecutor.Proxy">
            <summary>
            Gets or sets an <see cref="T:System.Net.IWebProxy"/> object to be used to proxy requests
            between this <see cref="T:OpenQA.Selenium.Remote.HttpCommandExecutor"/> and the remote end WebDriver
            implementation.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.HttpCommandExecutor.IsKeepAliveEnabled">
            <summary>
            Gets or sets a value indicating whether keep-alive is enabled for HTTP
            communication between this <see cref="T:OpenQA.Selenium.Remote.HttpCommandExecutor"/> and the
            remote end WebDriver implementation.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.HttpCommandExecutor.OnSendingRemoteHttpRequest(OpenQA.Selenium.Remote.SendingRemoteHttpRequestEventArgs)">
            <summary>
            Raises the <see cref="E:OpenQA.Selenium.Remote.HttpCommandExecutor.SendingRemoteHttpRequest"/> event.
            </summary>
            <param name="eventArgs">A <see cref="T:OpenQA.Selenium.Remote.SendingRemoteHttpRequestEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.HttpCommandExecutor.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Remote.HttpCommandExecutor"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.HttpCommandExecutor.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenQA.Selenium.Remote.HttpCommandExecutor"/> and
            optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and resources;
            <see langword="false"/> to only release unmanaged resources.</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ICommandExecutor">
            <summary>
            Provides a way to send commands to the remote server
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ICommandExecutor.CommandInfoRepository">
            <summary>
            Gets the repository of objects containin information about commands.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ICommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ICommandServer">
            <summary>
            Provides a way to start a server that understands remote commands
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ICommandServer.Start">
            <summary>
            Starts the server.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.IHasSessionId">
            <summary>
            Interface indicating the driver has a Session ID.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.IHasSessionId.SessionId">
            <summary>
            Gets the session ID of the current session.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CharArrayJsonConverter">
            <summary>
            Provides a way to convert a Char array to JSON
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CharArrayJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the object can be converted
            </summary>
            <param name="objectType">Type of the object to see if can be converted</param>
            <returns>True if can be converted else false</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CharArrayJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the Object to JSON
            </summary>
            <param name="writer">A JSON Writer object</param>
            <param name="value">Object to be converted</param>
            <param name="serializer">JSON Serializer object instance</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CharArrayJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Method not implemented
            </summary>
            <param name="reader">JSON Reader instance</param>
            <param name="objectType">Object type being read</param>
            <param name="existingValue">Existing Value to be read</param>
            <param name="serializer">JSON Serializer instance</param>
            <returns>Object from JSON</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ResponseValueJsonConverter">
            <summary>
            Converts the response to JSON
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ResponseValueJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the object can be converted
            </summary>
            <param name="objectType">The object to be converted</param>
            <returns>True if it can be converted or false if can't be</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ResponseValueJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Process the reader to return an object from JSON
            </summary>
            <param name="reader">A JSON reader</param>
            <param name="objectType">Type of the object</param>
            <param name="existingValue">The existing value of the object</param>
            <param name="serializer">JSON Serializer</param>
            <returns>Object created from JSON</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ResponseValueJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes objects to JSON. Currently not implemented
            </summary>
            <param name="writer">JSON Writer Object</param>
            <param name="value">Value to be written</param>
            <param name="serializer">JSON Serializer </param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.LocalFileDetector">
            <summary>
            Represents a file detector for determining whether a file
            must be uploaded to a remote server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.LocalFileDetector.IsFile(System.String)">
            <summary>
            Returns a value indicating whether a specified key sequence represents
            a file name and path.
            </summary>
            <param name="keySequence">The sequence to test for file existence.</param>
            <returns><see langword="true"/> if the key sequence represents a file; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities">
            <summary>
            Class to Create the capabilities of the browser you require for <see cref="T:OpenQA.Selenium.IWebDriver"/>.
            If you wish to use default values use the static methods
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities"/> class.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.BrowserName">
            <summary>
            Gets the browser name
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.Platform">
            <summary>
            Gets or sets the platform
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.Version">
            <summary>
            Gets the browser version
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.AcceptInsecureCerts">
            <summary>
            Gets or sets a value indicating whether the browser accepts SSL certificates.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.OpenQA#Selenium#Internal#IHasCapabilitiesDictionary#CapabilitiesDictionary">
            <summary>
            Gets the underlying Dictionary for a given set of capabilities.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.CapabilitiesDictionary">
            <summary>
            Gets the underlying Dictionary for a given set of capabilities.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.Item(System.String)">
            <summary>
            Gets the capability value with the specified name.
            </summary>
            <param name="capabilityName">The name of the capability to get.</param>
            <returns>The value of the capability.</returns>
            <exception cref="T:System.ArgumentException">
            The specified capability name is not in the set of capabilities.
            </exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.HasCapability(System.String)">
            <summary>
            Gets a value indicating whether the browser has a given capability.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>Returns <see langword="true"/> if the browser has the capability; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.GetCapability(System.String)">
            <summary>
            Gets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>An object associated with the capability, or <see langword="null"/>
            if the capability is not set on the browser.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.ToDictionary">
            <summary>
            Converts the <see cref="T:OpenQA.Selenium.ICapabilities"/> object to a <see cref="T:System.Collections.Generic.Dictionary`2"/>.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the capabilities.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.GetHashCode">
            <summary>
            Return HashCode for the DesiredCapabilities that has been created
            </summary>
            <returns>Integer of HashCode generated</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.ToString">
            <summary>
            Return a string of capabilities being used
            </summary>
            <returns>String of capabilities being used</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ReadOnlyDesiredCapabilities.Equals(System.Object)">
            <summary>
            Compare two DesiredCapabilities and will return either true or false
            </summary>
            <param name="obj">DesiredCapabilities you wish to compare</param>
            <returns>true if they are the same or false if they are not</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteAlert">
            <summary>
            Defines the interface through which the user can manipulate JavaScript alerts.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteAlert"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the alerts will be managed.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteAlert.Text">
            <summary>
            Gets the text of the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.Dismiss">
            <summary>
            Dismisses the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.Accept">
            <summary>
            Accepts the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.SendKeys(System.String)">
            <summary>
            Sends keys to the alert.
            </summary>
            <param name="keysToSend">The keystrokes to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.SetAuthenticationCredentials(System.String,System.String)">
            <summary>
            Sets the user name and password in an alert prompting for credentials.
            </summary>
            <param name="userName">The user name to set.</param>
            <param name="password">The password to set.</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteApplicationCache">
            <summary>
            Defines the interface through which the user can manipulate application cache.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteApplicationCache.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteApplicationCache"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the application cache will be managed.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteApplicationCache.Status">
            <summary>
            Gets the current state of the application cache.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteCookieJar">
            <summary>
            Defines an interface allowing the user to manipulate cookies on the current page.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteCookieJar"/> class.
            </summary>
            <param name="driver">The driver that is currently in use</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCookieJar.AllCookies">
            <summary>
            Gets all cookies defined for the current page.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.AddCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Method for creating a cookie in the browser
            </summary>
            <param name="cookie"><see cref="T:OpenQA.Selenium.Cookie"/> that represents a cookie in the browser</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.DeleteCookieNamed(System.String)">
            <summary>
            Delete the cookie by passing in the name of the cookie
            </summary>
            <param name="name">The name of the cookie that is in the browser</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.DeleteCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Delete a cookie in the browser by passing in a copy of a cookie
            </summary>
            <param name="cookie">An object that represents a copy of the cookie that needs to be deleted</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.DeleteAllCookies">
            <summary>
            Delete All Cookies that are present in the browser
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.GetCookieNamed(System.String)">
            <summary>
            Method for returning a getting a cookie by name
            </summary>
            <param name="name">name of the cookie that needs to be returned</param>
            <returns>A Cookie from the name</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.GetAllCookies">
            <summary>
            Method for getting a Collection of Cookies that are present in the browser
            </summary>
            <returns>ReadOnlyCollection of Cookies in the browser</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteCoordinates">
            <summary>
            Defines the interface through which the user can discover where an element is on the screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCoordinates.#ctor(OpenQA.Selenium.Remote.RemoteWebElement)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteCoordinates"/> class.
            </summary>
            <param name="element">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> to be located.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCoordinates.LocationOnScreen">
            <summary>
            Gets the location of an element in absolute screen coordinates.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCoordinates.LocationInViewport">
            <summary>
            Gets the location of an element relative to the origin of the view port.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCoordinates.LocationInDom">
            <summary>
            Gets the location of an element's position within the HTML DOM.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCoordinates.AuxiliaryLocator">
            <summary>
            Gets a locator providing a user-defined location for this element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteKeyboard">
            <summary>
            Defines the interface through which the user can execute advanced keyboard interactions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteKeyboard.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteKeyboard"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the keyboard will be managed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteKeyboard.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the target.
            </summary>
            <param name="keySequence">A string representing the keystrokes to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteKeyboard.PressKey(System.String)">
            <summary>
            Presses a key.
            </summary>
            <param name="keyToPress">The key value representing the key to press.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteKeyboard.ReleaseKey(System.String)">
            <summary>
            Releases a key.
            </summary>
            <param name="keyToRelease">The key value representing the key to release.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteLocalStorage">
            <summary>
            Defines the interface through which the user can manipulate local storage.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLocalStorage.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteLocalStorage"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the application cache will be managed.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteLocalStorage.Count">
            <summary>
            Gets the number of items in local storage.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLocalStorage.GetItem(System.String)">
            <summary>
            Returns local storage value given a key.
            </summary>
            <param name="key">The key value for the item in storage.</param>
            <returns>A local storage <see cref="T:System.String"/> value given a key, if present, otherwise returns null.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLocalStorage.KeySet">
            <summary>
            Returns a read-only list of local storage keys.
            </summary>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">read-only list</see> of local storage keys.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLocalStorage.SetItem(System.String,System.String)">
            <summary>
            Sets local storage entry using given key/value pair.
            </summary>
            <param name="key">local storage key</param>
            <param name="value">local storage value</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLocalStorage.RemoveItem(System.String)">
            <summary>
            Removes local storage entry for the given key.
            </summary>
            <param name="key">key to be removed from the list</param>
            <returns>Response value <see cref="T:System.String"/>for the given key.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLocalStorage.Clear">
            <summary>
            Removes all entries from the local storage.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteLocationContext">
            <summary>
            Defines the interface through which the user can manipulate browser location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLocationContext.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteLocationContext"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the application cache will be managed.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteLocationContext.PhysicalLocation">
            <summary>
            Gets or sets a value indicating the physical location of the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteLogs">
            <summary>
            Provides a mechanism for examining logs for the driver during the test.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLogs.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteLogs"/> class.
            </summary>
            <param name="driver">Instance of the driver currently in use</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteLogs.AvailableLogTypes">
            <summary>
            Gets the list of available log types for this driver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteLogs.GetLog(System.String)">
            <summary>
            Gets the set of <see cref="T:OpenQA.Selenium.LogEntry"/> objects for a specified log.
            </summary>
            <param name="logKind">The log for which to retrieve the log entries.
            Log types can be found in the <see cref="T:OpenQA.Selenium.LogType"/> class.</param>
            <returns>The list of <see cref="T:OpenQA.Selenium.LogEntry"/> objects for the specified log.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteMouse">
            <summary>
            Defines the interface through which the user can execute advanced mouse interactions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteMouse"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the mouse will be managed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.Click(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the primary mouse button.
            </summary>
            <param name="where">An <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.DoubleClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Double-clicks at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to double-click.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.MouseDown(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Presses the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to press the mouse button down.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.MouseUp(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Releases the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to release the mouse button.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to move the mouse to.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
            <param name="offsetX">A horizontal offset from the coordinates specified in <paramref name="where"/>.</param>
            <param name="offsetY">A vertical offset from the coordinates specified in <paramref name="where"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.ContextClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the secondary mouse button.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteNavigator">
            <summary>
            Provides a mechanism for Navigating with the driver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteNavigator"/> class
            </summary>
            <param name="driver">Driver in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.Back">
            <summary>
            Move the browser back
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.Forward">
            <summary>
            Move the browser forward
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.GoToUrl(System.String)">
            <summary>
            Navigate to a url for your test
            </summary>
            <param name="url">String of where you want the browser to go to</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.GoToUrl(System.Uri)">
            <summary>
            Navigate to a url for your test
            </summary>
            <param name="url">Uri object of where you want the browser to go to</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.Refresh">
            <summary>
            Refresh the browser
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteOptions">
            <summary>
            Provides a mechanism for setting options needed for the driver during the test.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteOptions.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteOptions"/> class
            </summary>
            <param name="driver">Instance of the driver currently in use</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteOptions.Cookies">
            <summary>
            Gets an object allowing the user to manipulate cookies on the page.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteOptions.Window">
            <summary>
            Gets an object allowing the user to manipulate the currently-focused browser window.
            </summary>
            <remarks>"Currently-focused" is defined as the browser window having the window handle
            returned when IWebDriver.CurrentWindowHandle is called.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteOptions.Logs">
            <summary>
            Gets an object allowing the user to examine the logs of the current driver instance.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteOptions.Timeouts">
            <summary>
            Provides access to the timeouts defined for this driver.
            </summary>
            <returns>An object implementing the <see cref="T:OpenQA.Selenium.ITimeouts"/> interface.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteSessionStorage">
            <summary>
            Defines the interface through which the user can manipulate session storage.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteSessionStorage.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteSessionStorage"/> class.
            </summary>
            <param name="driver">The driver instance.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteSessionStorage.Count">
            <summary>
            Gets the number of items in session storage.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteSessionStorage.GetItem(System.String)">
            <summary>
            Returns session storage value given a key.
            </summary>
            <param name="key">The key of the item in storage.</param>
            <returns>A session storage <see cref="T:System.String"/> value given a key, if present, otherwise return null.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteSessionStorage.KeySet">
            <summary>
            Returns a read-only list of session storage keys.
            </summary>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1">read-only list</see> of session storage keys.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteSessionStorage.SetItem(System.String,System.String)">
            <summary>
            Sets session storage entry using given key/value pair.
            </summary>
            <param name="key">Session storage key</param>
            <param name="value">Session storage value</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteSessionStorage.RemoveItem(System.String)">
            <summary>
            Removes session storage entry for the given key.
            </summary>
            <param name="key">key to be removed from the list</param>
            <returns>Response value <see cref="T:System.String"/>for the given key.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteSessionStorage.Clear">
            <summary>
            Removes all entries from the session storage.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteTargetLocator">
            <summary>
            Provides a mechanism for finding elements on the page with locators.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteTargetLocator"/> class
            </summary>
            <param name="driver">The driver that is currently in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Frame(System.Int32)">
            <summary>
            Move to a different frame using its index
            </summary>
            <param name="frameIndex">The index of the </param>
            <returns>A WebDriver instance that is currently in use</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Frame(System.String)">
            <summary>
            Move to different frame using its name
            </summary>
            <param name="frameName">name of the frame</param>
            <returns>A WebDriver instance that is currently in use</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Frame(OpenQA.Selenium.IWebElement)">
            <summary>
            Move to a frame element.
            </summary>
            <param name="frameElement">a previously found FRAME or IFRAME element.</param>
            <returns>A WebDriver instance that is currently in use.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.ParentFrame">
            <summary>
            Select the parent frame of the currently selected frame.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Window(System.String)">
            <summary>
            Change to the Window by passing in the name
            </summary>
            <param name="windowHandleOrName">Window handle or name of the window that you wish to move to</param>
            <returns>A WebDriver instance that is currently in use</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.DefaultContent">
            <summary>
            Change the active frame to the default
            </summary>
            <returns>Element of the default</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.ActiveElement">
            <summary>
            Finds the active element on the page and returns it
            </summary>
            <returns>Element that is active</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Alert">
            <summary>
            Switches to the currently active modal dialog for this particular driver instance.
            </summary>
            <returns>A handle to the dialog.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteTimeouts">
            <summary>
            Defines the interface through which the user can define timeouts.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTimeouts.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteTimeouts"/> class
            </summary>
            <param name="driver">The driver that is currently in use</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteTimeouts.ImplicitWait">
            <summary>
            Gets or sets the implicit wait timeout, which is the  amount of time the
            driver should wait when searching for an element if it is not immediately
            present.
            </summary>
            <remarks>
            When searching for a single element, the driver should poll the page
            until the element has been found, or this timeout expires before throwing
            a <see cref="T:OpenQA.Selenium.NoSuchElementException"/>. When searching for multiple elements,
            the driver should poll the page until at least one element has been found
            or this timeout has expired.
            <para>
            Increasing the implicit wait timeout should be used judiciously as it
            will have an adverse effect on test run time, especially when used with
            slower location strategies like XPath.
            </para>
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteTimeouts.AsynchronousJavaScript">
            <summary>
            Gets or sets the asynchronous script timeout, which is the amount
            of time the driver should wait when executing JavaScript asynchronously.
            This timeout only affects the <see cref="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteAsyncScript(System.String,System.Object[])"/>
            method.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteTimeouts.PageLoad">
            <summary>
            Gets or sets the page load timeout, which is the amount of time the driver
            should wait for a page to load when setting the <see cref="P:OpenQA.Selenium.IWebDriver.Url"/>
            property.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteTouchScreen">
            <summary>
            Defines the interface through which the user can execute advanced touch screen interactions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteTouchScreen"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the touch screen will be managed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.SingleTap(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Allows the execution of single tap on the screen, analogous to click using a Mouse.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen,
            usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.Down(System.Int32,System.Int32)">
            <summary>
            Allows the execution of the gesture 'down' on the screen. It is typically the first of a
            sequence of touch gestures.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.Up(System.Int32,System.Int32)">
            <summary>
            Allows the execution of the gesture 'up' on the screen. It is typically the last of a
            sequence of touch gestures.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.Move(System.Int32,System.Int32)">
            <summary>
            Allows the execution of the gesture 'move' on the screen.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.Scroll(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32)">
            <summary>
            Creates a scroll gesture that starts on a particular screen location.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen
            where the scroll starts, usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
            <param name="offsetX">The x coordinate relative to the view port.</param>
            <param name="offsetY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.Scroll(System.Int32,System.Int32)">
            <summary>
            Creates a scroll gesture for a particular x and y offset.
            </summary>
            <param name="offsetX">The horizontal offset relative to the view port.</param>
            <param name="offsetY">The vertical offset relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.DoubleTap(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Allows the execution of double tap on the screen, analogous to click using a Mouse.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen,
            usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.LongPress(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Allows the execution of a long press gesture on the screen.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen,
            usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.Flick(System.Int32,System.Int32)">
            <summary>
            Creates a flick gesture for the current view.
            </summary>
            <param name="speedX">The horizontal speed in pixels per second.</param>
            <param name="speedY">The vertical speed in pixels per second.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTouchScreen.Flick(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a flick gesture for the current view starting at a specific location.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen
            where the scroll starts, usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
            <param name="offsetX">The x offset relative to the viewport.</param>
            <param name="offsetY">The y offset relative to the viewport.</param>
            <param name="speed">The speed in pixels per second.</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteWebDriver">
            <summary>
            Provides a way to use the driver through
            </summary>
            /// <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new RemoteWebDriver(new Uri("http://127.0.0.1:4444/wd/hub"),DesiredCapabilities.InternetExplorer());
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                }
            }
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Remote.RemoteWebDriver.DefaultCommandTimeout">
            <summary>
            The default command timeout for HTTP requests in a RemoteWebDriver instance.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> class. This constructor defaults proxy to http://127.0.0.1:4444/wd/hub
            </summary>
            <param name="options">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the desired capabilities of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(OpenQA.Selenium.ICapabilities)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> class. This constructor defaults proxy to http://127.0.0.1:4444/wd/hub
            </summary>
            <param name="desiredCapabilities">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired capabilities of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(System.Uri,OpenQA.Selenium.DriverOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> class. This constructor defaults proxy to http://127.0.0.1:4444/wd/hub
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4444/wd/hub).</param>
            <param name="options">An <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing the desired capabilities of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(System.Uri,OpenQA.Selenium.ICapabilities)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> class
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4444/wd/hub).</param>
            <param name="desiredCapabilities">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired capabilities of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(System.Uri,OpenQA.Selenium.ICapabilities,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> class using the specified remote address, desired capabilities, and command timeout.
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4444/wd/hub).</param>
            <param name="desiredCapabilities">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired capabilities of the browser.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(OpenQA.Selenium.Remote.ICommandExecutor,OpenQA.Selenium.ICapabilities)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> class
            </summary>
            <param name="commandExecutor">An <see cref="T:OpenQA.Selenium.Remote.ICommandExecutor"/> object which executes commands for the driver.</param>
            <param name="desiredCapabilities">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired capabilities of the browser.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Url">
            <summary>
            Gets or sets the URL the browser is currently displaying.
            </summary>
            <seealso cref="P:OpenQA.Selenium.IWebDriver.Url"/>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)"/>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)"/>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Title">
            <summary>
            Gets the title of the current browser window.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.PageSource">
            <summary>
            Gets the source of the page last loaded by the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.CurrentWindowHandle">
            <summary>
            Gets the current window handle, which is an opaque handle to this
            window that uniquely identifies it within this driver instance.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.WindowHandles">
            <summary>
            Gets the window handles of open browser windows.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Keyboard">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IKeyboard"/> object for sending keystrokes to the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Mouse">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IMouse"/> object for sending mouse commands to the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.HasWebStorage">
            <summary>
            Gets a value indicating whether web storage is supported for this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.WebStorage">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Html5.IWebStorage"/> object for managing web storage.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.HasApplicationCache">
            <summary>
            Gets a value indicating whether manipulating the application cache is supported for this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.ApplicationCache">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Html5.IApplicationCache"/> object for managing application cache.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.HasLocationContext">
            <summary>
            Gets a value indicating whether manipulating geolocation is supported for this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.LocationContext">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Html5.ILocationContext"/> object for managing browser location.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Capabilities">
            <summary>
            Gets the capabilities that the RemoteWebDriver instance is currently using
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.FileDetector">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.IFileDetector"/> responsible for detecting
            sequences of keystrokes representing file paths and names.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.SessionId">
            <summary>
            Gets the <see cref="P:OpenQA.Selenium.Remote.RemoteWebDriver.SessionId"/> for the current session of this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.IsActionExecutor">
            <summary>
            Gets a value indicating whether this object is a valid action executor.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.IsSpecificationCompliant">
            <summary>
            Gets a value indicating whether or not the driver is compliant with the W3C WebDriver specification.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.CommandExecutor">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Remote.ICommandExecutor"/> which executes commands for this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.ElementFactory">
            <summary>
            Gets or sets the factory object used to create instances of <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/>
            or its subclasses.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first element in the page that matches the <see cref="T:OpenQA.Selenium.By"/> object
            </summary>
            <param name="by">By mechanism to find the object</param>
            <returns>IWebElement object so that you can interact with that object</returns>
            <example>
            <code>
            IWebDriver driver = new InternetExplorerDriver();
            IWebElement elem = driver.FindElement(By.Name("q"));
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds the elements on the page by using the <see cref="T:OpenQA.Selenium.By"/> object and returns a ReadOnlyCollection of the Elements on the page
            </summary>
            <param name="by">By mechanism to find the element</param>
            <returns>ReadOnlyCollection of IWebElement</returns>
            <example>
            <code>
            IWebDriver driver = new InternetExplorerDriver();
            ReadOnlyCollection<![CDATA[<IWebElement>]]> classList = driver.FindElements(By.ClassName("class"));
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Close">
            <summary>
            Closes the Browser
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Quit">
            <summary>
            Close the Browser and Dispose of WebDriver
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Manage">
            <summary>
            Method For getting an object to set the Speed
            </summary>
            <returns>Returns an IOptions object that allows the driver to set the speed and cookies and getting cookies</returns>
            <seealso cref="T:OpenQA.Selenium.IOptions"/>
            <example>
            <code>
            IWebDriver driver = new InternetExplorerDriver();
            driver.Manage().GetCookies();
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Navigate">
            <summary>
            Method to allow you to Navigate with WebDriver
            </summary>
            <returns>Returns an INavigation Object that allows the driver to navigate in the browser</returns>
            <example>
            <code>
                IWebDriver driver = new InternetExplorerDriver();
                driver.Navigate().GoToUrl("http://www.google.co.uk");
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.SwitchTo">
            <summary>
            Method to give you access to switch frames and windows
            </summary>
            <returns>Returns an Object that allows you to Switch Frames and Windows</returns>
            <example>
            <code>
            IWebDriver driver = new InternetExplorerDriver();
            driver.SwitchTo().Frame("FrameName");
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.ExecuteScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript in the context of the currently selected frame or window
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.ExecuteAsyncScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript asynchronously in the context of the currently selected frame or window.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the element</param>
            <returns>IWebElement object so that you can interact with that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementById("id")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the Element</param>
            <returns>ReadOnlyCollection of Elements that match the object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsById("id")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByClassName(System.String)">
            <summary>
            Finds the first element in the page that matches the CSS Class supplied
            </summary>
            <param name="className">className of the</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByClassName(System.String)">
            <summary>
            Finds a list of elements that match the class name supplied
            </summary>
            <param name="className">CSS class Name on the element</param>
            <returns>ReadOnlyCollection of IWebElement object so that you can interact with those objects</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByLinkText(System.String)">
            <summary>
            Finds the first of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element </param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByLinkText("linktext")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByLinkText(System.String)">
            <summary>
            Finds a list of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element</param>
            <returns>ReadOnlyCollection<![CDATA[<IWebElement>]]> object so that you can interact with those objects</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first of elements that match the part of the link text supplied
            </summary>
            <param name="partialLinkText">part of the link text</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByPartialLinkText("partOfLink")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds a list of elements that match the class name supplied
            </summary>
            <param name="partialLinkText">part of the link text</param>
            <returns>ReadOnlyCollection<![CDATA[<IWebElement>]]> objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByPartialLinkText("partOfTheLink")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByName(System.String)">
            <summary>
            Finds the first of elements that match the name supplied
            </summary>
            <param name="name">Name of the element on the page</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            elem = driver.FindElementsByName("name")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByName(System.String)">
            <summary>
            Finds a list of elements that match the name supplied
            </summary>
            <param name="name">Name of element</param>
            <returns>ReadOnlyCollect of IWebElement objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByName("name")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByTagName(System.String)">
            <summary>
            Finds the first of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">DOM tag Name of the element being searched</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByTagName("tag")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByTagName(System.String)">
            <summary>
            Finds a list of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">DOM tag Name of element being searched</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByTagName("tag")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByXPath(System.String)">
            <summary>
            Finds the first of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to the element</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByXPath("//table/tbody/tr/td/a");
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByXPath(System.String)">
            <summary>
            Finds a list of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to the element</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByXpath("//tr/td/a")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByCssSelector(System.String)">
            <summary>
            Finds all elements matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of the page on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Dispose">
            <summary>
            Dispose the RemoteWebDriver Instance
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.PerformActions(System.Collections.Generic.IList{OpenQA.Selenium.Interactions.ActionSequence})">
            <summary>
            Performs the specified list of actions with this action executor.
            </summary>
            <param name="actionSequenceList">The list of action sequences to perform.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.ResetInputState">
            <summary>
            Resets the input state of the action executor.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.EscapeCssSelector(System.String)">
            <summary>
            Escapes invalid characters in a CSS selector.
            </summary>
            <param name="selector">The selector to escape.</param>
            <returns>The selector with invalid characters escaped.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.InternalExecute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes commands with the driver
            </summary>
            <param name="driverCommandToExecute">Command that needs executing</param>
            <param name="parameters">Parameters needed for the command</param>
            <returns>WebDriver Response</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.GetElementFromResponse(OpenQA.Selenium.Remote.Response)">
            <summary>
            Find the element in the response
            </summary>
            <param name="response">Response from the browser</param>
            <returns>Element from the page</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.GetElementsFromResponse(OpenQA.Selenium.Remote.Response)">
            <summary>
            Finds the elements that are in the response
            </summary>
            <param name="response">Response from the browser</param>
            <returns>Collection of elements</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Dispose(System.Boolean)">
            <summary>
            Stops the client from running
            </summary>
            <param name="disposing">if its in the process of disposing</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(OpenQA.Selenium.ICapabilities)">
            <summary>
            Starts a session with the driver
            </summary>
            <param name="desiredCapabilities">Capabilities of the browser</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.GetLegacyCapabilitiesDictionary(OpenQA.Selenium.ICapabilities)">
            <summary>
            Gets the capabilities as a dictionary supporting legacy drivers.
            </summary>
            <param name="legacyCapabilities">The dictionary to return.</param>
            <returns>A Dictionary consisting of the capabilities requested.</returns>
            <remarks>This method is only transitional. Do not rely on it. It will be removed
            once browser driver capability formats stabilize.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.GetCapabilitiesDictionary(OpenQA.Selenium.ICapabilities)">
            <summary>
            Gets the capabilities as a dictionary.
            </summary>
            <param name="capabilitiesToConvert">The dictionary to return.</param>
            <returns>A Dictionary consisting of the capabilities requested.</returns>
            <remarks>This method is only transitional. Do not rely on it. It will be removed
            once browser driver capability formats stabilize.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Execute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes a command with this driver .
            </summary>
            <param name="driverCommandToExecute">A <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/> value representing the command to execute.</param>
            <param name="parameters">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the names and values of the parameters of the command.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.Response"/> containing information about the success or failure of the command and any data returned by the command.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.StartClient">
            <summary>
            Starts the command executor, enabling communication with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.StopClient">
            <summary>
            Stops the command executor, ending further communication with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElement(System.String,System.String)">
            <summary>
            Finds an element matching the given mechanism and value.
            </summary>
            <param name="mechanism">The mechanism by which to find the element.</param>
            <param name="value">The value to use to search for the element.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the given criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElements(System.String,System.String)">
            <summary>
            Finds all elements matching the given mechanism and value.
            </summary>
            <param name="mechanism">The mechanism by which to find the elements.</param>
            <param name="value">The value to use to search for the elements.</param>
            <returns>A collection of all of the <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the given criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.ExecuteScriptCommand(System.String,System.String,System.Object[])">
            <summary>
            Executes JavaScript in the context of the currently selected frame or window using a specific command.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="commandName">The name of the command to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.ConvertArgumentsToJavaScriptObjects(System.Object[])">
            <summary>
            Converts the arguments to JavaScript objects.
            </summary>
            <param name="args">The arguments.</param>
            <returns>The list of the arguments converted to JavaScript objects.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteWebElement">
            <summary>
            RemoteWebElement allows you to have access to specific items that are found on the page
            </summary>
            <seealso cref="T:OpenQA.Selenium.IWebElement"/>
            <seealso cref="T:OpenQA.Selenium.ILocatable"/>
        </member>
        <member name="F:OpenQA.Selenium.Remote.RemoteWebElement.ElementReferencePropertyName">
            <summary>
            The property name that represents a web element in the wire protocol.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.RemoteWebElement.LegacyElementReferencePropertyName">
            <summary>
            The property name that represents a web element in the legacy dialect of the wire protocol.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> class.
            </summary>
            <param name="parentDriver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> instance hosting this element.</param>
            <param name="id">The ID assigned to the element.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.WrappedDriver">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebDriver"/> used to find this element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.TagName">
            <summary>
            Gets the tag name of this element.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.Remote.RemoteWebElement.TagName"/> property returns the tag name of the
            element, not the value of the name attribute. For example, it will return
            "input" for an element specified by the HTML markup &lt;input name="foo" /&gt;.
            </remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Text">
            <summary>
            Gets the innerText of this element, without any leading or trailing whitespace,
            and with other whitespace collapsed.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Enabled">
            <summary>
            Gets a value indicating whether or not this element is enabled.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.Remote.RemoteWebElement.Enabled"/> property will generally
            return <see langword="true"/> for everything except explicitly disabled input elements.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Selected">
            <summary>
            Gets a value indicating whether or not this element is selected.
            </summary>
            <remarks>This operation only applies to input elements such as checkboxes,
            options in a select element and radio buttons.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Location">
            <summary>
            Gets a <see cref="T:System.Drawing.Point"/> object containing the coordinates of the upper-left corner
            of this element relative to the upper-left corner of the page.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Size">
            <summary>
            Gets a <see cref="P:OpenQA.Selenium.Remote.RemoteWebElement.Size"/> object containing the height and width of this element.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Displayed">
            <summary>
            Gets a value indicating whether or not this element is displayed.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.Remote.RemoteWebElement.Displayed"/> property avoids the problem
            of having to parse an element's "style" attribute to determine
            visibility of an element.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.LocationOnScreenOnceScrolledIntoView">
            <summary>
            Gets the point where the element would be when scrolled into view.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Coordinates">
            <summary>
            Gets the coordinates identifying the location of this element using
            various frames of reference.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.OpenQA#Selenium#Internal#IWebElementReference#ElementReferenceId">
            <summary>
            Gets the internal ID of the element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Id">
            <summary>
            Gets the ID of the element
            </summary>
            <remarks>This property is internal to the WebDriver instance, and is
            not intended to be used in your code. The element's ID has no meaning
            outside of internal WebDriver usage, so it would be improper to scope
            it as public. However, both subclasses of <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/>
            and the parent driver hosting the element have a need to access the
            internal element ID. Therefore, we have two properties returning the
            same value, one scoped as internal, the other as protected.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Clear">
            <summary>
            Clears the content of this element.
            </summary>
            <remarks>If this element is a text entry element, the <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.Clear"/>
            method will clear the value. It has no effect on other elements. Text entry elements
            are defined as elements with INPUT or TEXTAREA tags.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.SendKeys(System.String)">
            <summary>
            Simulates typing text into the element.
            </summary>
            <param name="text">The text to type into the element.</param>
            <remarks>The text to be typed may include special characters like arrow keys,
            backspaces, function keys, and so on. Valid special keys are defined in
            <see cref="T:OpenQA.Selenium.Keys"/>.</remarks>
            <seealso cref="T:OpenQA.Selenium.Keys"/>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">Thrown when the target element is not enabled.</exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">Thrown when the target element is not visible.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Submit">
            <summary>
            Submits this element to the web server.
            </summary>
            <remarks>If this current element is a form, or an element within a form,
            then this will be submitted to the web server. If this causes the current
            page to change, then this method will attempt to block until the new page
            is loaded.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Click">
            <summary>
            Clicks this element.
            </summary>
            <remarks>
            Click this element. If the click causes a new page to load, the <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.Click"/>
            method will attempt to block until the page has loaded. After calling the
            <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.Click"/> method, you should discard all references to this
            element unless you know that the element and the page will still be present.
            Otherwise, any further operations performed on this element will have an undefined
            behavior.
            </remarks>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">Thrown when the target element is not enabled.</exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">Thrown when the target element is not visible.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute for this element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The attribute's current value. Returns a <see langword="null"/> if the
            value is not set.</returns>
            <remarks>The <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.GetAttribute(System.String)"/> method will return the current value
            of the attribute, even if the value has been modified after the page has been
            loaded. Note that the value of the following attributes will be returned even if
            there is no explicit attribute on the element:
            <list type="table">
            <listheader>
            <term>Attribute name</term>
            <term>Value returned if not explicitly specified</term>
            <term>Valid element types</term>
            </listheader>
            <item>
            <description>checked</description>
            <description>checked</description>
            <description>Check Box</description>
            </item>
            <item>
            <description>selected</description>
            <description>selected</description>
            <description>Options in Select elements</description>
            </item>
            <item>
            <description>disabled</description>
            <description>disabled</description>
            <description>Input and other UI elements</description>
            </item>
            </list>
            </remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.GetProperty(System.String)">
            <summary>
            Gets the value of a JavaScript property of this element.
            </summary>
            <param name="propertyName">The name JavaScript the JavaScript property to get the value of.</param>
            <returns>The JavaScript property's current value. Returns a <see langword="null"/> if the
            value is not set or the property does not exist.</returns>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.GetCssValue(System.String)">
            <summary>
            Gets the value of a CSS property of this element.
            </summary>
            <param name="propertyName">The name of the CSS property to get the value of.</param>
            <returns>The value of the specified CSS property.</returns>
            <remarks>The value returned by the <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.GetCssValue(System.String)"/>
            method is likely to be unpredictable in a cross-browser environment.
            Color values should be returned as hex strings. For example, a
            "background-color" property set as "green" in the HTML source, will
            return "#008000" for its value.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first <see cref="T:OpenQA.Selenium.IWebElement"/> using the given method.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">If no element matches the criteria.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByLinkText(System.String)">
            <summary>
            Finds the first of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element </param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementByLinkText("linktext")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByLinkText(System.String)">
            <summary>
            Finds the first of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element </param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByLinkText("linktext")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the element</param>
            <returns>IWebElement object so that you can interact with that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementById("id")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the Element</param>
            <returns>ReadOnlyCollection of Elements that match the object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsById("id")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByName(System.String)">
            <summary>
            Finds the first of elements that match the name supplied
            </summary>
            <param name="name">Name of the element</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            elem = driver.FindElementsByName("name")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByName(System.String)">
            <summary>
            Finds a list of elements that match the name supplied
            </summary>
            <param name="name">Name of element</param>
            <returns>ReadOnlyCollect of IWebElement objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByName("name")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByTagName(System.String)">
            <summary>
            Finds the first of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">tag name of the element</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByTagName("tag")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByTagName(System.String)">
            <summary>
            Finds a list of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">DOM Tag of the element on the page</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByTagName("tag")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByClassName(System.String)">
            <summary>
            Finds the first element in the page that matches the CSS Class supplied
            </summary>
            <param name="className">CSS class name of the element on the page</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByClassName(System.String)">
            <summary>
            Finds a list of elements that match the class name supplied
            </summary>
            <param name="className">CSS class name of the elements on the page</param>
            <returns>ReadOnlyCollection of IWebElement object so that you can interact with those objects</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByXPath(System.String)">
            <summary>
            Finds the first of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to the element</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByXPath("//table/tbody/tr/td/a");
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByXPath(System.String)">
            <summary>
            Finds a list of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to element on the page</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByXpath("//tr/td/a")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first of elements that match the part of the link text supplied
            </summary>
            <param name="partialLinkText">part of the link text</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByPartialLinkText("partOfLink")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds a list of elements that match the link text supplied
            </summary>
            <param name="partialLinkText">part of the link text</param>
            <returns>ReadOnlyCollection<![CDATA[<IWebElement>]]> objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByPartialLinkText("partOfTheLink")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByCssSelector(System.String)">
            <summary>
            Finds all elements matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of this element on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.GetHashCode">
            <summary>
            Method to get the hash code of the element
            </summary>
            <returns>Integer of the hash code for the element</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Equals(System.Object)">
            <summary>
            Compares if two elements are equal
            </summary>
            <param name="obj">Object to compare against</param>
            <returns>A boolean if it is equal or not</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.OpenQA#Selenium#Internal#IWebElementReference#ToDictionary">
            <summary>
            Converts an object into an object that represents an element for the wire protocol.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> that represents an element in the wire protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElement(System.String,System.String)">
            <summary>
            Finds a child element matching the given mechanism and value.
            </summary>
            <param name="mechanism">The mechanism by which to find the element.</param>
            <param name="value">The value to use to search for the element.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the given criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElements(System.String,System.String)">
            <summary>
            Finds all child elements matching the given mechanism and value.
            </summary>
            <param name="mechanism">The mechanism by which to find the elements.</param>
            <param name="value">The value to use to search for the elements.</param>
            <returns>A collection of all of the <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the given criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Execute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes a command on this element using the specified parameters.
            </summary>
            <param name="commandToExecute">The <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/> to execute against this element.</param>
            <param name="parameters">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing names and values of the parameters for the command.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Remote.Response"/> object containing the result of the command execution.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElementFactory.CreateElement(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates a <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> from a dictionary containing a reference to an element.
            </summary>
            <param name="elementDictionary">The dictionary containing the element reference.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> containing the information from the specified dictionary.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElementFactory.ContainsElementReference(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Gets a value indicating wether the specified dictionary represents a reference to a web element.
            </summary>
            <param name="elementDictionary">The dictionary to check.</param>
            <returns><see langword="true"/> if the dictionary contains an element reference; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteWebStorage">
            <summary>
            Provides remote access to the <see cref="T:OpenQA.Selenium.Html5.IWebStorage"/> API.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebStorage.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebStorage"/> class.
            </summary>
            <param name="driver">The driver instance.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebStorage.LocalStorage">
            <summary>
            Gets the local storage for the site currently opened in the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebStorage.SessionStorage">
            <summary>
            Gets the session storage for the site currently opened in the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteWindow">
            <summary>
            Defines the interface through which the user can manipulate the browser window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWindow.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWindow"/> class.
            </summary>
            <param name="driver">Instance of the driver currently in use</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWindow.Position">
            <summary>
            Gets or sets the position of the browser window relative to the upper-left corner of the screen.
            </summary>
            <remarks>When setting this property, it should act as the JavaScript window.moveTo() method.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWindow.Size">
            <summary>
            Gets or sets the size of the outer browser window, including title bars and window borders.
            </summary>
            <remarks>When setting this property, it should act as the JavaScript window.resizeTo() method.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWindow.Maximize">
            <summary>
            Maximizes the current window if it is not already maximized.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWindow.Minimize">
            <summary>
            Minimizes the current window if it is not already maximized.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWindow.FullScreen">
            <summary>
            Sets the current window to full screen if it is not already in that state.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.Response">
            <summary>
            Handles reponses from the browser
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.Response"/> class
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.#ctor(OpenQA.Selenium.Remote.SessionId)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.Response"/> class
            </summary>
            <param name="sessionId">Session ID in use</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Response.Value">
            <summary>
            Gets or sets the value from JSON.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Response.SessionId">
            <summary>
            Gets or sets the session ID.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Response.Status">
            <summary>
            Gets or sets the status value of the response.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Response.IsSpecificationCompliant">
            <summary>
            Gets a value indicating whether this response is compliant with the WebDriver specification.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.FromJson(System.String)">
            <summary>
            Returns a new <see cref="T:OpenQA.Selenium.Remote.Response"/> from a JSON-encoded string.
            </summary>
            <param name="value">The JSON string to deserialize into a <see cref="T:OpenQA.Selenium.Remote.Response"/>.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.Response"/> object described by the JSON string.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.ToJson">
            <summary>
            Returns this object as a JSON-encoded string.
            </summary>
            <returns>A JSON-encoded string representing this <see cref="T:OpenQA.Selenium.Remote.Response"/> object.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.ToString">
            <summary>
            Returns the object as a string.
            </summary>
            <returns>A string with the Session ID, status value, and the value from JSON.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.SessionId">
            <summary>
            Provides a mechanism for maintaining a session for a test
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.SessionId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.SessionId"/> class
            </summary>
            <param name="opaqueKey">Key for the session in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.SessionId.ToString">
            <summary>
            Get the value of the key
            </summary>
            <returns>The key in use</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.SessionId.GetHashCode">
            <summary>
            Get the hash code of the key
            </summary>
            <returns>The hash code of the key</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.SessionId.Equals(System.Object)">
            <summary>
            Compares two Sessions
            </summary>
            <param name="obj">Session to compare</param>
            <returns>True if they are equal or False if they are not</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.StackTraceElement">
            <summary>
            Gives properties to get a stack trace
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.StackTraceElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.StackTraceElement"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.StackTraceElement.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.StackTraceElement"/> class using the given property values.
            </summary>
            <param name="elementAttributes">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the names and values for the properties of this <see cref="T:OpenQA.Selenium.Remote.StackTraceElement"/>.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.StackTraceElement.FileName">
            <summary>
            Gets or sets the value of the filename in the stack
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.StackTraceElement.ClassName">
            <summary>
            Gets or sets the value of the Class name in the stack trace
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.StackTraceElement.LineNumber">
            <summary>
            Gets or sets the line number
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.StackTraceElement.MethodName">
            <summary>
            Gets or sets the Method name in the stack trace
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.StackTraceElement.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.W3CWireProtocolCommandInfoRepository">
            <summary>
            Holds the information about all commands specified by the JSON wire protocol.
            This class cannot be inherited, as it is intended to be a singleton, and
            allowing subclasses introduces the possibility of multiple instances.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.W3CWireProtocolCommandInfoRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.W3CWireProtocolCommandInfoRepository"/> class.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.W3CWireProtocolCommandInfoRepository.SpecificationLevel">
            <summary>
            Gets the level of the W3C WebDriver specification that this repository supports.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.W3CWireProtocolCommandInfoRepository.InitializeCommandDictionary">
            <summary>
            Initializes the dictionary of commands for the CommandInfoRepository
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.WebDriverError">
            <summary>
            Represents an error condition from a remote end using the W3C specification
            dialect of the wire protocol.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.ElementClickIntercepted">
            <summary>
            Represents the element click intercepted error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.ElementNotSelectable">
            <summary>
            Represents the element not selectable error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.ElementNotInteractable">
            <summary>
            Represents the element not interactable error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.ElementNotVisible">
            <summary>
            Represents the element not visible error.
            </summary>
            TODO: Remove this string; it is no longer valid in the specification.
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.InsecureCertificate">
            <summary>
            Represents the insecure certificate error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.InvalidArgument">
            <summary>
            Represents the invalid argument error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.InvalidCookieDomain">
            <summary>
            Represents the invalid cookie domain error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.InvalidCoordinates">
            <summary>
            Represents the invalid coordinates error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.InvalidElementCoordinates">
            <summary>
            Represents the invalid element coordinates error.
            </summary>
            TODO: Remove this string; it is no longer valid in the specification.
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.InvalidElementState">
            <summary>
            Represents the invalid element state error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.InvalidSelector">
            <summary>
            Represents the invalid selector error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.InvalidSessionId">
            <summary>
            Represents the invalid session ID error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.JavaScriptError">
            <summary>
            Represents the unhandled JavaScript error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.MoveTargetOutOfBounds">
            <summary>
            Represents the move target out of bounds error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.NoSuchAlert">
            <summary>
            Represents the no such alert error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.NoSuchCookie">
            <summary>
            Represents the no such cookie error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.NoSuchElement">
            <summary>
            Represents the no such element error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.NoSuchFrame">
            <summary>
            Represents the no such alert frame.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.NoSuchWindow">
            <summary>
            Represents the no such alert window.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.ScriptTimeout">
            <summary>
            Represents the script timeout error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.SessionNotCreated">
            <summary>
            Represents the session not created error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.StaleElementReference">
            <summary>
            Represents the stale element reference error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.Timeout">
            <summary>
            Represents the timeout error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.UnableToSetCookie">
            <summary>
            Represents the unable to set cookie error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.UnableToCaptureScreen">
            <summary>
            Represents the unable to capture screen error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.UnexpectedAlertOpen">
            <summary>
            Represents the unexpected alert open error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.UnknownCommand">
            <summary>
            Represents the unknown command error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.UnknownError">
            <summary>
            Represents an unknown error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.UnknownMethod">
            <summary>
            Represents the unknown method error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.WebDriverError.UnsupportedOperation">
            <summary>
            Represents the unsupported operation error.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.WebDriverError.ResultFromError(System.String)">
            <summary>
            Converts a string error to a <see cref="T:OpenQA.Selenium.WebDriverResult"/> value.
            </summary>
            <param name="error">The error string to convert.</param>
            <returns>The converted <see cref="T:OpenQA.Selenium.WebDriverResult"/> value.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.WebDriverWireProtocolCommandInfoRepository">
            <summary>
            Holds the information about all commands specified by the JSON wire protocol.
            This class cannot be inherited, as it is intended to be a singleton, and
            allowing subclasses introduces the possibility of multiple instances.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.WebDriverWireProtocolCommandInfoRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.WebDriverWireProtocolCommandInfoRepository"/> class.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.WebDriverWireProtocolCommandInfoRepository.SpecificationLevel">
            <summary>
            Gets the level of the W3C WebDriver specification that this repository supports.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.WebDriverWireProtocolCommandInfoRepository.InitializeCommandDictionary">
            <summary>
            Initializes the dictionary of commands for the CommandInfoRepository
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.DriverService">
            <summary>
            Exposes the service provided by a native WebDriver server executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.#ctor(System.String,System.Int32,System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverService"/> class.
            </summary>
            <param name="servicePath">The full path to the directory containing the executable providing the service to drive the browser.</param>
            <param name="port">The port on which the driver executable should listen.</param>
            <param name="driverServiceExecutableName">The file name of the driver service executable.</param>
            <param name="driverServiceDownloadUrl">A URL at which the driver service executable may be downloaded.</param>
            <exception cref="T:System.ArgumentException">
            If the path specified is <see langword="null"/> or an empty string.
            </exception>
            <exception cref="T:OpenQA.Selenium.DriverServiceNotFoundException">
            If the specified driver service executable does not exist in the specified directory.
            </exception>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.ServiceUrl">
            <summary>
            Gets the Uri of the service.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.HostName">
            <summary>
            Gets or sets the host name of the service. Defaults to "localhost."
            </summary>
            <remarks>
            Most driver service executables do not allow connections from remote
            (non-local) machines. This property can be used as a workaround so
            that an IP address (like "127.0.0.1" or "::1") can be used instead.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.Port">
            <summary>
            Gets or sets the port of the service.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.SuppressInitialDiagnosticInformation">
            <summary>
            Gets or sets a value indicating whether the initial diagnostic information is suppressed
            when starting the driver server executable. Defaults to <see langword="false"/>, meaning
            diagnostic information should be shown by the driver server executable.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.IsRunning">
            <summary>
            Gets a value indicating whether the service is running.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.HideCommandPromptWindow">
            <summary>
            Gets or sets a value indicating whether the command prompt window of the service should be hidden.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.ProcessId">
            <summary>
            Gets the process ID of the running driver service executable. Returns 0 if the process is not running.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.DriverServiceExecutableName">
            <summary>
            Gets the executable file name of the driver service.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.InitializationTimeout">
            <summary>
            Gets a value indicating the time to wait for an initial connection before timing out.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.TerminationTimeout">
            <summary>
            Gets a value indicating the time to wait for the service to terminate before forcing it to terminate.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.HasShutdown">
            <summary>
            Gets a value indicating whether the service has a shutdown API that can be called to terminate
            it gracefully before forcing a termination.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.IsInitialized">
            <summary>
            Gets a value indicating whether the service is responding to HTTP requests.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.Dispose">
            <summary>
            Releases all resources associated with this <see cref="T:OpenQA.Selenium.DriverService"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.Start">
            <summary>
            Starts the DriverService.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.FindDriverServiceExecutable(System.String,System.Uri)">
            <summary>
            Finds the specified driver service executable.
            </summary>
            <param name="executableName">The file name of the executable to find.</param>
            <param name="downloadUrl">A URL at which the driver service executable may be downloaded.</param>
            <returns>The directory containing the driver service executable.</returns>
            <exception cref="T:OpenQA.Selenium.DriverServiceNotFoundException">
            If the specified driver service executable does not exist in the current directory or in a directory on the system path.
            </exception>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.Dispose(System.Boolean)">
            <summary>
            Releases all resources associated with this <see cref="T:OpenQA.Selenium.DriverService"/>.
            </summary>
            <param name="disposing"><see langword="true"/> if the Dispose method was explicitly called; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.Stop">
            <summary>
            Stops the DriverService.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.WaitForServiceInitialization">
            <summary>
            Waits until a the service is initialized, or the timeout set
            by the <see cref="P:OpenQA.Selenium.DriverService.InitializationTimeout"/> property is reached.
            </summary>
            <returns><see langword="true"/> if the service is properly started and receiving HTTP requests;
            otherwise; <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.DriverServiceNotFoundException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverServiceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverServiceNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverServiceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverServiceNotFoundException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverServiceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverServiceNotFoundException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverServiceNotFoundException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.Edge.EdgeDriver">
            <summary>
            Provides a mechanism to write tests against Edge
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriver.#ctor(OpenQA.Selenium.Edge.EdgeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/> class using the specified options.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.Edge.EdgeOptions"/> to be used with the Edge driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriver.#ctor(OpenQA.Selenium.Edge.EdgeDriverService)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/> class using the specified driver service.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Edge.EdgeDriverService"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/> class using the specified path
            to the directory containing EdgeDriver.exe.
            </summary>
            <param name="edgeDriverDirectory">The full path to the directory containing EdgeDriver.exe.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriver.#ctor(System.String,OpenQA.Selenium.Edge.EdgeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/> class using the specified path
            to the directory containing EdgeDriver.exe and options.
            </summary>
            <param name="edgeDriverDirectory">The full path to the directory containing EdgeDriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Edge.EdgeOptions"/> to be used with the Edge driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriver.#ctor(System.String,OpenQA.Selenium.Edge.EdgeOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/> class using the specified path
            to the directory containing EdgeDriver.exe, options, and command timeout.
            </summary>
            <param name="edgeDriverDirectory">The full path to the directory containing EdgeDriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Edge.EdgeOptions"/> to be used with the Edge driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriver.#ctor(OpenQA.Selenium.Edge.EdgeDriverService,OpenQA.Selenium.Edge.EdgeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/> class using the specified
            <see cref="T:OpenQA.Selenium.Edge.EdgeDriverService"/> and options.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Edge.EdgeDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Edge.EdgeOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriver.#ctor(OpenQA.Selenium.Edge.EdgeDriverService,OpenQA.Selenium.Edge.EdgeOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/> class using the specified <see cref="T:OpenQA.Selenium.Edge.EdgeDriverService"/>.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Edge.EdgeDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Edge.EdgeOptions"/> to be used with the Edge driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="T:OpenQA.Selenium.Edge.EdgeDriverService">
            <summary>
            Exposes the service provided by the native MicrosoftWebDriver executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriverService.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeDriverService"/> class.
            </summary>
            <param name="executablePath">The full path to the EdgeDriver executable.</param>
            <param name="executableFileName">The file name of the EdgeDriver executable.</param>
            <param name="port">The port on which the EdgeDriver executable should listen.</param>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeDriverService.Host">
            <summary>
            Gets or sets the value of the host adapter on which the Edge driver service should listen for connections.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeDriverService.Package">
            <summary>
            Gets or sets the value of the package the Edge driver service will launch and automate.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeDriverService.UseVerboseLogging">
            <summary>
            Gets or sets a value indicating whether the service should use verbose logging.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeDriverService.UseSpecCompliantProtocol">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:OpenQA.Selenium.Edge.EdgeDriverService"/> instance
            should use the a protocol dialect compliant with the W3C WebDriver Specification.
            </summary>
            <remarks>
            Setting this property to a non-<see langword="null"/> value for driver
            executables matched to versions of Windows before the 2018 Fall Creators
            Update will result in a the driver executable shutting down without
            execution, and all commands will fail. Do not set this property unless
            you are certain your version of the MicrosoftWebDriver.exe supports the
            --w3c and --jwp command-line arguments.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeDriverService.HasShutdown">
            <summary>
            Gets a value indicating whether the service has a shutdown API that can be called to terminate
            it gracefully before forcing a termination.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeDriverService.TerminationTimeout">
            <summary>
            Gets a value indicating the time to wait for the service to terminate before forcing it to terminate.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeDriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriverService.CreateDefaultService">
            <summary>
            Creates a default instance of the EdgeDriverService.
            </summary>
            <returns>A EdgeDriverService that implements default settings.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriverService.CreateDefaultService(System.String)">
            <summary>
            Creates a default instance of the EdgeDriverService using a specified path to the EdgeDriver executable.
            </summary>
            <param name="driverPath">The directory containing the EdgeDriver executable.</param>
            <returns>A EdgeDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriverService.CreateDefaultService(System.String,System.String)">
            <summary>
            Creates a default instance of the EdgeDriverService using a specified path to the EdgeDriver executable with the given name.
            </summary>
            <param name="driverPath">The directory containing the EdgeDriver executable.</param>
            <param name="driverExecutableFileName">The name of the EdgeDriver executable file.</param>
            <returns>A EdgeDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeDriverService.CreateDefaultService(System.String,System.String,System.Int32)">
            <summary>
            Creates a default instance of the EdgeDriverService using a specified path to the EdgeDriver executable with the given name and listening port.
            </summary>
            <param name="driverPath">The directory containing the EdgeDriver executable.</param>
            <param name="driverExecutableFileName">The name of the EdgeDriver executable file</param>
            <param name="port">The port number on which the driver will listen</param>
            <returns>A EdgeDriverService using the specified port.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Edge.EdgePageLoadStrategy">
            <summary>
            Specifies the behavior of waiting for page loads in the Edge driver.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Edge.EdgePageLoadStrategy.Default">
            <summary>
            Indicates the behavior is not set.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Edge.EdgePageLoadStrategy.Normal">
            <summary>
            Waits for pages to load and ready state to be 'complete'.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Edge.EdgePageLoadStrategy.Eager">
            <summary>
            Waits for pages to load and for ready state to be 'interactive' or 'complete'.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Edge.EdgePageLoadStrategy.None">
            <summary>
            Does not wait for pages to load, returning immediately.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Edge.EdgeOptions">
            <summary>
            Class to manage options specific to <see cref="T:OpenQA.Selenium.Edge.EdgeDriver"/>
            </summary>
            <example>
            <code>
            EdgeOptions options = new EdgeOptions();
            </code>
            <para></para>
            <para>For use with EdgeDriver:</para>
            <para></para>
            <code>
            EdgeDriver driver = new EdgeDriver(options);
            </code>
            <para></para>
            <para>For use with RemoteWebDriver:</para>
            <para></para>
            <code>
            RemoteWebDriver driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), options.ToCapabilities());
            </code>
            </example>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeOptions.UseInPrivateBrowsing">
            <summary>
            Gets or sets a value indicating whether the browser should be launched using
            InPrivate browsing.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Edge.EdgeOptions.StartPage">
            <summary>
            Gets or sets the URL of the page with which the browser will be navigated to on launch.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeOptions.AddExtensionPath(System.String)">
            <summary>
            Adds a path to an extension that is to be used with the Edge driver.
            </summary>
            <param name="extensionPath">The full path and file name of the extension.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeOptions.AddExtensionPaths(System.String[])">
            <summary>
            Adds a list of paths to an extensions that are to be used with the Edge driver.
            </summary>
            <param name="extensionPathsToAdd">An array of full paths with file names of extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeOptions.AddExtensionPaths(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a list of paths to an extensions that are to be used with the Edge driver.
            </summary>
            <param name="extensionPathsToAdd">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of full paths with file names of extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeOptions.AddAdditionalCapability(System.String,System.Object)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Edge driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.Edge.EdgeOptions.AddAdditionalCapability(System.String,System.Object)"/> where <paramref name="capabilityName"/>
            has already been added will overwrite the existing value with the new value in <paramref name="capabilityValue"/></remarks>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeOptions.ToCapabilities">
            <summary>
            Returns DesiredCapabilities for Edge with these options included as
            capabilities. This copies the options. Further changes will not be
            reflected in the returned capabilities.
            </summary>
            <returns>The DesiredCapabilities for Edge with these options.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Edge.EdgeWebElement">
            <summary>
            Provides a mechanism to get elements off the page for test
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Edge.EdgeWebElement.#ctor(OpenQA.Selenium.Edge.EdgeDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Edge.EdgeWebElement"/> class
            </summary>
            <param name="parent">Driver in use</param>
            <param name="elementId">Id of the element</param>
        </member>
        <member name="T:OpenQA.Selenium.ElementClickInterceptedException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementClickInterceptedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementClickInterceptedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementClickInterceptedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementClickInterceptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.ElementNotInteractableException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotInteractableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotInteractableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotInteractableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotInteractableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.ElementNotSelectableException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotSelectableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotSelectableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotSelectableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotSelectableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotInteractableException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.ElementNotVisibleException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxBinary">
            <summary>
            Represents the binary associated with Firefox.
            </summary>
            <remarks>The <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> class is responsible for instantiating the
            Firefox process, and the operating system environment in which it runs.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> class located at a specific file location.
            </summary>
            <param name="pathToFirefoxBinary">Full path and file name to the Firefox executable.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.Timeout">
            <summary>
            Gets or sets the timeout to wait for Firefox to be available for command execution.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.BinaryExecutable">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Firefox.Internal.Executable"/> associated with this <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.IsOnLinux">
            <summary>
            Gets a value indicating whether the current operating system is Linux.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.ExtraEnvironmentVariables">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing string key-value pairs
            representing any operating system environment variables beyond the defaults.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.StartProfile(OpenQA.Selenium.Firefox.FirefoxProfile,System.String[])">
            <summary>
            Starts Firefox using the specified profile and command-line arguments.
            </summary>
            <param name="profile">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> to use with this instance of Firefox.</param>
            <param name="commandLineArguments">The command-line arguments to use in starting Firefox.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.SetEnvironmentProperty(System.String,System.String)">
            <summary>
            Sets a variable to be used in the Firefox execution environment.
            </summary>
            <param name="propertyName">The name of the environment variable to set.</param>
            <param name="value">The value of the environment variable to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.WaitForProcessExit">
            <summary>
            Waits for the process to complete execution.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.ToString">
            <summary>
            Returns a <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.
            </summary>
            <returns>A <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.StartFirefoxProcess">
            <summary>
            Starts the Firefox process.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> and optionally
            releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and resources;
            <see langword="false"/> to only release unmanaged resources.</param>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxDriver">
            <summary>
            Provides a way to access Firefox to run tests.
            </summary>
            <remarks>
            When the FirefoxDriver object has been instantiated the browser will load. The test can then navigate to the URL under test and
            start your test.
            <para>
            In the case of the FirefoxDriver, you can specify a named profile to be used, or you can let the
            driver create a temporary, anonymous profile. A custom extension allowing the driver to communicate
            to the browser will be installed into the profile.
            </para>
            </remarks>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new FirefoxDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                }
            }
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.ProfileCapabilityName">
            <summary>
            The name of the ICapabilities setting to use to define a custom Firefox profile.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.BinaryCapabilityName">
            <summary>
            The name of the ICapabilities setting to use to define a custom location for the
            Firefox executable.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.DefaultPort">
            <summary>
            The default port on which to communicate with the Firefox extension.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.DefaultEnableNativeEvents">
            <summary>
            Indicates whether native events is enabled by default for this platform.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.AcceptUntrustedCertificates">
            <summary>
            Indicates whether the driver will accept untrusted SSL certificates.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.AssumeUntrustedCertificateIssuer">
            <summary>
            Indicates whether the driver assume the issuer of untrusted certificates is untrusted.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(OpenQA.Selenium.Firefox.FirefoxOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class using the specified options. Uses the Mozilla-provided Marionette driver implementation.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions"/> to be used with the Firefox driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(OpenQA.Selenium.Firefox.FirefoxDriverService)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class using the specified driver service. Uses the Mozilla-provided Marionette driver implementation.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverService"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class using the specified path
            to the directory containing geckodriver.exe.
            </summary>
            <param name="geckoDriverDirectory">The full path to the directory containing geckodriver.exe.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(System.String,OpenQA.Selenium.Firefox.FirefoxOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class using the specified path
            to the directory containing geckodriver.exe and options.
            </summary>
            <param name="geckoDriverDirectory">The full path to the directory containing geckodriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions"/> to be used with the Firefox driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(System.String,OpenQA.Selenium.Firefox.FirefoxOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class using the specified path
            to the directory containing geckodriver.exe, options, and command timeout.
            </summary>
            <param name="geckoDriverDirectory">The full path to the directory containing geckodriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions"/> to be used with the Firefox driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(OpenQA.Selenium.Firefox.FirefoxDriverService,OpenQA.Selenium.Firefox.FirefoxOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class using the specified options, driver service, and timeout. Uses the Mozilla-provided Marionette driver implementation.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions"/> to be used with the Firefox driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(OpenQA.Selenium.Firefox.FirefoxDriverService,OpenQA.Selenium.Firefox.FirefoxOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class using the specified options, driver service, and timeout. Uses the Mozilla-provided Marionette driver implementation.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions"/> to be used with the Firefox driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriver.FileDetector">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.IFileDetector"/> responsible for detecting
            sequences of keystrokes representing file paths and names.
            </summary>
            <remarks>The Firefox driver does not allow a file detector to be set,
            as the server component of the Firefox driver only allows uploads from
            the local computer environment. Attempting to set this property has no
            effect, but does not throw an exception. If you  are attempting to run
            the Firefox driver remotely, use <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> in
            conjunction with a standalone WebDriver server.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriver.IsMarionette">
            <summary>
            Gets a value indicating whether the Firefox driver instance uses
            Mozilla's Marionette implementation. This is a temporary property
            and will be removed when Marionette is available for the release
            channel of Firefox.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.PrepareEnvironment">
            <summary>
            In derived classes, the <see cref="M:OpenQA.Selenium.Firefox.FirefoxDriver.PrepareEnvironment"/> method prepares the environment for test execution.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor">
            <summary>
            Provides a way of executing Commands using the FirefoxDriver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor.#ctor(OpenQA.Selenium.Firefox.FirefoxBinary,OpenQA.Selenium.Firefox.FirefoxProfile,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor"/> class.
            </summary>
            <param name="binary">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> on which to make the connection.</param>
            <param name="profile">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> creating the connection.</param>
            <param name="host">The name of the host on which to connect to the Firefox extension (usually "localhost").</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor.CommandInfoRepository">
            <summary>
            Gets the repository of objects containin information about commands.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor"/> and
            optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and resources;
            <see langword="false"/> to only release unmanaged resources.</param>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel">
            <summary>
            Represents the valid values of logging levels available with the Firefox driver (geckodriver.exe).
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel.Trace">
            <summary>
            Represents the Trace value, the most detailed logging level available.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel.Debug">
            <summary>
            Represents the Debug value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel.Config">
            <summary>
            Represents the Config value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel.Info">
            <summary>
            Represents the Info value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel.Warn">
            <summary>
            Represents the Warn value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel.Error">
            <summary>
            Represents the Error value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel.Fatal">
            <summary>
            Represents the Fatal value, the least detailed logging level available.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriverLogLevel.Default">
            <summary>
            Represents that the logging value is unspecified, and should be the default level.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxDriverServer">
            <summary>
            Provides methods for launching Firefox with the WebDriver extension installed.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverServer.#ctor(OpenQA.Selenium.Firefox.FirefoxBinary,OpenQA.Selenium.Firefox.FirefoxProfile,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverServer"/> class.
            </summary>
            <param name="binary">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> on which to make the connection.</param>
            <param name="profile">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> creating the connection.</param>
            <param name="host">The name of the host on which to connect to the Firefox extension (usually "localhost").</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverServer.ExtensionUri">
            <summary>
            Gets the <see cref="T:System.Uri"/> for communicating with this server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverServer.Start">
            <summary>
            Starts the server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverServer.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverServer"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverServer.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverServer"/> and optionally
            releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and resources;
            <see langword="false"/> to only release unmanaged resources.</param>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxDriverService">
            <summary>
            Exposes the service provided by the native FirefoxDriver executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverService.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriverService"/> class.
            </summary>
            <param name="executablePath">The full path to the Firefox driver executable.</param>
            <param name="executableFileName">The file name of the Firefox driver executable.</param>
            <param name="port">The port on which the Firefox driver executable should listen.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.FirefoxBinaryPath">
            <summary>
            Gets or sets the location of the Firefox binary executable.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.BrowserCommunicationPort">
            <summary>
            Gets or sets the port used by the driver executable to communicate with the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.Host">
            <summary>
            Gets or sets the value of the IP address of the host adapter on which the
            service should listen for connections.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.ConnectToRunningBrowser">
            <summary>
            Gets or sets a value indicating whether to connect to an already-running
            instance of Firefox.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.OpenBrowserToolbox">
            <summary>
            Gets or sets a value indicating whether to open the Firefox Browser Toolbox
            when Firefox is launched.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.InitializationTimeout">
            <summary>
            Gets a value indicating the time to wait for an initial connection before timing out.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.TerminationTimeout">
            <summary>
            Gets a value indicating the time to wait for the service to terminate before forcing it to terminate.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.HasShutdown">
            <summary>
            Gets a value indicating whether the service has a shutdown API that can be called to terminate
            it gracefully before forcing a termination.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverService.CreateDefaultService">
            <summary>
            Creates a default instance of the FirefoxDriverService.
            </summary>
            <returns>A FirefoxDriverService that implements default settings.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverService.CreateDefaultService(System.String)">
            <summary>
            Creates a default instance of the FirefoxDriverService using a specified path to the Firefox driver executable.
            </summary>
            <param name="driverPath">The directory containing the Firefox driver executable.</param>
            <returns>A FirefoxDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverService.CreateDefaultService(System.String,System.String)">
            <summary>
            Creates a default instance of the FirefoxDriverService using a specified path to the Firefox driver executable with the given name.
            </summary>
            <param name="driverPath">The directory containing the Firefox driver executable.</param>
            <param name="driverExecutableFileName">The name of the Firefox driver executable file.</param>
            <returns>A FirefoxDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriverService.FirefoxDriverServiceFileName">
            <summary>
            Returns the Firefox driver filename for the currently running platform
            </summary>
            <returns>The file name of the Firefox driver service executable.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxExtension">
            <summary>
            Provides the ability to install extensions into a <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxExtension"/> class.
            </summary>
            <param name="fileName">The name of the file containing the Firefox extension.</param>
            <remarks>WebDriver attempts to resolve the <paramref name="fileName"/> parameter
            by looking first for the specified file in the directory of the calling assembly,
            then using the full path to the file, if a full path is provided.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxExtension.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxExtension"/> class.
            </summary>
            <param name="fileName">The name of the file containing the Firefox extension.</param>
            <param name="resourceId">The ID of the resource within the assembly containing the extension
            if the file is not present in the file system.</param>
            <remarks>WebDriver attempts to resolve the <paramref name="fileName"/> parameter
            by looking first for the specified file in the directory of the calling assembly,
            then using the full path to the file, if a full path is provided. If the file is
            not found in the file system, WebDriver attempts to locate a resource in the
            executing assembly with the name specified by the <paramref name="resourceId"/>
            parameter.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxExtension.Install(System.String)">
            <summary>
            Installs the extension into a profile directory.
            </summary>
            <param name="profileDirectory">The Firefox profile directory into which to install the extension.</param>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxOptions">
            <summary>
            Class to manage options specific to <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/>
            </summary>
            <remarks>
            Used with the marionette executable wires.exe.
            </remarks>
            <example>
            <code>
            FirefoxOptions options = new FirefoxOptions();
            </code>
            <para></para>
            <para>For use with FirefoxDriver:</para>
            <para></para>
            <code>
            FirefoxDriver driver = new FirefoxDriver(options);
            </code>
            <para></para>
            <para>For use with RemoteWebDriver:</para>
            <para></para>
            <code>
            RemoteWebDriver driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), options.ToCapabilities());
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.#ctor(OpenQA.Selenium.Firefox.FirefoxProfile,OpenQA.Selenium.Firefox.FirefoxBinary,OpenQA.Selenium.Remote.DesiredCapabilities)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxOptions"/> class for the given profile and binary.
            </summary>
            <param name="profile">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> to use in the options.</param>
            <param name="binary">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> to use in the options.</param>
            <param name="capabilities">The <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> to copy into the options.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxOptions.UseLegacyImplementation">
            <summary>
            Gets or sets a value indicating whether to use the legacy driver implementation.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxOptions.Profile">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> object to be used with this instance.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxOptions.BrowserExecutableLocation">
            <summary>
            Gets or sets the path and file name of the Firefox browser executable.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxOptions.LogLevel">
            <summary>
            Gets or sets the logging level of the Firefox driver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.AddArgument(System.String)">
            <summary>
            Adds an argument to be used in launching the Firefox browser.
            </summary>
            <param name="argumentName">The argument to add.</param>
            <remarks>Arguments must be preceeded by two dashes ("--").</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.AddArguments(System.String[])">
            <summary>
            Adds a list arguments to be used in launching the Firefox browser.
            </summary>
            <param name="argumentsToAdd">An array of arguments to add.</param>
            <remarks>Each argument must be preceeded by two dashes ("--").</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.AddArguments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a list arguments to be used in launching the Firefox browser.
            </summary>
            <param name="argumentsToAdd">An array of arguments to add.</param>
            <remarks>Each argument must be preceeded by two dashes ("--").</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.SetPreference(System.String,System.Boolean)">
            <summary>
            Sets a preference in the profile used by Firefox.
            </summary>
            <param name="preferenceName">Name of the preference to set.</param>
            <param name="preferenceValue">Value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.SetPreference(System.String,System.Int32)">
            <summary>
            Sets a preference in the profile used by Firefox.
            </summary>
            <param name="preferenceName">Name of the preference to set.</param>
            <param name="preferenceValue">Value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.SetPreference(System.String,System.Int64)">
            <summary>
            Sets a preference in the profile used by Firefox.
            </summary>
            <param name="preferenceName">Name of the preference to set.</param>
            <param name="preferenceValue">Value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.SetPreference(System.String,System.Double)">
            <summary>
            Sets a preference in the profile used by Firefox.
            </summary>
            <param name="preferenceName">Name of the preference to set.</param>
            <param name="preferenceValue">Value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.SetPreference(System.String,System.String)">
            <summary>
            Sets a preference in the profile used by Firefox.
            </summary>
            <param name="preferenceName">Name of the preference to set.</param>
            <param name="preferenceValue">Value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.AddAdditionalCapability(System.String,System.Object)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Firefox driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.Firefox.FirefoxOptions.AddAdditionalCapability(System.String,System.Object)"/>
            where <paramref name="capabilityName"/> has already been added will overwrite the
            existing value with the new value in <paramref name="capabilityValue"/>.
            Also, by default, calling this method adds capabilities to the options object passed to
            geckodriver.exe.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.AddAdditionalCapability(System.String,System.Object,System.Boolean)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Firefox driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <param name="isGlobalCapability">Indicates whether the capability is to be set as a global
            capability for the driver instead of a Firefox-specific option.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.Firefox.FirefoxOptions.AddAdditionalCapability(System.String,System.Object,System.Boolean)"/>
            where <paramref name="capabilityName"/> has already been added will overwrite the
            existing value with the new value in <paramref name="capabilityValue"/></remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxOptions.ToCapabilities">
            <summary>
            Returns DesiredCapabilities for Firefox with these options included as
            capabilities. This does not copy the options. Further changes will be
            reflected in the returned capabilities.
            </summary>
            <returns>The DesiredCapabilities for Firefox with these options.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxProfile">
            <summary>
            Provides the ability to edit the preferences associated with a Firefox profile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> class using a
            specific profile directory.
            </summary>
            <param name="profileDirectory">The directory containing the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> class using a
            specific profile directory.
            </summary>
            <param name="profileDirectory">The directory containing the profile.</param>
            <param name="deleteSourceOnClean">Delete the source directory of the profile upon cleaning.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.Port">
            <summary>
            Gets or sets the port on which the profile connects to the WebDriver extension.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.ProfileDirectory">
            <summary>
            Gets the directory containing the profile.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.DeleteAfterUse">
            <summary>
            Gets or sets a value indicating whether to delete this profile after use with
            the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.EnableNativeEvents">
            <summary>
            Gets or sets a value indicating whether native events are enabled.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.AlwaysLoadNoFocusLibrary">
            <summary>
            Gets or sets a value indicating whether to always load the library for allowing Firefox
            to execute commands without its window having focus.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.Firefox.FirefoxProfile.AlwaysLoadNoFocusLibrary"/> property is only used on Linux.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.AcceptUntrustedCertificates">
            <summary>
            Gets or sets a value indicating whether Firefox should accept SSL certificates which have
            expired, signed by an unknown authority or are generally untrusted. Set to true
            by default.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.AssumeUntrustedCertificateIssuer">
            <summary>
            Gets or sets a value indicating whether Firefox assume untrusted SSL certificates
            come from an untrusted issuer or are self-signed. Set to true by default.
            </summary>
            <remarks>
            <para>
            Due to limitations within Firefox, it is easy to find out if a certificate has expired
            or does not match the host it was served for, but hard to find out if the issuer of the
            certificate is untrusted. By default, it is assumed that the certificates were not
            issued from a trusted certificate authority.
            </para>
            <para>
            If you receive an "untrusted site" prompt it Firefox when using a certificate that was
            issued by valid issuer, but the certificate has expired or is being served served for
            a different host (e.g. production certificate served in a testing environment) set this
            to false.
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.FromBase64String(System.String)">
            <summary>
            Converts a base64-encoded string into a <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/>.
            </summary>
            <param name="base64">The base64-encoded string containing the profile contents.</param>
            <returns>The constructed <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.AddExtension(System.String)">
            <summary>
            Adds a Firefox Extension to this profile
            </summary>
            <param name="extensionToInstall">The path to the new extension</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetPreference(System.String,System.String)">
            <summary>
            Sets a preference in the profile.
            </summary>
            <param name="name">The name of the preference to add.</param>
            <param name="value">A <see cref="T:System.String"/> value to add to the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetPreference(System.String,System.Int32)">
            <summary>
            Sets a preference in the profile.
            </summary>
            <param name="name">The name of the preference to add.</param>
            <param name="value">A <see cref="T:System.Int32"/> value to add to the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetPreference(System.String,System.Boolean)">
            <summary>
            Sets a preference in the profile.
            </summary>
            <param name="name">The name of the preference to add.</param>
            <param name="value">A <see cref="T:System.Boolean"/> value to add to the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetProxyPreferences(OpenQA.Selenium.Proxy)">
            <summary>
            Set proxy preferences for this profile.
            </summary>
            <param name="proxy">The <see cref="T:OpenQA.Selenium.Proxy"/> object defining the proxy
            preferences for the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.WriteToDisk">
            <summary>
            Writes this in-memory representation of a profile to disk.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.Clean">
            <summary>
            Cleans this Firefox profile.
            </summary>
            <remarks>If this profile is a named profile that existed prior to
            launching Firefox, the <see cref="M:OpenQA.Selenium.Firefox.FirefoxProfile.Clean"/> method removes the WebDriver
            Firefox extension. If the profile is an anonymous profile, the profile
            is deleted.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.ToBase64String">
            <summary>
            Converts the profile into a base64-encoded string.
            </summary>
            <returns>A base64-encoded string containing the contents of the profile.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.AddWebDriverExtension">
            <summary>
            Adds the WebDriver extension for Firefox to the profile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.RemoveWebDriverExtension">
            <summary>
            Removes the WebDriver extension for Firefox to the profile, for use with non-legacy
            FirefoxDriver instances that use geckodriver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.InternalSetProxyPreferences(OpenQA.Selenium.Proxy)">
            <summary>
            Internal implementation to set proxy preferences for this profile.
            </summary>
            <param name="proxy">The <see cref="T:OpenQA.Selenium.Proxy"/> object defining the proxy
            preferences for the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.GenerateProfileDirectoryName">
            <summary>
            Generates a random directory name for the profile.
            </summary>
            <returns>A random directory name for the profile.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.DeleteLockFiles">
            <summary>
            Deletes the lock files for a profile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.InstallExtensions">
            <summary>
            Installs all extensions in the profile in the directory on disk.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.DeleteExtensionsCache">
            <summary>
            Deletes the cache of extensions for this profile, if the cache exists.
            </summary>
            <remarks>If the extensions cache does not exist for this profile, the
            <see cref="M:OpenQA.Selenium.Firefox.FirefoxProfile.DeleteExtensionsCache"/> method performs no operations, but
            succeeds.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.UpdateUserPreferences">
            <summary>
            Writes the user preferences to the profile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.ReadExistingPreferences">
            <summary>
            Reads the existing preferences from the profile.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/>containing key-value pairs representing the preferences.</returns>
            <remarks>Assumes that we only really care about the preferences, not the comments</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetManualProxyPreference(System.String,System.String)">
            <summary>
            Sets a preference for a manually specified proxy.
            </summary>
            <param name="key">The protocol for which to set the proxy.</param>
            <param name="settingString">The setting for the proxy.</param>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxProfileManager">
            <summary>
            Allows the user to enumerate and access existing named Firefox profiles.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfileManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfileManager"/> class.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfileManager.ExistingProfiles">
            <summary>
            Gets a <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile">FirefoxProfiles</see>
            representing the existing named profiles for Firefox.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfileManager.GetProfile(System.String)">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> with a given name.
            </summary>
            <param name="profileName">The name of the profile to get.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> with a given name.
            Returns <see langword="null"/> if no profile with the given name exists.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxWebElement">
            <summary>
            Allows the user to control elements on a page in Firefox.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxWebElement.#ctor(OpenQA.Selenium.Firefox.FirefoxDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/> class.
            </summary>
            <param name="parentDriver">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> instance hosting this element.</param>
            <param name="id">The ID assigned to the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxWebElement.Equals(System.Object)">
            <summary>
            Determines whether two <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/> instances are equal.
            </summary>
            <param name="obj">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/> to compare with the current <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/> is equal to the
            current <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxWebElement.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.Executable">
            <summary>
            Represents the executable file for Firefox.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.Internal.Executable"/> class.
            </summary>
            <param name="userSpecifiedBinaryPath">The path and file name to the Firefox executable.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.Internal.Executable.ExecutablePath">
            <summary>
            Gets the full path to the executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.SetLibraryPath(System.Diagnostics.Process)">
            <summary>
            Sets the library path for the Firefox executable environment.
            </summary>
            <param name="builder">The <see cref="T:System.Diagnostics.Process"/> used to execute the binary.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.LocateFirefoxBinaryFromPlatform">
            <summary>
            Locates the Firefox binary by platform.
            </summary>
            <returns>The full path to the binary.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.GetEnvironmentVariable(System.String,System.String)">
            <summary>
            Retrieves an environment variable
            </summary>
            <param name="name">Name of the variable.</param>
            <param name="defaultValue">Default value of the variable.</param>
            <returns>The value of the variable. If no variable with that name is set, returns the default.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.GetLibraryPathPropertyName">
            <summary>
            Retrieves the platform specific environment property name which contains the library path.
            </summary>
            <returns>The platform specific environment property name which contains the library path.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.FindBinary(System.String[])">
            <summary>
            Walk a PATH to locate binaries with a specified name. Binaries will be searched for in the
            order they are provided.
            </summary>
            <param name="binaryNames">The binary names to search for.</param>
            <returns>The first binary found matching that name.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.ILock">
            <summary>
            Defines the interface through which the mutex port for establishing communication
            with the WebDriver extension can be locked.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.ILock.LockObject(System.TimeSpan)">
            <summary>
            Locks the mutex port.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> describing the amount of time to wait for
            the mutex port to become available.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.ILock.UnlockObject">
            <summary>
            Unlocks the mutex port.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.IniFileReader">
            <summary>
            Parses and reads an INI file.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.IniFileReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.Internal.IniFileReader"/> class.
            </summary>
            <param name="fileName">The full path to the .INI file to be read.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.Internal.IniFileReader.SectionNames">
            <summary>
            Gets a <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing the names of the sections in the .INI file.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.IniFileReader.GetValue(System.String,System.String)">
            <summary>
            Gets a value from the .INI file.
            </summary>
            <param name="sectionName">The section in which to find the key-value pair.</param>
            <param name="valueName">The key of the key-value pair.</param>
            <returns>The value associated with the given section and key.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.SocketLock">
            <summary>
            Provides a mutex-like lock on a socket.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.SocketLock.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.Internal.SocketLock"/> class.
            </summary>
            <param name="lockPort">Port to use to acquire the lock.</param>
            <remarks>The <see cref="T:OpenQA.Selenium.Firefox.Internal.SocketLock"/> class will attempt to acquire the
            specified port number, and wait for it to become free.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.SocketLock.LockObject(System.TimeSpan)">
            <summary>
            Locks the mutex port.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> describing the amount of time to wait for
            the mutex port to become available.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.SocketLock.UnlockObject">
            <summary>
            Unlocks the mutex port.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.SocketLock.Dispose">
            <summary>
            Releases all resources associated with this <see cref="T:OpenQA.Selenium.Firefox.Internal.SocketLock"/>
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Preferences">
            <summary>
            Represents the preferences used by a profile in Firefox.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.Preferences"/> class.
            </summary>
            <param name="defaultImmutablePreferences">A set of preferences that cannot be modified once set.</param>
            <param name="defaultPreferences">A set of default preferences.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.SetPreference(System.String,System.String)">
            <summary>
            Sets a preference.
            </summary>
            <param name="key">The name of the preference to set.</param>
            <param name="value">A <see cref="T:System.String"/> value give the preference.</param>
            <remarks>If the preference already exists in the currently-set list of preferences,
            the value will be updated.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.SetPreference(System.String,System.Int32)">
            <summary>
            Sets a preference.
            </summary>
            <param name="key">The name of the preference to set.</param>
            <param name="value">A <see cref="T:System.Int32"/> value give the preference.</param>
            <remarks>If the preference already exists in the currently-set list of preferences,
            the value will be updated.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.SetPreference(System.String,System.Boolean)">
            <summary>
            Sets a preference.
            </summary>
            <param name="key">The name of the preference to set.</param>
            <param name="value">A <see cref="T:System.Boolean"/> value give the preference.</param>
            <remarks>If the preference already exists in the currently-set list of preferences,
            the value will be updated.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.GetPreference(System.String)">
            <summary>
            Gets a preference from the list of preferences.
            </summary>
            <param name="preferenceName">The name of the preference to retrieve.</param>
            <returns>The value of the preference, or an empty string if the preference is not set.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.AppendPreferences(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Appends this set of preferences to the specified set of preferences.
            </summary>
            <param name="preferencesToAdd">A dictionary containing the preferences to which to
            append these values.</param>
            <remarks>If the preference already exists in <paramref name="preferencesToAdd"/>,
            the value will be updated.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.WriteToFile(System.String)">
            <summary>
            Writes the preferences to a file.
            </summary>
            <param name="filePath">The full path to the file to be written.</param>
        </member>
        <member name="T:OpenQA.Selenium.Html5.AppCacheStatus">
            <summary>
            Represents the application cache status.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Html5.AppCacheStatus.Uncached">
            <summary>
            AppCache status is uncached
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Html5.AppCacheStatus.Idle">
            <summary>
            AppCache status is idle
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Html5.AppCacheStatus.Checking">
            <summary>
            AppCache status is checkint
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Html5.AppCacheStatus.Downloading">
            <summary>
            AppCache status is downloading
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Html5.AppCacheStatus.UpdateReady">
            <summary>
            AppCache status is updated-ready
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Html5.AppCacheStatus.Obsolete">
            <summary>
            AppCache status is obsolete
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.IApplicationCache">
            <summary>
            Defines an interface allowing the user to access application cache status
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IApplicationCache.Status">
            <summary>
            Gets the current state of the application cache.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.IHasApplicationCache">
            <summary>
            Interface allowing the user to determine if the driver instance supports application cache.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IHasApplicationCache.HasApplicationCache">
            <summary>
            Gets a value indicating whether manipulating the application cache is supported for this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IHasApplicationCache.ApplicationCache">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Html5.IApplicationCache"/> object for managing application cache.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.IHasLocationContext">
            <summary>
            Interface allowing the user to determine if the driver instance supports geolocation.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IHasLocationContext.HasLocationContext">
            <summary>
            Gets a value indicating whether manipulating geolocation is supported for this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IHasLocationContext.LocationContext">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Html5.ILocationContext"/> object for managing browser location.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.IHasWebStorage">
            <summary>
            Interface allowing the user to determine if the driver instance supports web storage.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IHasWebStorage.HasWebStorage">
            <summary>
            Gets a value indicating whether web storage is supported for this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IHasWebStorage.WebStorage">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Html5.IWebStorage"/> object for managing web storage.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.ILocalStorage">
            <summary>
            Represents the local storage for the site currently opened in the browser.
            Each site has its own separate storage area.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.ILocalStorage.Count">
            <summary>
            Gets the number of items in local storage.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ILocalStorage.GetItem(System.String)">
            <summary>
            Returns value of the local storage given a key.
            </summary>
            <param name="key">key to for a local storage entry</param>
            <returns>Value of the local storage entry as <see cref="T:System.String"/> given a key.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ILocalStorage.KeySet">
            <summary>
            Returns the set of keys associated with local storage.
            </summary>
            <returns>Returns the set of keys associated with local storage as <see cref="T:System.Collections.Generic.HashSet`1"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ILocalStorage.SetItem(System.String,System.String)">
            <summary>
            Adds key/value pair to local storage.
            </summary>
            <param name="key">storage key</param>
            <param name="value">storage value</param>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ILocalStorage.RemoveItem(System.String)">
            <summary>
            Removes key/value pair from local storage.
            </summary>
            <param name="key">key to remove from storage</param>
            <returns>Value from local storage as <see cref="T:System.String">string</see> for the given key.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ILocalStorage.Clear">
            <summary>
            Clears local storage.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.ILocationContext">
            <summary>
            Interface for location context
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.ILocationContext.PhysicalLocation">
            <summary>
            Gets or sets a value indicating the physical location of the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.ISessionStorage">
            <summary>
            Represents the session storage for the site currently opened in the browser.
            Each site has its own separate storage area.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.ISessionStorage.Count">
            <summary>
            Gets the number of items in session storage.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ISessionStorage.GetItem(System.String)">
            <summary>
            Returns value of the session storage given a key.
            </summary>
            <param name="key">key to for a session storage entry</param>
            <returns>Value of the session storage entry as <see cref="T:System.String"/> given a key.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ISessionStorage.KeySet">
            <summary>
            Returns the set of keys associated with session storage.
            </summary>
            <returns>Returns the set of keys associated with session storage as <see cref="T:System.Collections.Generic.HashSet`1"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ISessionStorage.SetItem(System.String,System.String)">
            <summary>
            Adds key/value pair to session storage.
            </summary>
            <param name="key">storage key</param>
            <param name="value">storage value</param>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ISessionStorage.RemoveItem(System.String)">
            <summary>
            Removes key/value pair from session storage.
            </summary>
            <param name="key">key to remove from storage</param>
            <returns>Value from session storage as <see cref="T:System.String">string</see> for the given key.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Html5.ISessionStorage.Clear">
            <summary>
            Clears local storage.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.IWebStorage">
            <summary>
            Represents both local and session storage for the site currently opened in the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IWebStorage.LocalStorage">
            <summary>
            Gets the local storage for the site currently opened in the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.IWebStorage.SessionStorage">
            <summary>
            Gets the session storage for the site currently opened in the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Html5.Location">
            <summary>
            Represents the physical location of the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Html5.Location.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Html5.Location"/> class.
            </summary>
            <param name="latitude">latitude for current location</param>
            <param name="longitude">longitude for current location</param>
            <param name="altitude">altitude for current location</param>
        </member>
        <member name="P:OpenQA.Selenium.Html5.Location.Latitude">
            <summary>
            Gets the latitude of the current location.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.Location.Longitude">
            <summary>
            Gets the longitude of the current location.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Html5.Location.Altitude">
            <summary>
            Gets the altitude of the current location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Html5.Location.ToString">
            <summary>
            Retuns string represenation for current location.
            </summary>
            <returns>Returns <see cref="T:System.String">string</see> reprsentation for current location.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IAlert">
            <summary>
            Defines the interface through which the user can manipulate JavaScript alerts.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IAlert.Text">
            <summary>
            Gets the text of the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.Dismiss">
            <summary>
            Dismisses the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.Accept">
            <summary>
            Accepts the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.SendKeys(System.String)">
            <summary>
            Sends keys to the alert.
            </summary>
            <param name="keysToSend">The keystrokes to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.SetAuthenticationCredentials(System.String,System.String)">
            <summary>
            Sets the user name and password in an alert prompting for credentials.
            </summary>
            <param name="userName">The user name to set.</param>
            <param name="password">The password to set.</param>
        </member>
        <member name="T:OpenQA.Selenium.IAllowsFileDetection">
            <summary>
            Interface determining whether the driver implementation allows detection of files
            when sending keystrokes to a file upload element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IAllowsFileDetection.FileDetector">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.IFileDetector"/> responsible for detecting
            sequences of keystrokes representing file paths and names.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ICapabilities">
            <summary>
            Capabilities of the browser that you are going to use
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ICapabilities.Item(System.String)">
            <summary>
            Gets the capability value with the specified name.
            </summary>
            <param name="capabilityName">The name of the capability to get.</param>
            <returns>The value of the capability.</returns>
            <exception cref="T:System.ArgumentException">
            The specified capability name is not in the set of capabilities.
            </exception>
        </member>
        <member name="M:OpenQA.Selenium.ICapabilities.HasCapability(System.String)">
            <summary>
            Gets a value indicating whether the browser has a given capability.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>Returns <see langword="true"/> if the browser has the capability; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ICapabilities.GetCapability(System.String)">
            <summary>
            Gets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>An object associated with the capability, or <see langword="null"/>
            if the capability is not set on the browser.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ICookieJar">
            <summary>
            Defines an interface allowing the user to manipulate cookies on the current page.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ICookieJar.AllCookies">
            <summary>
            Gets all cookies defined for the current page.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.AddCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Adds a cookie to the current page.
            </summary>
            <param name="cookie">The <see cref="T:OpenQA.Selenium.Cookie"/> object to be added.</param>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.GetCookieNamed(System.String)">
            <summary>
            Gets a cookie with the specified name.
            </summary>
            <param name="name">The name of the cookie to retrieve.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Cookie"/> containing the name. Returns <see langword="null"/>
            if no cookie with the specified name is found.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.DeleteCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Deletes the specified cookie from the page.
            </summary>
            <param name="cookie">The <see cref="T:OpenQA.Selenium.Cookie"/> to be deleted.</param>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.DeleteCookieNamed(System.String)">
            <summary>
            Deletes the cookie with the specified name from the page.
            </summary>
            <param name="name">The name of the cookie to be deleted.</param>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.DeleteAllCookies">
            <summary>
            Deletes all cookies from the page.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerDriver">
            <summary>
            Provides a way to access Internet Explorer to run your tests by creating a InternetExplorerDriver instance
            </summary>
            <remarks>
            When the WebDriver object has been instantiated the browser will load. The test can then navigate to the URL under test and
            start your test.
            </remarks>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new InternetExplorerDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                    driver.Dispose();
                }
            }
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(OpenQA.Selenium.IE.InternetExplorerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/> class with the desired
            options.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(OpenQA.Selenium.IE.InternetExplorerDriverService)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/> class using the specified driver service.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriverService"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/> class using the specified path
            to the directory containing IEDriverServer.exe.
            </summary>
            <param name="internetExplorerDriverServerDirectory">The full path to the directory containing IEDriverServer.exe.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(System.String,OpenQA.Selenium.IE.InternetExplorerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/> class using the specified path
            to the directory containing IEDriverServer.exe and options.
            </summary>
            <param name="internetExplorerDriverServerDirectory">The full path to the directory containing IEDriverServer.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(System.String,OpenQA.Selenium.IE.InternetExplorerOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/> class using the specified path
            to the directory containing IEDriverServer.exe, options, and command timeout.
            </summary>
            <param name="internetExplorerDriverServerDirectory">The full path to the directory containing IEDriverServer.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(OpenQA.Selenium.IE.InternetExplorerDriverService,OpenQA.Selenium.IE.InternetExplorerOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/> class using the specified
            <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriverService"/> and options.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.DriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(OpenQA.Selenium.IE.InternetExplorerDriverService,OpenQA.Selenium.IE.InternetExplorerOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/> class using the specified
            <see cref="T:OpenQA.Selenium.DriverService"/>, <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/>, and command timeout.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriver.FileDetector">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.IFileDetector"/> responsible for detecting
            sequences of keystrokes representing file paths and names.
            </summary>
            <remarks>The IE driver does not allow a file detector to be set,
            as the server component of the IE driver (IEDriverServer.exe) only
            allows uploads from the local computer environment. Attempting to set
            this property has no effect, but does not throw an exception. If you
            are attempting to run the IE driver remotely, use <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/>
            in conjunction with a standalone WebDriver server.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.GetLegacyCapabilitiesDictionary(OpenQA.Selenium.ICapabilities)">
            <summary>
            Gets the capabilities as a dictionary supporting legacy drivers.
            </summary>
            <param name="legacyCapabilities">The dictionary to return.</param>
            <returns>A Dictionary consisting of the capabilities requested.</returns>
            <remarks>This method is only transitional. Do not rely on it. It will be removed
            once browser driver capability formats stabilize.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel">
            <summary>
            Represents the valid values of logging levels available with the IEDriverServer.exe.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Trace">
            <summary>
            Represents the Trace value, the most detailed logging level available.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Debug">
            <summary>
            Represents the Debug value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Info">
            <summary>
            Represents the Info value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Warn">
            <summary>
            Represents the Warn value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Error">
            <summary>
            Represents the Error value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Fatal">
            <summary>
            Represents the Fatal value, the least detailed logging level available.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerDriverService">
            <summary>
            Exposes the service provided by the native IEDriverServer executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriverService.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriverService"/> class.
            </summary>
            <param name="executablePath">The full path to the IEDriverServer executable.</param>
            <param name="executableFileName">The file name of the IEDriverServer executable.</param>
            <param name="port">The port on which the IEDriverServer executable should listen.</param>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.Host">
            <summary>
            Gets or sets the value of the host adapter on which the IEDriverServer should listen for connections.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.LogFile">
            <summary>
            Gets or sets the location of the log file written to by the IEDriverServer.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.LoggingLevel">
            <summary>
            Gets or sets the logging level used by the IEDriverServer.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.LibraryExtractionPath">
            <summary>
            Gets or sets the path to which the supporting library of the IEDriverServer.exe is extracted.
            Defaults to the temp directory if this property is not set.
            </summary>
            <remarks>
            The IEDriverServer.exe requires extraction of a supporting library to perform some of its functions. Setting
            This library is extracted to the temp directory if this property is not set. If the property is set, it must
            be set to a valid directory.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.WhitelistedIPAddresses">
            <summary>
            Gets or sets the comma-delimited list of IP addresses that are approved to
            connect to this instance of the IEDriverServer. Defaults to an empty string,
            which means only the local loopback address can connect.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriverService.CreateDefaultService">
            <summary>
            Creates a default instance of the InternetExplorerDriverService.
            </summary>
            <returns>A InternetExplorerDriverService that implements default settings.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriverService.CreateDefaultService(System.String)">
            <summary>
            Creates a default instance of the InternetExplorerDriverService using a specified path to the IEDriverServer executable.
            </summary>
            <param name="driverPath">The directory containing the IEDriverServer executable.</param>
            <returns>A InternetExplorerDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriverService.CreateDefaultService(System.String,System.String)">
            <summary>
            Creates a default instance of the InternetExplorerDriverService using a specified path to the IEDriverServer executable with the given name.
            </summary>
            <param name="driverPath">The directory containing the IEDriverServer executable.</param>
            <param name="driverExecutableFileName">The name of the IEDriverServer executable file.</param>
            <returns>A InternetExplorerDriverService using a random port.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerElementScrollBehavior">
            <summary>
            Specifies the scroll behavior of elements scrolled into view in the IE driver.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerElementScrollBehavior.Default">
            <summary>
            Indicates the behavior is unspecified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerElementScrollBehavior.Top">
            <summary>
            Scrolls elements to align with the top of the viewport.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerElementScrollBehavior.Bottom">
            <summary>
            Scrolls elements to align with the bottom of the viewport.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerOptions">
            <summary>
            Class to manage options specific to <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/>
            </summary>
            <example>
            <code>
            InternetExplorerOptions options = new InternetExplorerOptions();
            options.IntroduceInstabilityByIgnoringProtectedModeSettings = true;
            </code>
            <para></para>
            <para>For use with InternetExplorerDriver:</para>
            <para></para>
            <code>
            InternetExplorerDriver driver = new InternetExplorerDriver(options);
            </code>
            <para></para>
            <para>For use with RemoteWebDriver:</para>
            <para></para>
            <code>
            RemoteWebDriver driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), options.ToCapabilities());
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerOptions.Capability">
            <summary>
            Gets the name of the capability used to store IE options in
            a <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> object.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.IntroduceInstabilityByIgnoringProtectedModeSettings">
            <summary>
            Gets or sets a value indicating whether to ignore the settings of the Internet Explorer Protected Mode.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.IgnoreZoomLevel">
            <summary>
            Gets or sets a value indicating whether to ignore the zoom level of Internet Explorer .
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.EnableNativeEvents">
            <summary>
            Gets or sets a value indicating whether to use native events in interacting with elements.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.RequireWindowFocus">
            <summary>
            Gets or sets a value indicating whether to require the browser window to have focus before interacting with elements.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.InitialBrowserUrl">
            <summary>
            Gets or sets the initial URL displayed when IE is launched. If not set, the browser launches
            with the internal startup page for the WebDriver server.
            </summary>
            <remarks>
            By setting the  <see cref="P:OpenQA.Selenium.IE.InternetExplorerOptions.IntroduceInstabilityByIgnoringProtectedModeSettings"/> to <see langword="true"/>
            and this property to a correct URL, you can launch IE in the Internet Protected Mode zone. This can be helpful
            to avoid the flakiness introduced by ignoring the Protected Mode settings. Nevertheless, setting Protected Mode
            zone settings to the same value in the IE configuration is the preferred method.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.ElementScrollBehavior">
            <summary>
            Gets or sets the value for describing how elements are scrolled into view in the IE driver. Defaults
            to scrolling the element to the top of the viewport.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.EnablePersistentHover">
            <summary>
            Gets or sets a value indicating whether to enable persistently sending WM_MOUSEMOVE messages
            to the IE window during a mouse hover.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.BrowserAttachTimeout">
            <summary>
            Gets or sets the amount of time the driver will attempt to look for a newly launched instance
            of Internet Explorer.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.FileUploadDialogTimeout">
            <summary>
            Gets or sets the amount of time the driver will attempt to look for the file selection
            dialog when attempting to upload a file.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.ForceCreateProcessApi">
            <summary>
            Gets or sets a value indicating whether to force the use of the Windows CreateProcess API
            when launching Internet Explorer. The default value is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.ForceShellWindowsApi">
            <summary>
            Gets or sets a value indicating whether to force the use of the Windows ShellWindows API
            when attaching to Internet Explorer. The default value is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.BrowserCommandLineArguments">
            <summary>
            Gets or sets the command line arguments used in launching Internet Explorer when the
            Windows CreateProcess API is used. This property only has an effect when the
            <see cref="P:OpenQA.Selenium.IE.InternetExplorerOptions.ForceCreateProcessApi"/> is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.UsePerProcessProxy">
            <summary>
            Gets or sets a value indicating whether to use the supplied <see cref="T:OpenQA.Selenium.Proxy"/>
            settings on a per-process basis, not updating the system installed proxy setting.
            This property is only valid when setting a <see cref="T:OpenQA.Selenium.Proxy"/>, where the
            <see cref="P:OpenQA.Selenium.Proxy.Kind"/> property is either <see cref="F:OpenQA.Selenium.ProxyKind.Direct"/>,
            <see cref="F:OpenQA.Selenium.ProxyKind.System"/>, or <see cref="F:OpenQA.Selenium.ProxyKind.Manual"/>, and is
            otherwise ignored. Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.EnsureCleanSession">
            <summary>
            Gets or sets a value indicating whether to clear the Internet Explorer cache
            before launching the browser. When set to <see langword="true"/>, clears the
            system cache for all instances of Internet Explorer, even those already running
            when the driven instance is launched. Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerOptions.AddAdditionalCapability(System.String,System.Object)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Internet Explorer driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.IE.InternetExplorerOptions.AddAdditionalCapability(System.String,System.Object)"/>
            where <paramref name="capabilityName"/> has already been added will overwrite the
            existing value with the new value in <paramref name="capabilityValue"/>.
            Also, by default, calling this method adds capabilities to the options object passed to
            IEDriverServer.exe.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerOptions.AddAdditionalCapability(System.String,System.Object,System.Boolean)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Internet Explorer driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <param name="isGlobalCapability">Indicates whether the capability is to be set as a global
            capability for the driver instead of a IE-specific option.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.IE.InternetExplorerOptions.AddAdditionalCapability(System.String,System.Object,System.Boolean)"/> where <paramref name="capabilityName"/>
            has already been added will overwrite the existing value with the new value in <paramref name="capabilityValue"/></remarks>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerOptions.ToCapabilities">
            <summary>
            Returns DesiredCapabilities for IE with these options included as
            capabilities. This copies the options. Further changes will not be
            reflected in the returned capabilities.
            </summary>
            <returns>The DesiredCapabilities for IE with these options.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerWebElement">
            <summary>
            InternetExplorerWebElement allows you to have access to specific items that are found on the page.
            </summary>
            <seealso cref="T:OpenQA.Selenium.IWebElement"/>
            <seealso cref="T:OpenQA.Selenium.ILocatable"/>
            <example>
            <code>
            [Test]
            public void TestGoogle()
            {
                driver = new InternetExplorerDriver();
                InternetExplorerWebElement elem = driver.FindElement(By.Name("q"));
                elem.SendKeys("Cheese please!");
            }
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerWebElement.#ctor(OpenQA.Selenium.IE.InternetExplorerDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IE.InternetExplorerWebElement"/> class.
            </summary>
            <param name="parent">Driver in use.</param>
            <param name="id">ID of the element.</param>
        </member>
        <member name="T:OpenQA.Selenium.IFileDetector">
            <summary>
            Defines an object responsible for detecting sequences of keystrokes
            representing file paths and names.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IFileDetector.IsFile(System.String)">
            <summary>
            Returns a value indicating whether a specified key sequence represents
            a file name and path.
            </summary>
            <param name="keySequence">The sequence to test for file existence.</param>
            <returns><see langword="true"/> if the key sequence represents a file; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IHasCapabilities">
            <summary>
            Defines the interface through which the user can determine the capabilities of a driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasCapabilities.Capabilities">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.ICapabilities"/> object describing the driver's capabilities.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IHasInputDevices">
            <summary>
            Provides access to input devices for advanced user interactions.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasInputDevices.Keyboard">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IKeyboard"/> object for sending keystrokes to the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasInputDevices.Mouse">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IMouse"/> object for sending mouse commands to the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IHasTouchScreen">
            <summary>
            Interface implemented by each driver that allows access to touch screen capabilities.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasTouchScreen.TouchScreen">
            <summary>
            Gets the device representing the touch screen.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IJavaScriptExecutor">
            <summary>
            Defines the interface through which the user can execute JavaScript.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript in the context of the currently selected frame or window.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
            <remarks>
            <para>
            The <see cref="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteScript(System.String,System.Object[])"/>method executes JavaScript in the context of
            the currently selected frame or window. This means that "document" will refer
            to the current document. If the script has a return value, then the following
            steps will be taken:
            </para>
            <para>
            <list type="bullet">
            <item><description>For an HTML element, this method returns a <see cref="T:OpenQA.Selenium.IWebElement"/></description></item>
            <item><description>For a number, a <see cref="T:System.Int64"/> is returned</description></item>
            <item><description>For a boolean, a <see cref="T:System.Boolean"/> is returned</description></item>
            <item><description>For all other cases a <see cref="T:System.String"/> is returned.</description></item>
            <item><description>For an array,we check the first element, and attempt to return a
            <see cref="T:System.Collections.Generic.List`1"/> of that type, following the rules above. Nested lists are not
            supported.</description></item>
            <item><description>If the value is null or there is no return value,
            <see langword="null"/> is returned.</description></item>
            </list>
            </para>
            <para>
            Arguments must be a number (which will be converted to a <see cref="T:System.Int64"/>),
            a <see cref="T:System.Boolean"/>, a <see cref="T:System.String"/> or a <see cref="T:OpenQA.Selenium.IWebElement"/>.
            An exception will be thrown if the arguments do not meet these criteria.
            The arguments will be made available to the JavaScript via the "arguments" magic
            variable, as if the function were called via "Function.apply"
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteAsyncScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript asynchronously in the context of the currently selected frame or window.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IKeyboard">
            <summary>
            Provides methods representing basic keyboard actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the target.
            </summary>
            <param name="keySequence">A string representing the keystrokes to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.PressKey(System.String)">
            <summary>
            Presses a key.
            </summary>
            <param name="keyToPress">The key value representing the key to press.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.ReleaseKey(System.String)">
            <summary>
            Releases a key.
            </summary>
            <param name="keyToRelease">The key value representing the key to release.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.ILocatable">
            <summary>
            Defines the interface through which the user can discover where an element is on the screen.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ILocatable.LocationOnScreenOnceScrolledIntoView">
            <summary>
            Gets the location of an element on the screen, scrolling it into view
            if it is not currently on the screen.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ILocatable.Coordinates">
            <summary>
            Gets the coordinates identifying the location of this element using
            various frames of reference.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ILogs">
            <summary>
            Interface allowing handling of driver logs.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ILogs.AvailableLogTypes">
            <summary>
            Gets the list of available log types for this driver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ILogs.GetLog(System.String)">
            <summary>
            Gets the set of <see cref="T:OpenQA.Selenium.LogEntry"/> objects for a specified log.
            </summary>
            <param name="logKind">The log for which to retrieve the log entries.
            Log types can be found in the <see cref="T:OpenQA.Selenium.LogType"/> class.</param>
            <returns>The list of <see cref="T:OpenQA.Selenium.LogEntry"/> objects for the specified log.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IMouse">
            <summary>
            Provides methods representing basic mouse actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.Click(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the primary mouse button.
            </summary>
            <param name="where">An <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.DoubleClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Double-clicks at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to double-click.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseDown(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Presses the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to press the mouse button down.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseUp(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Releases the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to release the mouse button.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to move the mouse to.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
            <param name="offsetX">A horizontal offset from the coordinates specified in <paramref name="where"/>.</param>
            <param name="offsetY">A vertical offset from the coordinates specified in <paramref name="where"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.ContextClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the secondary mouse button.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="T:OpenQA.Selenium.INavigation">
            <summary>
            Defines an interface allowing the user to access the browser's history and to
            navigate to a given URL.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Back">
            <summary>
            Move back a single entry in the browser's history.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Forward">
            <summary>
            Move a single "item" forward in the browser's history.
            </summary>
            <remarks>Does nothing if we are on the latest page viewed.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)">
            <summary>
             Load a new web page in the current browser window.
            </summary>
            <param name="url">The URL to load. It is best to use a fully qualified URL</param>
            <remarks>
            Calling the <see cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)"/> method will load a new web page in the current browser window.
            This is done using an HTTP GET operation, and the method will block until the
            load is complete. This will follow redirects issued either by the server or
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since
            should the underlying page change while your test is executing the results of
            future calls against this interface will be against the freshly loaded page.
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)">
            <summary>
             Load a new web page in the current browser window.
            </summary>
            <param name="url">The URL to load.</param>
            <remarks>
            Calling the <see cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)"/> method will load a new web page in the current browser window.
            This is done using an HTTP GET operation, and the method will block until the
            load is complete. This will follow redirects issued either by the server or
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since
            should the underlying page change while your test is executing the results of
            future calls against this interface will be against the freshly loaded page.
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Refresh">
            <summary>
            Refreshes the current page.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ActionBuilder">
            <summary>
            Provides methods that allow the creation of action sequences to enable
            advanced user interactions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionBuilder.AddAction(OpenQA.Selenium.Interactions.Interaction)">
            <summary>
            Adds an action to the built set of actions. Adding an action will
            add a "tick" to the set of all actions to be executed.
            </summary>
            <param name="actionToAdd">The action to add to the set of actions</param>
            <returns>A self reference.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionBuilder.AddActions(OpenQA.Selenium.Interactions.Interaction[])">
            <summary>
            Adds an action to the built set of actions. Adding an action will
            add a "tick" to the set of all actions to be executed. Only one action
            for each input device may be added for a single tick.
            </summary>
            <param name="actionsToAdd">The set actions to add to the existing set of actions.</param>
            <returns>A self reference.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionBuilder.ToActionSequenceList">
            <summary>
            Converts the set of actions in this <see cref="T:OpenQA.Selenium.Interactions.ActionBuilder"/> to a <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/> suitable for transmission across the wire.
            The collection returned is read-only.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionBuilder.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:OpenQA.Selenium.Interactions.ActionBuilder"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:OpenQA.Selenium.Interactions.ActionBuilder"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.MoveToElementOffsetOrigin">
            <summary>
            Provides values that indicate from where element offsets for MoveToElement
            are calculated.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.MoveToElementOffsetOrigin.TopLeft">
            <summary>
            Offsets are calculated from the top-left corner of the element.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.MoveToElementOffsetOrigin.Center">
            <summary>
            Offsets are calcuated from the center of the element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Actions">
            <summary>
            Provides a mechanism for building advanced interactions with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Actions"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.IWebDriver"/> object on which the actions built will be performed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.KeyDown(System.String)">
            <summary>
            Sends a modifier key down message to the browser.
            </summary>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>,
            <see cref="F:OpenQA.Selenium.Keys.Meta"/>, <see cref="F:OpenQA.Selenium.Keys.Command"/>,<see cref="F:OpenQA.Selenium.Keys.LeftAlt"/>,
            <see cref="F:OpenQA.Selenium.Keys.LeftControl"/>,<see cref="F:OpenQA.Selenium.Keys.LeftShift"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.KeyDown(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a modifier key down message to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the key command.</param>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>,
            <see cref="F:OpenQA.Selenium.Keys.Meta"/>, <see cref="F:OpenQA.Selenium.Keys.Command"/>,<see cref="F:OpenQA.Selenium.Keys.LeftAlt"/>,
            <see cref="F:OpenQA.Selenium.Keys.LeftControl"/>,<see cref="F:OpenQA.Selenium.Keys.LeftShift"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.KeyUp(System.String)">
            <summary>
            Sends a modifier key up message to the browser.
            </summary>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>,
            <see cref="F:OpenQA.Selenium.Keys.Meta"/>, <see cref="F:OpenQA.Selenium.Keys.Command"/>,<see cref="F:OpenQA.Selenium.Keys.LeftAlt"/>,
            <see cref="F:OpenQA.Selenium.Keys.LeftControl"/>,<see cref="F:OpenQA.Selenium.Keys.LeftShift"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.KeyUp(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a modifier up down message to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the key command.</param>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>,
            <see cref="F:OpenQA.Selenium.Keys.Meta"/>, <see cref="F:OpenQA.Selenium.Keys.Command"/>,<see cref="F:OpenQA.Selenium.Keys.LeftAlt"/>,
            <see cref="F:OpenQA.Selenium.Keys.LeftControl"/>,<see cref="F:OpenQA.Selenium.Keys.LeftShift"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the browser.
            </summary>
            <param name="keysToSend">The keystrokes to send to the browser.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.SendKeys(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a sequence of keystrokes to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the keystrokes.</param>
            <param name="keysToSend">The keystrokes to send to the browser.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.ClickAndHold(OpenQA.Selenium.IWebElement)">
            <summary>
            Clicks and holds the mouse button down on the specified element.
            </summary>
            <param name="onElement">The element on which to click and hold.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.ClickAndHold">
            <summary>
            Clicks and holds the mouse button at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Release(OpenQA.Selenium.IWebElement)">
            <summary>
            Releases the mouse button on the specified element.
            </summary>
            <param name="onElement">The element on which to release the button.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Release">
            <summary>
            Releases the mouse button at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Click(OpenQA.Selenium.IWebElement)">
            <summary>
            Clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Click">
            <summary>
            Clicks the mouse at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.DoubleClick(OpenQA.Selenium.IWebElement)">
            <summary>
            Double-clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to double-click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.DoubleClick">
            <summary>
            Double-clicks the mouse at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.MoveToElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Moves the mouse to the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.MoveToElement(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified offset of the top-left corner of the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.MoveToElement(OpenQA.Selenium.IWebElement,System.Int32,System.Int32,OpenQA.Selenium.Interactions.MoveToElementOffsetOrigin)">
            <summary>
            Moves the mouse to the specified offset of the top-left corner of the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <param name="offsetOrigin">The <see cref="T:OpenQA.Selenium.Interactions.MoveToElementOffsetOrigin"/> value from which to calculate the offset.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.MoveByOffset(System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified offset of the last known mouse coordinates.
            </summary>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.ContextClick(OpenQA.Selenium.IWebElement)">
            <summary>
            Right-clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to right-click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.ContextClick">
            <summary>
            Right-clicks the mouse at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.DragAndDrop(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebElement)">
            <summary>
            Performs a drag-and-drop operation from one element to another.
            </summary>
            <param name="source">The element on which the drag operation is started.</param>
            <param name="target">The element on which the drop is performed.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.DragAndDropToOffset(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
            <summary>
            Performs a drag-and-drop operation on one element to a specified offset.
            </summary>
            <param name="source">The element on which the drag operation is started.</param>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Build">
            <summary>
            Builds the sequence of actions.
            </summary>
            <returns>A composite <see cref="T:OpenQA.Selenium.Interactions.IAction"/> which can be used to perform the actions.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Perform">
            <summary>
            Performs the currently built action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.GetLocatableFromElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.ILocatable"/> instance of the specified <see cref="T:OpenQA.Selenium.IWebElement"/>.
            </summary>
            <param name="element">The <see cref="T:OpenQA.Selenium.IWebElement"/> to get the location of.</param>
            <returns>The <see cref="T:OpenQA.Selenium.ILocatable"/> of the <see cref="T:OpenQA.Selenium.IWebElement"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.AddAction(OpenQA.Selenium.Interactions.IAction)">
            <summary>
            Adds an action to current list of actions to be performed.
            </summary>
            <param name="actionToAdd">The <see cref="T:OpenQA.Selenium.Interactions.IAction"/> to be added.</param>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ActionSequence">
            <summary>
            Represents a sequence of actions to be performed in the target browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionSequence.#ctor(OpenQA.Selenium.Interactions.InputDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ActionSequence"/> class.
            </summary>
            <param name="device">The input device that executes this sequence of actions.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionSequence.#ctor(OpenQA.Selenium.Interactions.InputDevice,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ActionSequence"/> class.
            </summary>
            <param name="device">The input device that executes this sequence of actions.</param>
            <param name="initialSize">the initial size of the sequence.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.ActionSequence.Count">
            <summary>
            Gets the count of actions in the sequence.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionSequence.AddAction(OpenQA.Selenium.Interactions.Interaction)">
            <summary>
            Adds an action to the sequence.
            </summary>
            <param name="interactionToAdd">The action to add to the sequence.</param>
            <returns>A self-reference to this sequence of actions.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionSequence.ToDictionary">
            <summary>
            Converts this action sequence into an object suitable for serializing across the wire.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the actions in this sequence.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ActionSequence.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:OpenQA.Selenium.Interactions.ActionSequence"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:OpenQA.Selenium.Interactions.ActionSequence"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ButtonReleaseAction">
            <summary>
            Defines an action for releasing the currently held mouse button.
            </summary>
            <remarks>
            This action can be called for an element different than the one
            ClickAndHoldAction was called for. However, if this action is
            performed out of sequence (without holding down the mouse button,
            for example) the results will be different.
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ButtonReleaseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ButtonReleaseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ButtonReleaseAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ClickAction">
            <summary>
            Defines an action for clicking on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ClickAndHoldAction">
            <summary>
            Defines an action for clicking and holding the mouse button on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAndHoldAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ClickAndHoldAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAndHoldAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.CompositeAction">
            <summary>
            Defines an action that consists of a list of other actions to be performed in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.CompositeAction.AddAction(OpenQA.Selenium.Interactions.IAction)">
            <summary>
            Adds an action to the list of actions to be performed.
            </summary>
            <param name="action">An <see cref="T:OpenQA.Selenium.Interactions.IAction"/> to be appended to the
            list of actions to be performed.</param>
            <returns>A self reference.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.CompositeAction.Perform">
            <summary>
            Performs the actions defined in this list of actions.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ContextClickAction">
            <summary>
            Defines an action for clicking the secondary mouse button on an element, displaying a context menu.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ContextClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ContextClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ContextClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.DoubleClickAction">
            <summary>
            Defines an action for double-clicking on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DoubleClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.DoubleClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DoubleClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.DoubleTapAction">
            <summary>
            Creates a double tap gesture on a touch screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DoubleTapAction.#ctor(OpenQA.Selenium.ITouchScreen,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.DoubleTapAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DoubleTapAction.Perform">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.FlickAction">
            <summary>
            Creates a flick gesture on a touch screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.FlickAction.#ctor(OpenQA.Selenium.ITouchScreen,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.FlickAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="speedX">The horizontal speed in pixels per second.</param>
            <param name="speedY">The vertical speed in pixels per second.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.FlickAction.#ctor(OpenQA.Selenium.ITouchScreen,OpenQA.Selenium.ILocatable,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.FlickAction"/> class for use with the specified element.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
            <param name="offsetX">The x offset relative to the viewport.</param>
            <param name="offsetY">The y offset relative to the viewport.</param>
            <param name="speed">The speed in pixels per second.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.FlickAction.Perform">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.IAction">
            <summary>
            Provides methods by which an interaction with the browser can be performed.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IAction.Perform">
            <summary>
            Performs this action on the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.ICoordinates">
            <summary>
            Provides location of the element using various frames of reference.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationOnScreen">
            <summary>
            Gets the location of an element in absolute screen coordinates.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationInViewport">
            <summary>
            Gets the location of an element relative to the origin of the view port.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationInDom">
            <summary>
            Gets the location of an element's position within the HTML DOM.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.AuxiliaryLocator">
            <summary>
            Gets a locator providing a user-defined location for this element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.KeyboardAction">
            <summary>
            Defines an action for keyboard interaction with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.KeyboardAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.KeyboardAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.KeyboardAction.Keyboard">
            <summary>
            Gets the keyboard with which to perform the action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.KeyboardAction.FocusOnElement">
            <summary>
            Focuses on the element on which the action is to be performed.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.MouseAction">
            <summary>
            Defines an action for mouse interaction with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.MouseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.MouseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="target">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.MouseAction.ActionLocation">
            <summary>
            Gets the coordinates at which to perform the mouse action.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.MouseAction.Mouse">
            <summary>
            Gets the mouse with which to perform the action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.MouseAction.MoveToLocation">
            <summary>
            Moves the mouse to the location at which to perform the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.SingleKeyAction">
            <summary>
            Defines an action for keyboard interaction with the browser using a single modifier key.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.SingleKeyAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.SingleKeyAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>) to use in the action.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.SingleKeyAction.Key">
            <summary>
            Gets the key with which to perform the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.TouchAction">
            <summary>
            Defines an action for keyboard interaction with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.TouchAction.#ctor(OpenQA.Selenium.ITouchScreen,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.TouchAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> to use in performing the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.TouchAction.TouchScreen">
            <summary>
            Gets the touch screen with which to perform the action.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.TouchAction.ActionLocation">
            <summary>
            Gets the location at which to perform the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction">
            <summary>
            Defines an action for keyboard and mouse interaction with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.WebDriverAction.#ctor(OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction"/> class for the given element.
            </summary>
            <param name="actionLocation">An <see cref="T:OpenQA.Selenium.ILocatable"/> object that provides coordinates for this action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.WebDriverAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction"/> class.
            </summary>
            <remarks>This action will take place in the context of the previous action's coordinates.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.WebDriverAction.ActionTarget">
            <summary>
            Gets the target of the action providing coordinates of the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.InputDevice">
            <summary>
            Base class for all input devices for actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.InputDevice.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.InputDevice"/> class.
            </summary>
            <param name="deviceName">The unique name of the input device represented by this class.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.InputDevice.DeviceName">
            <summary>
            Gets the unique name of this input device.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.InputDevice.DeviceKind">
            <summary>
            Gets the kind of device for this input device.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.InputDevice.ToDictionary">
            <summary>
            Returns a value for this input device that can be transmitted across the wire to a remote end.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing this action.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.InputDevice.CreatePause">
            <summary>
            Creates a pause action for synchronization with other action sequences.
            </summary>
            <returns>The <see cref="T:OpenQA.Selenium.Interactions.Interaction"/> representing the action.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.InputDevice.CreatePause(System.TimeSpan)">
            <summary>
            Creates a pause action for synchronization with other action sequences.
            </summary>
            <param name="duration">A <see cref="T:System.TimeSpan"/> representing the duration
            of the pause. Note that <see cref="F:System.TimeSpan.Zero"/> pauses to synchronize
            with other action sequences for other devices.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Interactions.Interaction"/> representing the action.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.InputDevice.GetHashCode">
            <summary>
            Returns a hash code for the current <see cref="T:OpenQA.Selenium.Interactions.InputDevice"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:OpenQA.Selenium.Interactions.InputDevice"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.InputDevice.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:OpenQA.Selenium.Interactions.InputDevice"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:OpenQA.Selenium.Interactions.InputDevice"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.InputDeviceKind">
            <summary>
            Enumerated values for the kinds of devices available.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.InputDeviceKind.None">
            <summary>
            Represents the null device.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.InputDeviceKind.Key">
            <summary>
            Represents a key-based device, primarily for entering text.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.InputDeviceKind.Pointer">
            <summary>
            Represents a pointer-based device, such as a mouse, pen, or stylus.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Interaction">
            <summary>
            Represents a single interaction for a given input device.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Interaction.#ctor(OpenQA.Selenium.Interactions.InputDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Interaction"/> class.
            </summary>
            <param name="sourceDevice">The input device which performs this action.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Interaction.SourceDevice">
            <summary>
            Gets the device for which this action is intended.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Interaction.ToDictionary">
            <summary>
            Returns a value for this action that can be transmitted across the wire to a remote end.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing this action.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Interaction.IsValidFor(OpenQA.Selenium.Interactions.InputDeviceKind)">
            <summary>
            Gets a value indicating whether this action is valid for the specified type of input device.
            </summary>
            <param name="sourceDeviceKind">The type of device to check.</param>
            <returns><see langword="true"/> if the action is valid for the specified type of input device;
            otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.KeyDownAction">
            <summary>
            Defines an action for pressing a modifier key (Shift, Alt, or Control) on the keyboard.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyDownAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.KeyDownAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>,
            <see cref="F:OpenQA.Selenium.Keys.Meta"/>, <see cref="F:OpenQA.Selenium.Keys.Command"/>,<see cref="F:OpenQA.Selenium.Keys.LeftAlt"/>,
            <see cref="F:OpenQA.Selenium.Keys.LeftControl"/>,<see cref="F:OpenQA.Selenium.Keys.LeftShift"/>) to use in the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyDownAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.KeyInputDevice">
            <summary>
            Represents a key input device, such as a keyboard.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyInputDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.KeyInputDevice"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyInputDevice.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.KeyInputDevice"/> class, given the device's name.
            </summary>
            <param name="deviceName">The unique name of this input device.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.KeyInputDevice.DeviceKind">
            <summary>
            Gets the type of device for this input device.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyInputDevice.ToDictionary">
            <summary>
            Converts this input device into an object suitable for serializing across the wire.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing this input device.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyInputDevice.CreateKeyDown(System.Char)">
            <summary>
            Creates a key-down action for simulating a press of a key.
            </summary>
            <param name="codePoint">The unicode character to be sent.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Interactions.Interaction"/> representing the action.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyInputDevice.CreateKeyUp(System.Char)">
            <summary>
            Creates a key-up action for simulating a release of a key.
            </summary>
            <param name="codePoint">The unicode character to be sent.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Interactions.Interaction"/> representing the action.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.KeyUpAction">
            <summary>
            Defines an action for releasing a modifier key (Shift, Alt, or Control) on the keyboard.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyUpAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.KeyUpAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>,
            <see cref="F:OpenQA.Selenium.Keys.Meta"/>, <see cref="F:OpenQA.Selenium.Keys.Command"/>,<see cref="F:OpenQA.Selenium.Keys.LeftAlt"/>,
            <see cref="F:OpenQA.Selenium.Keys.LeftControl"/>,<see cref="F:OpenQA.Selenium.Keys.LeftShift"/>) to use in the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyUpAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.LongPressAction">
            <summary>
            Creates a long press gesture on a touch screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.LongPressAction.#ctor(OpenQA.Selenium.ITouchScreen,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.LongPressAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.LongPressAction.Perform">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.MoveMouseAction">
            <summary>
            Defines an action for moving the mouse to a specified location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveMouseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.MoveMouseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveMouseAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.MoveToOffsetAction">
            <summary>
            Defines an action for moving the mouse to a specified offset from its current location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveToOffsetAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.MoveToOffsetAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
            <param name="offsetX">The horizontal offset from the origin of the target to which to move the mouse.</param>
            <param name="offsetY">The vertical offset from the origin of the target to which to move the mouse.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveToOffsetAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.PauseInteraction">
            <summary>
            Represents a pause action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PauseInteraction.#ctor(OpenQA.Selenium.Interactions.InputDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.PauseInteraction"/> class.
            </summary>
            <param name="sourceDevice">The input device on which to execute the pause.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PauseInteraction.#ctor(OpenQA.Selenium.Interactions.InputDevice,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.PauseInteraction"/> class.
            </summary>
            <param name="sourceDevice">The input device on which to execute the pause.</param>
            <param name="duration">The length of time to pause for.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PauseInteraction.ToDictionary">
            <summary>
            Returns a value for this action that can be transmitted across the wire to a remote end.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing this action.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PauseInteraction.IsValidFor(OpenQA.Selenium.Interactions.InputDeviceKind)">
            <summary>
            Gets a value indicating whether this action is valid for the specified type of input device.
            </summary>
            <param name="sourceDeviceKind">The type of device to check.</param>
            <returns><see langword="true"/> if the action is valid for the specified type of input device;
            otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.CoordinateOrigin">
            <summary>
            Represents the origin of the coordinates for mouse movement.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.CoordinateOrigin.Viewport">
            <summary>
            The coordinate origin is the origin of the view port of the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.CoordinateOrigin.Pointer">
            <summary>
            The origin of the movement is the most recent pointer location.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.CoordinateOrigin.Element">
            <summary>
            The origin of the movement is the center of the element specified.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.PointerKind">
            <summary>
            Specifies the type of pointer a pointer device represents.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.PointerKind.Mouse">
            <summary>
            The pointer device is a mouse.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.PointerKind.Pen">
            <summary>
            The pointer device is a pen or stylus.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.PointerKind.Touch">
            <summary>
            The pointer device is a touch screen device.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.MouseButton">
            <summary>
            Specifies the button used during a pointer down or up action.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.MouseButton.Left">
            <summary>
            The button used is the primary button.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.MouseButton.Middle">
            <summary>
            The button used is the middle button or mouse wheel.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Interactions.MouseButton.Right">
            <summary>
            The button used is the secondary button.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.PointerInputDevice">
            <summary>
            Represents a pointer input device, such as a stylus, mouse, or finger on a touch screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.PointerInputDevice"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.#ctor(OpenQA.Selenium.Interactions.PointerKind)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.PointerInputDevice"/> class.
            </summary>
            <param name="pointerKind">The kind of pointer represented by this input device.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.#ctor(OpenQA.Selenium.Interactions.PointerKind,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.PointerInputDevice"/> class.
            </summary>
            <param name="pointerKind">The kind of pointer represented by this input device.</param>
            <param name="deviceName">The unique name for this input device.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.PointerInputDevice.DeviceKind">
            <summary>
            Gets the type of device for this input device.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.ToDictionary">
            <summary>
            Returns a value for this input device that can be transmitted across the wire to a remote end.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representing this action.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.CreatePointerDown(OpenQA.Selenium.Interactions.MouseButton)">
            <summary>
            Creates a pointer down action.
            </summary>
            <param name="button">The button of the pointer that should be pressed.</param>
            <returns>The action representing the pointer down gesture.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.CreatePointerUp(OpenQA.Selenium.Interactions.MouseButton)">
            <summary>
            Creates a pointer up action.
            </summary>
            <param name="button">The button of the pointer that should be released.</param>
            <returns>The action representing the pointer up gesture.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.CreatePointerMove(OpenQA.Selenium.IWebElement,System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Creates a pointer move action to a specific element.
            </summary>
            <param name="target">The <see cref="T:OpenQA.Selenium.IWebElement"/> used as the target for the move.</param>
            <param name="xOffset">The horizontal offset from the origin of the move.</param>
            <param name="yOffset">The vertical offset from the origin of the move.</param>
            <param name="duration">The length of time the move gesture takes to complete.</param>
            <returns>The action representing the pointer move gesture.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.CreatePointerMove(OpenQA.Selenium.Interactions.CoordinateOrigin,System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Creates a pointer move action to an absolute coordinate.
            </summary>
            <param name="origin">The origin of coordinates for the move. Values can be relative to
            the view port origin, or the most recent pointer position.</param>
            <param name="xOffset">The horizontal offset from the origin of the move.</param>
            <param name="yOffset">The vertical offset from the origin of the move.</param>
            <param name="duration">The length of time the move gesture takes to complete.</param>
            <returns>The action representing the pointer move gesture.</returns>
            <exception cref="T:System.ArgumentException">Thrown when passing CoordinateOrigin.Element into origin.
            Users should us the other CreatePointerMove overload to move to a specific element.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.PointerInputDevice.CreatePointerCancel">
            <summary>
            Creates a pointer cancel action.
            </summary>
            <returns>The action representing the pointer cancel gesture.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ScreenMoveAction">
            <summary>
            Presses a touch screen at a given location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScreenMoveAction.#ctor(OpenQA.Selenium.ITouchScreen,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ScreenMoveAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="x">The x coordinate relative to the view port.</param>
            <param name="y">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScreenMoveAction.Perform">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ScreenPressAction">
            <summary>
            Presses a touch screen at a given location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScreenPressAction.#ctor(OpenQA.Selenium.ITouchScreen,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ScreenPressAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="x">The x coordinate relative to the view port.</param>
            <param name="y">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScreenPressAction.Perform">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ScreenReleaseAction">
            <summary>
            Presses a touch screen at a given location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScreenReleaseAction.#ctor(OpenQA.Selenium.ITouchScreen,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ScreenReleaseAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="x">The x coordinate relative to the view port.</param>
            <param name="y">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScreenReleaseAction.Perform">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ScrollAction">
            <summary>
            Creates a double tap gesture on a touch screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScrollAction.#ctor(OpenQA.Selenium.ITouchScreen,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ScrollAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="offsetX">The horizontal offset relative to the view port.</param>
            <param name="offsetY">The vertical offset relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScrollAction.#ctor(OpenQA.Selenium.ITouchScreen,OpenQA.Selenium.ILocatable,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ScrollAction"/> class for use with the specified element.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
            <param name="offsetX">The x coordinate relative to the view port.</param>
            <param name="offsetY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ScrollAction.Perform">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.SendKeysAction">
            <summary>
            Defines an action for sending a sequence of keystrokes to an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.SendKeysAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.SendKeysAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="keysToSend">The key sequence to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.SendKeysAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.SingleTapAction">
            <summary>
            Creates a single tap gesture on a touch screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.SingleTapAction.#ctor(OpenQA.Selenium.ITouchScreen,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.SingleTapAction"/> class.
            </summary>
            <param name="touchScreen">The <see cref="T:OpenQA.Selenium.ITouchScreen"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.SingleTapAction.Perform">
            <summary>
            Performs the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.TouchActions">
            <summary>
            Provides a mechanism for building advanced interactions with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.IWebDriver"/> object on which the actions built will be performed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.SingleTap(OpenQA.Selenium.IWebElement)">
            <summary>
            Taps the touch screen on the specified element.
            </summary>
            <param name="onElement">The element on which to tap.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.Down(System.Int32,System.Int32)">
            <summary>
            Presses down at the specified location on the screen.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.Up(System.Int32,System.Int32)">
            <summary>
            Releases a press at the specified location on the screen.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.Move(System.Int32,System.Int32)">
            <summary>
            Moves to the specified location on the screen.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.Scroll(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
            <summary>
            Scrolls the touch screen beginning at the specified element.
            </summary>
            <param name="onElement">The element on which to begin scrolling.</param>
            <param name="offsetX">The x coordinate relative to the view port.</param>
            <param name="offsetY">The y coordinate relative to the view port.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.DoubleTap(OpenQA.Selenium.IWebElement)">
            <summary>
            Double-taps the touch screen on the specified element.
            </summary>
            <param name="onElement">The element on which to double-tap.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.LongPress(OpenQA.Selenium.IWebElement)">
            <summary>
            Presses and holds on the touch screen on the specified element.
            </summary>
            <param name="onElement">The element on which to press and hold</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.Scroll(System.Int32,System.Int32)">
            <summary>
            Scrolls the touch screen to the specified offset.
            </summary>
            <param name="offsetX">The horizontal offset relative to the view port.</param>
            <param name="offsetY">The vertical offset relative to the view port.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.Flick(System.Int32,System.Int32)">
            <summary>
            Flicks the current view.
            </summary>
            <param name="speedX">The horizontal speed in pixels per second.</param>
            <param name="speedY">The vertical speed in pixels per second.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.TouchActions.Flick(OpenQA.Selenium.IWebElement,System.Int32,System.Int32,System.Int32)">
            <summary>
            Flicks the current view starting at a specific location.
            </summary>
            <param name="onElement">The element at which to start the flick.</param>
            <param name="offsetX">The x offset relative to the viewport.</param>
            <param name="offsetY">The y offset relative to the viewport.</param>
            <param name="speed">The speed in pixels per second.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.TouchActions"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor">
            <summary>
            Utility class used to execute "asynchronous" scripts. This class should
            only be used by browsers that do not natively support asynchronous
            script execution.
            <para>Warning: this class is intended for internal use
            only. This class will be removed without warning after all
            native asynchronous implementations have been completed.
            </para>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.#ctor(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor"/> class.
            </summary>
            <param name="executor">An <see cref="T:OpenQA.Selenium.IJavaScriptExecutor"/> object capable of executing JavaScript.</param>
        </member>
        <member name="P:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.Timeout">
            <summary>
            Gets or sets the timeout for the script executor.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.ExecuteScript(System.String,System.Object[])">
            <summary>
            Executes a JavaScript script asynchronously.
            </summary>
            <param name="script">The script to execute.</param>
            <param name="args">An array of objects used as arguments in the script.</param>
            <returns>The object which is the return value of the script.</returns>
            <exception cref="T:System.InvalidOperationException">if the object executing the function doesn't support JavaScript.</exception>
            <exception cref="T:OpenQA.Selenium.WebDriverException">if the page reloads during the JavaScript execution.</exception>
            <exception cref="T:OpenQA.Selenium.WebDriverTimeoutException">if the timeout expires during the JavaScript execution.</exception>
        </member>
        <member name="T:OpenQA.Selenium.Internal.FileUtilities">
            <summary>
            Encapsulates methods for working with files.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(System.String,System.String)">
            <summary>
            Recursively copies a directory.
            </summary>
            <param name="sourceDirectory">The source directory to copy.</param>
            <param name="destinationDirectory">The destination directory.</param>
            <returns><see langword="true"/> if the copy is completed; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.FileUtilities.DeleteDirectory(System.String)">
            <summary>
            Recursively deletes a directory, retrying on error until a timeout.
            </summary>
            <param name="directoryToDelete">The directory to delete.</param>
            <remarks>This method does not throw an exception if the delete fails.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Internal.FileUtilities.FindFile(System.String)">
            <summary>
            Searches for a file with the specified name.
            </summary>
            <param name="fileName">The name of the file to find.</param>
            <returns>The full path to the directory where the file can be found,
            or an empty string if the file does not exist in the locations searched.</returns>
            <remarks>
            This method looks first in the directory of the currently executing
            assembly. If the specified file is not there, the method then looks in
            each directory on the PATH environment variable, in order.
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.Internal.FileUtilities.GetCurrentDirectory">
            <summary>
            Gets the directory of the currently executing assembly.
            </summary>
            <returns>The directory of the currently executing assembly.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.FileUtilities.GenerateRandomTempDirectoryName(System.String)">
            <summary>
            Generates the full path to a random directory name in the temporary directory, following a naming pattern..
            </summary>
            <param name="directoryPattern">The pattern to use in creating the directory name, following standard
            .NET string replacement tokens.</param>
            <returns>The full path to the random directory name in the temporary directory.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IActionExecutor">
            <summary>
            Interface allowing execution of W3C Specification-compliant actions.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IActionExecutor.IsActionExecutor">
            <summary>
            Gets a value indicating whether this object is a valid action executor.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IActionExecutor.PerformActions(System.Collections.Generic.IList{OpenQA.Selenium.Interactions.ActionSequence})">
            <summary>
            Performs the specified list of actions with this action executor.
            </summary>
            <param name="actionSequenceList">The list of action sequences to perform.</param>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IActionExecutor.ResetInputState">
            <summary>
            Resets the input state of the action executor.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByClassName">
            <summary>
            Defines the interface through which the user finds elements by their CSS class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByClassName.FindElementByClassName(System.String)">
            <summary>
            Finds the first element matching the specified CSS class.
            </summary>
            <param name="className">The CSS class to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByClassName.FindElementsByClassName(System.String)">
            <summary>
            Finds all elements matching the specified CSS class.
            </summary>
            <param name="className">The CSS class to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByCssSelector">
            <summary>
            Defines the interface through which the user finds elements by their cascading style sheet (CSS) selector.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByCssSelector.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByCssSelector.FindElementsByCssSelector(System.String)">
            <summary>
            Finds all elements matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsById">
            <summary>
            Defines the interface through which the user finds elements by their ID.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsById.FindElementById(System.String)">
            <summary>
            Finds the first element matching the specified id.
            </summary>
            <param name="id">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsById.FindElementsById(System.String)">
            <summary>
            Finds all elements matching the specified id.
            </summary>
            <param name="id">The id to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByLinkText">
            <summary>
            Defines the interface through which the user finds elements by their link text.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByLinkText.FindElementByLinkText(System.String)">
            <summary>
            Finds the first element matching the specified link text.
            </summary>
            <param name="linkText">The link text to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByLinkText.FindElementsByLinkText(System.String)">
            <summary>
            Finds all elements matching the specified link text.
            </summary>
            <param name="linkText">The link text to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByName">
            <summary>
            Defines the interface through which the user finds elements by their name.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByName.FindElementByName(System.String)">
            <summary>
            Finds the first element matching the specified name.
            </summary>
            <param name="name">The name to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByName.FindElementsByName(System.String)">
            <summary>
            Finds all elements matching the specified name.
            </summary>
            <param name="name">The name to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByPartialLinkText">
            <summary>
            Defines the interface through which the user finds elements by a partial match on their link text.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByPartialLinkText.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first element matching the specified partial link text.
            </summary>
            <param name="partialLinkText">The partial link text to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByPartialLinkText.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds all elements matching the specified partial link text.
            </summary>
            <param name="partialLinkText">The partial link text to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByTagName">
            <summary>
            Defines the interface through which the user finds elements by their tag name.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByTagName.FindElementByTagName(System.String)">
            <summary>
            Finds the first element matching the specified tag name.
            </summary>
            <param name="tagName">The tag name to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByTagName.FindElementsByTagName(System.String)">
            <summary>
            Finds all elements matching the specified tag name.
            </summary>
            <param name="tagName">The tag name to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByXPath">
            <summary>
            Defines the interface through which the user finds elements by XPath.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByXPath.FindElementByXPath(System.String)">
            <summary>
            Finds the first element matching the specified XPath query.
            </summary>
            <param name="xpath">The XPath query to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByXPath.FindElementsByXPath(System.String)">
            <summary>
            Finds all elements matching the specified XPath query.
            </summary>
            <param name="xpath">The XPath query to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IHasCapabilitiesDictionary">
            <summary>
            Defines the interface through which the user can access the driver used to find an element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IHasCapabilitiesDictionary.CapabilitiesDictionary">
            <summary>
            Gets the underlying Dictionary for a given set of capabilities.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IWebElementReference">
            <summary>
            Defines the interface through which the framework can serialize an element to the wire protocol.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IWebElementReference.ElementReferenceId">
            <summary>
            Gets the internal ID of the element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IWebElementReference.ToDictionary">
            <summary>
            Converts an object into an object that represents an element for the wire protocol.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> that represents an element in the wire protocol.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IWrapsDriver">
            <summary>
            Defines the interface through which the user can access the driver used to find an element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IWrapsDriver.WrappedDriver">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebDriver"/> used to find this element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IWrapsElement">
            <summary>
            Defines the interface through which the user can discover if there is an underlying element to be used.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IWrapsElement.WrappedElement">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebElement"/> wrapped by this object.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.PortUtilities">
            <summary>
            Encapsulates methods for working with ports.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.PortUtilities.FindFreePort">
            <summary>
            Finds a random, free port to be listened on.
            </summary>
            <returns>A random, free port to be listened on.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.ResourceUtilities">
            <summary>
            Encapsulates methods for finding and extracting WebDriver resources.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ResourceUtilities.AssemblyVersion">
            <summary>
            Gets a string representing the version of the Selenium assembly.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ResourceUtilities.PlatformFamily">
            <summary>
            Gets a string representing the platform family on which the Selenium assembly is executing.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ResourceUtilities.GetResourceStream(System.String,System.String)">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> that contains the resource to use.
            </summary>
            <param name="fileName">A file name in the file system containing the resource to use.</param>
            <param name="resourceId">A string representing the resource name embedded in the
            executing assembly, if it is not found in the file system.</param>
            <returns>A Stream from which the resource can be read.</returns>
            <exception cref="T:OpenQA.Selenium.WebDriverException">Thrown if neither the file nor the embedded resource can be found.</exception>
            <remarks>
            The GetResourceStream method searches for the specified resource using the following
            algorithm:
            <para>
            <list type="numbered">
            <item>In the same directory as the calling assembly.</item>
            <item>In the full path specified by the <paramref name="fileName"/> argument.</item>
            <item>Inside the calling assembly as an embedded resource.</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ResourceUtilities.IsValidResourceName(System.String)">
            <summary>
            Returns a value indicating whether a resource exists with the specified ID.
            </summary>
            <param name="resourceId">ID of the embedded resource to check for.</param>
            <returns><see langword="true"/> if the resource exists in the calling assembly; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.ReturnedCapabilities">
            <summary>
            Class to Create the capabilities of the browser you require for <see cref="T:OpenQA.Selenium.IWebDriver"/>.
            If you wish to use default values use the static methods
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCapabilities.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Internal.ReturnedCapabilities"/> class
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCapabilities.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Internal.ReturnedCapabilities"/> class
            </summary>
            <param name="rawMap">Dictionary of items for the remote driver</param>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCapabilities.BrowserName">
            <summary>
            Gets the browser name
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCapabilities.Item(System.String)">
            <summary>
            Gets the capability value with the specified name.
            </summary>
            <param name="capabilityName">The name of the capability to get.</param>
            <returns>The value of the capability.</returns>
            <exception cref="T:System.ArgumentException">
            The specified capability name is not in the set of capabilities.
            </exception>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCapabilities.OpenQA#Selenium#Internal#IHasCapabilitiesDictionary#CapabilitiesDictionary">
            <summary>
            Gets the underlying Dictionary for a given set of capabilities.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCapabilities.CapabilitiesDictionary">
            <summary>
            Gets the internal capabilities dictionary.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCapabilities.HasCapability(System.String)">
            <summary>
            Gets a value indicating whether the browser has a given capability.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>Returns <see langword="true"/> if the browser has the capability; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCapabilities.GetCapability(System.String)">
            <summary>
            Gets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>An object associated with the capability, or <see langword="null"/>
            if the capability is not set on the browser.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCapabilities.ToDictionary">
            <summary>
            Converts the <see cref="T:OpenQA.Selenium.ICapabilities"/> object to a <see cref="T:System.Collections.Generic.Dictionary`2"/>.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the capabilities.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCapabilities.ToString">
            <summary>
            Return a string of capabilities being used
            </summary>
            <returns>String of capabilities being used</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.ReturnedCookie">
            <summary>
            Represents a cookie returned to the driver by the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCookie.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Internal.ReturnedCookie"/> class with a specific name,
            value, domain, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <param name="isSecure"><see langword="true"/> if the cookie is secure; otherwise <see langword="false"/></param>
            <param name="isHttpOnly"><see langword="true"/> if the cookie is an HTTP-only cookie; otherwise <see langword="false"/></param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value or currentUrl is <see langword="null"/>.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCookie.Secure">
            <summary>
            Gets a value indicating whether the cookie is secure.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCookie.IsHttpOnly">
            <summary>
            Gets a value indicating whether the cookie is an HTTP-only cookie.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCookie.ToString">
            <summary>
            Creates and returns a string representation of the current cookie.
            </summary>
            <returns>A string representation of the current cookie.</returns>
        </member>
        <member name="T:OpenQA.Selenium.NativeMethods">
            <summary>
            Provides entry points into needed unmanaged APIs.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.NativeMethods.HandleInformation">
            <summary>
            Values for flags for setting information about a native operating system handle.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.NativeMethods.HandleInformation.None">
            <summary>
            No flags are to be set for the handle.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.NativeMethods.HandleInformation.Inherit">
            <summary>
            If this flag is set, a child process created with the bInheritHandles
            parameter of CreateProcess set to TRUE will inherit the object handle.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.NativeMethods.HandleInformation.ProtectFromClose">
            <summary>
            If this flag is set, calling the CloseHandle function will not close the
            object handle.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NativeMethods.SetHandleInformation(System.IntPtr,OpenQA.Selenium.NativeMethods.HandleInformation,OpenQA.Selenium.NativeMethods.HandleInformation)">
            <summary>
            Sets the handle information for a Windows object.
            </summary>
            <param name="hObject">Handle to the object.</param>
            <param name="dwMask">The handle information to set.</param>
            <param name="dwFlags">The flags for the handle.</param>
            <returns><see langword="true"/> if the information is set; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.InvalidCookieDomainException">
            <summary>
            The exception that is thrown when the users attempts to set a cookie with an invalid domain.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidCookieDomainException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidCookieDomainException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidCookieDomainException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidCookieDomainException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidCookieDomainException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidCookieDomainException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidCookieDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidCookieDomainException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.InvalidElementStateException">
            <summary>
            The exception that is thrown when a reference to an element is no longer valid.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidElementStateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidElementStateException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidElementStateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidElementStateException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidElementStateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidElementStateException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidElementStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidElementStateException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.InvalidSelectorException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidSelectorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidSelectorException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidSelectorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidSelectorException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidSelectorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidSelectorException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidSelectorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidSelectorException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.IOptions">
            <summary>
            Defines an interface allowing the user to set options on the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IOptions.Cookies">
            <summary>
            Gets an object allowing the user to manipulate cookies on the page.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IOptions.Window">
            <summary>
            Gets an object allowing the user to manipulate the currently-focused browser window.
            </summary>
            <remarks>"Currently-focused" is defined as the browser window having the window handle
            returned when IWebDriver.CurrentWindowHandle is called.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.IOptions.Logs">
            <summary>
            Gets an object allowing the user to examing the logs for this driver instance.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.Timeouts">
            <summary>
            Provides access to the timeouts defined for this driver.
            </summary>
            <returns>An object implementing the <see cref="T:OpenQA.Selenium.ITimeouts"/> interface.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IRotatable">
            <summary>
            Represents rotation of the browser view for orientation-sensitive devices.
            When using this with a real device, the device should not be moved so that
            the built-in sensors do not interfere.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IRotatable.Orientation">
            <summary>
            Gets or sets the screen orientation of the browser on the device.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ISearchContext">
            <summary>
            Defines the interface used to search for elements.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first <see cref="T:OpenQA.Selenium.IWebElement"/> using the given method.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">If no element matches the criteria.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ISearchContext.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ITakesScreenshot">
            <summary>
            Defines the interface used to take screen shot images of the screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITakesScreenshot.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of the page on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ITargetLocator">
            <summary>
            Defines the interface through which the user can locate a given frame or window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(System.Int32)">
            <summary>
            Select a frame by its (zero-based) index.
            </summary>
            <param name="frameIndex">The zero-based index of the frame to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the frame cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(System.String)">
            <summary>
            Select a frame by its name or ID.
            </summary>
            <param name="frameName">The name of the frame to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the frame cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(OpenQA.Selenium.IWebElement)">
            <summary>
            Select a frame using its previously located <see cref="T:OpenQA.Selenium.IWebElement"/>
            </summary>
            <param name="frameElement">The frame element to switch to.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the element is neither a FRAME nor an IFRAME element.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">If the element is no longer valid.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.ParentFrame">
            <summary>
            Select the parent frame of the currently selected frame.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Window(System.String)">
            <summary>
            Switches the focus of future commands for this driver to the window with the given name.
            </summary>
            <param name="windowName">The name of the window to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the given window.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchWindowException">If the window cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.DefaultContent">
            <summary>
            Selects either the first frame on the page or the main document when a page contains iFrames.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the default frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.ActiveElement">
            <summary>
            Switches to the element that currently has the focus, or the body element
            if no element with focus can be detected.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IWebElement"/> instance representing the element
            with the focus, or the body element if no element with focus can be detected.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Alert">
            <summary>
            Switches to the currently active modal dialog for this particular driver instance.
            </summary>
            <returns>A handle to the dialog.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ITimeouts">
            <summary>
            Defines the interface through which the user can define timeouts.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ITimeouts.ImplicitWait">
            <summary>
            Gets or sets the implicit wait timeout, which is the  amount of time the
            driver should wait when searching for an element if it is not immediately
            present.
            </summary>
            <remarks>
            When searching for a single element, the driver should poll the page
            until the element has been found, or this timeout expires before throwing
            a <see cref="T:OpenQA.Selenium.NoSuchElementException"/>. When searching for multiple elements,
            the driver should poll the page until at least one element has been found
            or this timeout has expired.
            <para>
            Increasing the implicit wait timeout should be used judiciously as it
            will have an adverse effect on test run time, especially when used with
            slower location strategies like XPath.
            </para>
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.ITimeouts.AsynchronousJavaScript">
            <summary>
            Gets or sets the asynchronous script timeout, which is the amount
            of time the driver should wait when executing JavaScript asynchronously.
            This timeout only affects the <see cref="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteAsyncScript(System.String,System.Object[])"/>
            method.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ITimeouts.PageLoad">
            <summary>
            Gets or sets the page load timeout, which is the amount of time the driver
            should wait for a page to load when setting the <see cref="P:OpenQA.Selenium.IWebDriver.Url"/>
            property.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ITouchScreen">
            <summary>
            Interface representing basic touch screen operations.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.SingleTap(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Allows the execution of single tap on the screen, analogous to click using a Mouse.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen,
            usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.Down(System.Int32,System.Int32)">
            <summary>
            Allows the execution of the gesture 'down' on the screen. It is typically the first of a
            sequence of touch gestures.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.Up(System.Int32,System.Int32)">
            <summary>
            Allows the execution of the gesture 'up' on the screen. It is typically the last of a
            sequence of touch gestures.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.Move(System.Int32,System.Int32)">
            <summary>
            Allows the execution of the gesture 'move' on the screen.
            </summary>
            <param name="locationX">The x coordinate relative to the view port.</param>
            <param name="locationY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.Scroll(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32)">
            <summary>
            Creates a scroll gesture that starts on a particular screen location.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen
            where the scroll starts, usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
            <param name="offsetX">The x coordinate relative to the view port.</param>
            <param name="offsetY">The y coordinate relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.Scroll(System.Int32,System.Int32)">
            <summary>
            Creates a scroll gesture for a particular x and y offset.
            </summary>
            <param name="offsetX">The horizontal offset relative to the view port.</param>
            <param name="offsetY">The vertical offset relative to the view port.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.DoubleTap(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Allows the execution of double tap on the screen, analogous to click using a Mouse.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen,
            usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.LongPress(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Allows the execution of a long press gesture on the screen.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen,
            usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.Flick(System.Int32,System.Int32)">
            <summary>
            Creates a flick gesture for the current view.
            </summary>
            <param name="speedX">The horizontal speed in pixels per second.</param>
            <param name="speedY">The vertical speed in pixels per second.</param>
        </member>
        <member name="M:OpenQA.Selenium.ITouchScreen.Flick(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a flick gesture for the current view starting at a specific location.
            </summary>
            <param name="where">The <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> object representing the location on the screen
            where the scroll starts, usually an <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
            <param name="offsetX">The x offset relative to the viewport.</param>
            <param name="offsetY">The y offset relative to the viewport.</param>
            <param name="speed">The speed in pixels per second.</param>
        </member>
        <member name="T:OpenQA.Selenium.IWebDriver">
            <summary>
            Defines the interface through which the user controls the browser.
            </summary>
            <remarks>
            The <see cref="T:OpenQA.Selenium.IWebDriver"/> interface is the main interface to use for testing, which
            represents an idealized web browser. The methods in this class fall into three categories:
            <list type="bullet">
            <item><description>Control of the browser itself</description></item>
            <item><description>Selection of <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see></description></item>
            <item><description>Debugging aids</description></item>
            </list>
            <para>
            Key properties and methods are <see cref="P:OpenQA.Selenium.IWebDriver.Url"/>, which is used to
            load a new web page by setting the property, and the various methods similar
            to <see cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)"/>, which is used to find <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see>.
            </para>
            <para>
            You use the interface by instantiate drivers that implement of this interface.
            You should write your tests against this interface so that you may "swap in" a
            more fully featured browser when there is a requirement for one.
            </para>
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.Url">
            <summary>
            Gets or sets the URL the browser is currently displaying.
            </summary>
            <remarks>
            Setting the <see cref="P:OpenQA.Selenium.IWebDriver.Url"/> property will load a new web page in the current browser window.
            This is done using an HTTP GET operation, and the method will block until the
            load is complete. This will follow redirects issued either by the server or
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since
            should the underlying page change while your test is executing the results of
            future calls against this interface will be against the freshly loaded page.
            </remarks>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)"/>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)"/>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.Title">
            <summary>
            Gets the title of the current browser window.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.PageSource">
            <summary>
            Gets the source of the page last loaded by the browser.
            </summary>
            <remarks>
            If the page has been modified after loading (for example, by JavaScript)
            there is no guarantee that the returned text is that of the modified page.
            Please consult the documentation of the particular driver being used to
            determine whether the returned text reflects the current state of the page
            or the text last sent by the web server. The page source returned is a
            representation of the underlying DOM: do not expect it to be formatted
            or escaped in the same way as the response sent from the web server.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.CurrentWindowHandle">
            <summary>
            Gets the current window handle, which is an opaque handle to this
            window that uniquely identifies it within this driver instance.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.WindowHandles">
            <summary>
            Gets the window handles of open browser windows.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Close">
            <summary>
            Close the current window, quitting the browser if it is the last window currently open.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Quit">
            <summary>
            Quits this driver, closing every associated window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Manage">
            <summary>
            Instructs the driver to change its settings.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IOptions"/> object allowing the user to change
            the settings of the driver.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Navigate">
            <summary>
            Instructs the driver to navigate the browser to another location.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.INavigation"/> object allowing the user to access
            the browser's history and to navigate to a given URL.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.SwitchTo">
            <summary>
            Instructs the driver to send future commands to a different frame or window.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.ITargetLocator"/> object which can be used to select
            a frame or window.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IWebElement">
            <summary>
            Defines the interface through which the user controls elements on the page.
            </summary>
            <remarks>The <see cref="T:OpenQA.Selenium.IWebElement"/> interface represents an HTML element.
            Generally, all interesting operations to do with interacting with a page will
            be performed through this interface.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.TagName">
            <summary>
            Gets the tag name of this element.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.TagName"/> property returns the tag name of the
            element, not the value of the name attribute. For example, it will return
            "input" for an element specified by the HTML markup &lt;input name="foo" /&gt;.
            </remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Text">
            <summary>
            Gets the innerText of this element, without any leading or trailing whitespace,
            and with other whitespace collapsed.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Enabled">
            <summary>
            Gets a value indicating whether or not this element is enabled.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.IWebElement.Enabled"/> property will generally
            return <see langword="true"/> for everything except explicitly disabled input elements.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Selected">
            <summary>
            Gets a value indicating whether or not this element is selected.
            </summary>
            <remarks>This operation only applies to input elements such as checkboxes,
            options in a select element and radio buttons.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Location">
            <summary>
            Gets a <see cref="T:System.Drawing.Point"/> object containing the coordinates of the upper-left corner
            of this element relative to the upper-left corner of the page.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Size">
            <summary>
            Gets a <see cref="P:OpenQA.Selenium.IWebElement.Size"/> object containing the height and width of this element.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Displayed">
            <summary>
            Gets a value indicating whether or not this element is displayed.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.IWebElement.Displayed"/> property avoids the problem
            of having to parse an element's "style" attribute to determine
            visibility of an element.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Clear">
            <summary>
            Clears the content of this element.
            </summary>
            <remarks>If this element is a text entry element, the <see cref="M:OpenQA.Selenium.IWebElement.Clear"/>
            method will clear the value. It has no effect on other elements. Text entry elements
            are defined as elements with INPUT or TEXTAREA tags.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.SendKeys(System.String)">
            <summary>
            Simulates typing text into the element.
            </summary>
            <param name="text">The text to type into the element.</param>
            <remarks>The text to be typed may include special characters like arrow keys,
            backspaces, function keys, and so on. Valid special keys are defined in
            <see cref="T:OpenQA.Selenium.Keys"/>.</remarks>
            <seealso cref="T:OpenQA.Selenium.Keys"/>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">Thrown when the target element is not enabled.</exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">Thrown when the target element is not visible.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Submit">
            <summary>
            Submits this element to the web server.
            </summary>
            <remarks>If this current element is a form, or an element within a form,
            then this will be submitted to the web server. If this causes the current
            page to change, then this method will block until the new page is loaded.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Click">
            <summary>
            Clicks this element.
            </summary>
            <remarks>
            <para>
            Click this element. If the click causes a new page to load, the <see cref="M:OpenQA.Selenium.IWebElement.Click"/>
            method will attempt to block until the page has loaded. After calling the
            <see cref="M:OpenQA.Selenium.IWebElement.Click"/> method, you should discard all references to this
            element unless you know that the element and the page will still be present.
            Otherwise, any further operations performed on this element will have an undefined.
            behavior.
            </para>
            <para>
            If this element is not clickable, then this operation is ignored. This allows you to
            simulate a users to accidentally missing the target when clicking.
            </para>
            </remarks>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">Thrown when the target element is not visible.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute for this element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The attribute's current value. Returns a <see langword="null"/> if the
            value is not set.</returns>
            <remarks>The <see cref="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)"/> method will return the current value
            of the attribute, even if the value has been modified after the page has been
            loaded. Note that the value of the following attributes will be returned even if
            there is no explicit attribute on the element:
            <list type="table">
            <listheader>
            <term>Attribute name</term>
            <term>Value returned if not explicitly specified</term>
            <term>Valid element types</term>
            </listheader>
            <item>
            <description>checked</description>
            <description>checked</description>
            <description>Check Box</description>
            </item>
            <item>
            <description>selected</description>
            <description>selected</description>
            <description>Options in Select elements</description>
            </item>
            <item>
            <description>disabled</description>
            <description>disabled</description>
            <description>Input and other UI elements</description>
            </item>
            </list>
            </remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.GetProperty(System.String)">
            <summary>
            Gets the value of a JavaScript property of this element.
            </summary>
            <param name="propertyName">The name JavaScript the JavaScript property to get the value of.</param>
            <returns>The JavaScript property's current value. Returns a <see langword="null"/> if the
            value is not set or the property does not exist.</returns>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.GetCssValue(System.String)">
            <summary>
            Gets the value of a CSS property of this element.
            </summary>
            <param name="propertyName">The name of the CSS property to get the value of.</param>
            <returns>The value of the specified CSS property.</returns>
            <remarks>The value returned by the <see cref="M:OpenQA.Selenium.IWebElement.GetCssValue(System.String)"/>
            method is likely to be unpredictable in a cross-browser environment.
            Color values should be returned as hex strings. For example, a
            "background-color" property set as "green" in the HTML source, will
            return "#008000" for its value.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="T:OpenQA.Selenium.IWindow">
            <summary>
            Provides methods for getting and setting the size and position of the browser window.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IWindow.Position">
            <summary>
            Gets or sets the position of the browser window relative to the upper-left corner of the screen.
            </summary>
            <remarks>When setting this property, it should act as the JavaScript window.moveTo() method.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWindow.Size">
            <summary>
            Gets or sets the size of the outer browser window, including title bars and window borders.
            </summary>
            <remarks>When setting this property, it should act as the JavaScript window.resizeTo() method.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWindow.Maximize">
            <summary>
            Maximizes the current window if it is not already maximized.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWindow.Minimize">
            <summary>
            Minimizes the current window if it is not already maximized.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWindow.FullScreen">
            <summary>
            Sets the current window to full screen if it is not already in that state.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Keys">
            <summary>
            Representations of keys able to be pressed that are not text keys for sending to the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Null">
            <summary>
            Represents the NUL keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Cancel">
            <summary>
            Represents the Cancel keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Help">
            <summary>
            Represents the Help keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Backspace">
            <summary>
            Represents the Backspace key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Tab">
            <summary>
            Represents the Tab key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Clear">
            <summary>
            Represents the Clear keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Return">
            <summary>
            Represents the Return key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Enter">
            <summary>
            Represents the Enter key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Shift">
            <summary>
            Represents the Shift key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftShift">
            <summary>
            Represents the Shift key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Control">
            <summary>
            Represents the Control key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftControl">
            <summary>
            Represents the Control key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Alt">
            <summary>
            Represents the Alt key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftAlt">
            <summary>
            Represents the Alt key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Pause">
            <summary>
            Represents the Pause key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Escape">
            <summary>
            Represents the Escape key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Space">
            <summary>
            Represents the Spacebar key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.PageUp">
            <summary>
            Represents the Page Up key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.PageDown">
            <summary>
            Represents the Page Down key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.End">
            <summary>
            Represents the End key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Home">
            <summary>
            Represents the Home key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Left">
            <summary>
            Represents the left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowLeft">
            <summary>
            Represents the left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Up">
            <summary>
            Represents the up arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowUp">
            <summary>
            Represents the up arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Right">
            <summary>
            Represents the right arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowRight">
            <summary>
            Represents the right arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Down">
            <summary>
            Represents the Left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowDown">
            <summary>
            Represents the Left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Insert">
            <summary>
            Represents the Insert key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Delete">
            <summary>
            Represents the Delete key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Semicolon">
            <summary>
            Represents the semi-colon key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Equal">
            <summary>
            Represents the equal sign key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad0">
            <summary>
            Represents the number pad 0 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad1">
            <summary>
            Represents the number pad 1 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad2">
            <summary>
            Represents the number pad 2 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad3">
            <summary>
            Represents the number pad 3 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad4">
            <summary>
            Represents the number pad 4 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad5">
            <summary>
            Represents the number pad 5 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad6">
            <summary>
            Represents the number pad 6 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad7">
            <summary>
            Represents the number pad 7 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad8">
            <summary>
            Represents the number pad 8 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad9">
            <summary>
            Represents the number pad 9 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Multiply">
            <summary>
            Represents the number pad multiplication key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Add">
            <summary>
            Represents the number pad addition key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Separator">
            <summary>
            Represents the number pad thousands separator key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Subtract">
            <summary>
            Represents the number pad subtraction key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Decimal">
            <summary>
            Represents the number pad decimal separator key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Divide">
            <summary>
            Represents the number pad division key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F1">
            <summary>
            Represents the function key F1.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F2">
            <summary>
            Represents the function key F2.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F3">
            <summary>
            Represents the function key F3.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F4">
            <summary>
            Represents the function key F4.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F5">
            <summary>
            Represents the function key F5.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F6">
            <summary>
            Represents the function key F6.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F7">
            <summary>
            Represents the function key F7.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F8">
            <summary>
            Represents the function key F8.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F9">
            <summary>
            Represents the function key F9.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F10">
            <summary>
            Represents the function key F10.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F11">
            <summary>
            Represents the function key F11.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F12">
            <summary>
            Represents the function key F12.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Meta">
            <summary>
            Represents the function key META.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Command">
            <summary>
            Represents the function key COMMAND.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Keys.GetDescription(System.String)">
            <summary>
            Gets the description of a specific key.
            </summary>
            <param name="value">The key value for which to get the description.</param>
            <returns>The description of the key.</returns>
        </member>
        <member name="T:OpenQA.Selenium.LogEntry">
            <summary>
            Represents an entry in a log from a driver instance.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.LogEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.LogEntry"/> class.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.LogEntry.Timestamp">
            <summary>
            Gets the timestamp value of the log entry.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.LogEntry.Level">
            <summary>
            Gets the logging level of the log entry.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.LogEntry.Message">
            <summary>
            Gets the message of the log entry.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.LogEntry.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:OpenQA.Selenium.LogEntry"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:OpenQA.Selenium.LogEntry"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.LogEntry.FromDictionary(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates a <see cref="T:OpenQA.Selenium.LogEntry"/> from a dictionary as deserialized from JSON.
            </summary>
            <param name="entryDictionary">The <see cref="T:System.Collections.Generic.Dictionary`2"/> from
            which to create the <see cref="T:OpenQA.Selenium.LogEntry"/>.</param>
            <returns>A <see cref="T:OpenQA.Selenium.LogEntry"/> with the values in the dictionary.</returns>
        </member>
        <member name="T:OpenQA.Selenium.LogLevel">
            <summary>
            Represents the levels of logging available to driver instances.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogLevel.All">
            <summary>
            Show all log messages.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogLevel.Debug">
            <summary>
            Show messages with information useful for debugging.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogLevel.Info">
            <summary>
            Show informational messages.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogLevel.Warning">
            <summary>
            Show messages corresponding to non-critical issues.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogLevel.Severe">
            <summary>
            Show messages corresponding to critical issues.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogLevel.Off">
            <summary>
            Show no log messages.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.LogType">
            <summary>
            Class containing names of common log types.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogType.Client">
            <summary>
            Log messages from the client language bindings.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogType.Driver">
            <summary>
            Logs from the current WebDriver instance.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogType.Browser">
            <summary>
            Logs from the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogType.Server">
            <summary>
            Logs from the server.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.LogType.Profiler">
            <summary>
            Profiling logs.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.NoAlertPresentException">
            <summary>
            The exception that is thrown when an alert is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoAlertPresentException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoAlertPresentException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoAlertPresentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoAlertPresentException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoAlertPresentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoAlertPresentException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoAlertPresentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoAlertPresentException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchElementException">
            <summary>
            The exception that is thrown when an element is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchFrameException">
            <summary>
            The exception that is thrown when a frame is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchWindowException">
            <summary>
            The exception that is thrown when a window is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NotFoundException">
            <summary>
            The exception that is thrown when an item is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.Opera.OperaDriver">
            <summary>
            Provides a mechanism to write tests against Opera
            </summary>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new OperaDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                }
            }
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Opera.OperaDriver.AcceptUntrustedCertificates">
            <summary>
            Accept untrusted SSL Certificates
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriver.#ctor(OpenQA.Selenium.Opera.OperaOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/> class using the specified options.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.Opera.OperaOptions"/> to be used with the Opera driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/> class using the specified path
            to the directory containing OperaDriver.exe.
            </summary>
            <param name="operaDriverDirectory">The full path to the directory containing OperaDriver.exe.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriver.#ctor(System.String,OpenQA.Selenium.Opera.OperaOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/> class using the specified path
            to the directory containing OperaDriver.exe and options.
            </summary>
            <param name="operaDriverDirectory">The full path to the directory containing OperaDriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Opera.OperaOptions"/> to be used with the Opera driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriver.#ctor(System.String,OpenQA.Selenium.Opera.OperaOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/> class using the specified path
            to the directory containing OperaDriver.exe, options, and command timeout.
            </summary>
            <param name="operaDriverDirectory">The full path to the directory containing OperaDriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Opera.OperaOptions"/> to be used with the Opera driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriver.#ctor(OpenQA.Selenium.Opera.OperaDriverService,OpenQA.Selenium.Opera.OperaOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/> class using the specified
            <see cref="T:OpenQA.Selenium.Opera.OperaDriverService"/> and options.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Opera.OperaDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Opera.OperaOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriver.#ctor(OpenQA.Selenium.Opera.OperaDriverService,OpenQA.Selenium.Opera.OperaOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/> class using the specified <see cref="T:OpenQA.Selenium.Opera.OperaDriverService"/>.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Opera.OperaDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Opera.OperaOptions"/> to be used with the Opera driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaDriver.FileDetector">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.IFileDetector"/> responsible for detecting
            sequences of keystrokes representing file paths and names.
            </summary>
            <remarks>The Opera driver does not allow a file detector to be set,
            as the server component of the Opera driver (OperaDriver.exe) only
            allows uploads from the local computer environment. Attempting to set
            this property has no effect, but does not throw an exception. If you
            are attempting to run the Opera driver remotely, use <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/>
            in conjunction with a standalone WebDriver server.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Opera.OperaDriverService">
            <summary>
            Exposes the service provided by the native OperaDriver executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriverService.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaDriverService"/> class.
            </summary>
            <param name="executablePath">The full path to the OperaDriver executable.</param>
            <param name="executableFileName">The file name of the OperaDriver executable.</param>
            <param name="port">The port on which the OperaDriver executable should listen.</param>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaDriverService.LogPath">
            <summary>
            Gets or sets the location of the log file written to by the OperaDriver executable.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaDriverService.UrlPathPrefix">
            <summary>
            Gets or sets the base URL path prefix for commands (e.g., "wd/url").
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaDriverService.PortServerAddress">
            <summary>
            Gets or sets the address of a server to contact for reserving a port.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaDriverService.AndroidDebugBridgePort">
            <summary>
            Gets or sets the port on which the Android Debug Bridge is listening for commands.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaDriverService.EnableVerboseLogging">
            <summary>
            Gets or sets a value indicating whether to enable verbose logging for the OperaDriver executable.
            Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaDriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriverService.CreateDefaultService">
            <summary>
            Creates a default instance of the OperaDriverService.
            </summary>
            <returns>A OperaDriverService that implements default settings.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriverService.CreateDefaultService(System.String)">
            <summary>
            Creates a default instance of the OperaDriverService using a specified path to the OperaDriver executable.
            </summary>
            <param name="driverPath">The directory containing the OperaDriver executable.</param>
            <returns>A OperaDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaDriverService.CreateDefaultService(System.String,System.String)">
            <summary>
            Creates a default instance of the OperaDriverService using a specified path to the OperaDriver executable with the given name.
            </summary>
            <param name="driverPath">The directory containing the OperaDriver executable.</param>
            <param name="driverExecutableFileName">The name of the OperaDriver executable file.</param>
            <returns>A OperaDriverService using a random port.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Opera.OperaOptions">
            <summary>
            Class to manage options specific to <see cref="T:OpenQA.Selenium.Opera.OperaDriver"/>
            </summary>
            <remarks>
            Used with OperaDriver.exe for Chromium v0.1.0 and higher.
            </remarks>
            <example>
            <code>
            OperaOptions options = new OperaOptions();
            options.AddExtensions("\path\to\extension.crx");
            options.BinaryLocation = "\path\to\opera";
            </code>
            <para></para>
            <para>For use with OperaDriver:</para>
            <para></para>
            <code>
            OperaDriver driver = new OperaDriver(options);
            </code>
            <para></para>
            <para>For use with RemoteWebDriver:</para>
            <para></para>
            <code>
            RemoteWebDriver driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), options.ToCapabilities());
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Opera.OperaOptions.Capability">
            <summary>
            Gets the name of the capability used to store Opera options in
            a <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> object.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaOptions.BinaryLocation">
            <summary>
            Gets or sets the location of the Opera browser's binary executable file.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaOptions.LeaveBrowserRunning">
            <summary>
            Gets or sets a value indicating whether Opera should be left running after the
            OperaDriver instance is exited. Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaOptions.Arguments">
            <summary>
            Gets the list of arguments appended to the Opera command line as a string array.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaOptions.Extensions">
            <summary>
            Gets the list of extensions to be installed as an array of base64-encoded strings.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaOptions.DebuggerAddress">
            <summary>
            Gets or sets the address of a Opera debugger server to connect to.
            Should be of the form "{hostname|IP address}:port".
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Opera.OperaOptions.MinidumpPath">
            <summary>
            Gets or sets the directory in which to store minidump files.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddArgument(System.String)">
            <summary>
            Adds a single argument to the list of arguments to be appended to the Opera.exe command line.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddArguments(System.String[])">
            <summary>
            Adds arguments to be appended to the Opera.exe command line.
            </summary>
            <param name="argumentsToAdd">An array of arguments to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddArguments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds arguments to be appended to the Opera.exe command line.
            </summary>
            <param name="argumentsToAdd">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object of arguments to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddExcludedArgument(System.String)">
            <summary>
            Adds a single argument to be excluded from the list of arguments passed by default
            to the Opera.exe command line by operadriver.exe.
            </summary>
            <param name="argument">The argument to exclude.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddExcludedArguments(System.String[])">
            <summary>
            Adds arguments to be excluded from the list of arguments passed by default
            to the Opera.exe command line by operadriver.exe.
            </summary>
            <param name="argumentsToExclude">An array of arguments to exclude.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddExcludedArguments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds arguments to be excluded from the list of arguments passed by default
            to the Opera.exe command line by operadriver.exe.
            </summary>
            <param name="argumentsToExclude">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object of arguments to exclude.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddExtension(System.String)">
            <summary>
            Adds a path to a packed Opera extension (.crx file) to the list of extensions
            to be installed in the instance of Opera.
            </summary>
            <param name="pathToExtension">The full path to the extension to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddExtensions(System.String[])">
            <summary>
            Adds a list of paths to packed Opera extensions (.crx files) to be installed
            in the instance of Opera.
            </summary>
            <param name="extensions">An array of full paths to the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddExtensions(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a list of paths to packed Opera extensions (.crx files) to be installed
            in the instance of Opera.
            </summary>
            <param name="extensions">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of full paths to the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddEncodedExtension(System.String)">
            <summary>
            Adds a base64-encoded string representing a Opera extension to the list of extensions
            to be installed in the instance of Opera.
            </summary>
            <param name="extension">A base64-encoded string representing the extension to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddEncodedExtensions(System.String[])">
            <summary>
            Adds a list of base64-encoded strings representing Opera extensions to the list of extensions
            to be installed in the instance of Opera.
            </summary>
            <param name="extensions">An array of base64-encoded strings representing the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddEncodedExtensions(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a list of base64-encoded strings representing Opera extensions to be installed
            in the instance of Opera.
            </summary>
            <param name="extensions">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of base64-encoded strings
            representing the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddUserProfilePreference(System.String,System.Object)">
            <summary>
            Adds a preference for the user-specific profile or "user data directory."
            If the specified preference already exists, it will be overwritten.
            </summary>
            <param name="preferenceName">The name of the preference to set.</param>
            <param name="preferenceValue">The value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddLocalStatePreference(System.String,System.Object)">
            <summary>
            Adds a preference for the local state file in the user's data directory for Opera.
            If the specified preference already exists, it will be overwritten.
            </summary>
            <param name="preferenceName">The name of the preference to set.</param>
            <param name="preferenceValue">The value of the preference to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddAdditionalCapability(System.String,System.Object)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Opera driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.Opera.OperaOptions.AddAdditionalCapability(System.String,System.Object)"/>
            where <paramref name="capabilityName"/> has already been added will overwrite the
            existing value with the new value in <paramref name="capabilityValue"/>.
            Also, by default, calling this method adds capabilities to the options object passed to
            operadriver.exe.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.AddAdditionalCapability(System.String,System.Object,System.Boolean)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Opera driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <param name="isGlobalCapability">Indicates whether the capability is to be set as a global
            capability for the driver instead of a Opera-specific option.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.Opera.OperaOptions.AddAdditionalCapability(System.String,System.Object,System.Boolean)"/>
            where <paramref name="capabilityName"/> has already been added will overwrite the
            existing value with the new value in <paramref name="capabilityValue"/></remarks>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaOptions.ToCapabilities">
            <summary>
            Returns DesiredCapabilities for Opera with these options included as
            capabilities. This does not copy the options. Further changes will be
            reflected in the returned capabilities.
            </summary>
            <returns>The DesiredCapabilities for Opera with these options.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Opera.OperaWebElement">
            <summary>
            Provides a mechanism to get elements off the page for test
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Opera.OperaWebElement.#ctor(OpenQA.Selenium.Opera.OperaDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Opera.OperaWebElement"/> class
            </summary>
            <param name="parent">Driver in use</param>
            <param name="elementId">Id of the element</param>
        </member>
        <member name="T:OpenQA.Selenium.PlatformType">
            <summary>
            Represents the known and supported Platforms that WebDriver runs on.
            </summary>
            <remarks>The <see cref="T:OpenQA.Selenium.Platform"/> class maps closely to the Operating System,
            but differs slightly, because this class is used to extract information such as
            program locations and line endings. </remarks>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Any">
            <summary>
            Any platform. This value is never returned by a driver, but can be used to find
            drivers with certain capabilities.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Windows">
            <summary>
            Any version of Microsoft Windows. This value is never returned by a driver,
            but can be used to find drivers with certain capabilities.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.WinNT">
            <summary>
            Any Windows NT-based version of Microsoft Windows. This value is never returned
            by a driver, but can be used to find drivers with certain capabilities. This value
            is equivalent to PlatformType.Windows.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.XP">
            <summary>
            Versions of Microsoft Windows that are compatible with Windows XP.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Vista">
            <summary>
            Versions of Microsoft Windows that are compatible with Windows Vista.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Mac">
            <summary>
            Any version of the Macintosh OS
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Unix">
            <summary>
            Any version of the Unix operating system.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Linux">
            <summary>
            Any version of the Linux operating system.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Android">
            <summary>
            A version of the Android mobile operating system.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Platform">
            <summary>
            Represents the platform on which tests are to be run.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Platform.#ctor(OpenQA.Selenium.PlatformType)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Platform"/> class for a specific platform type.
            </summary>
            <param name="typeValue">The platform type.</param>
        </member>
        <member name="P:OpenQA.Selenium.Platform.CurrentPlatform">
            <summary>
            Gets the current platform.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.MajorVersion">
            <summary>
            Gets the major version of the platform operating system.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.MinorVersion">
            <summary>
            Gets the major version of the platform operating system.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.PlatformType">
            <summary>
            Gets the type of the platform.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.ProtocolPlatformType">
            <summary>
            Gets the value of the platform type for transmission using the JSON Wire Protocol.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Platform.IsPlatformType(OpenQA.Selenium.PlatformType)">
            <summary>
            Compares the platform to the specified type.
            </summary>
            <param name="compareTo">A <see cref="P:OpenQA.Selenium.Platform.PlatformType"/> value to compare to.</param>
            <returns><see langword="true"/> if the platforms match; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Platform.ToString">
            <summary>
            Returns the string value for this platform type.
            </summary>
            <returns>The string value for this platform type.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Platform.FromString(System.String)">
            <summary>
            Creates a <see cref="T:OpenQA.Selenium.Platform"/> object from a string name of the platform.
            </summary>
            <param name="platformName">The name of the platform to create.</param>
            <returns>The Platform object represented by the string name.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ProxyKind">
            <summary>
            Describes the kind of proxy.
            </summary>
            <remarks>
            Keep these in sync with the Firefox preferences numbers:
            http://kb.mozillazine.org/Network.proxy.type
            </remarks>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.Direct">
            <summary>
             Direct connection, no proxy (default on Windows).
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.Manual">
            <summary>
            Manual proxy settings (e.g., for httpProxy).
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.ProxyAutoConfigure">
            <summary>
            Proxy automatic configuration from URL.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.AutoDetect">
            <summary>
            Use proxy automatic detection.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.System">
            <summary>
            Use the system values for proxy settings (default on Linux).
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.Unspecified">
            <summary>
            No proxy type is specified.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Proxy">
            <summary>
            Describes proxy settings to be used with a driver instance.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Proxy"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Proxy"/> class with the given proxy settings.
            </summary>
            <param name="settings">A dictionary of settings to use with the proxy.</param>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.Kind">
            <summary>
            Gets or sets the type of proxy.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.SerializableProxyKind">
            <summary>
            Gets the type of proxy as a string for JSON serialization.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.IsAutoDetect">
            <summary>
            Gets or sets a value indicating whether the proxy uses automatic detection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.FtpProxy">
            <summary>
            Gets or sets the value of the proxy for the FTP protocol.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.HttpProxy">
            <summary>
            Gets or sets the value of the proxy for the HTTP protocol.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.NoProxy">
            <summary>
            Gets or sets the value for bypass proxy addresses.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.BypassProxyAddresses">
            <summary>
            Gets the semicolon delimited list of address for which to bypass the proxy.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.ProxyAutoConfigUrl">
            <summary>
            Gets or sets the URL used for proxy automatic configuration.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.SslProxy">
            <summary>
            Gets or sets the value of the proxy for the SSL protocol.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.SocksProxy">
            <summary>
            Gets or sets the value of the proxy for the SOCKS protocol.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.SocksUserName">
            <summary>
            Gets or sets the value of username for the SOCKS proxy.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.SocksPassword">
            <summary>
            Gets or sets the value of password for the SOCKS proxy.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.AddBypassAddress(System.String)">
            <summary>
            Adds a single address to the list of addresses against which the proxy will not be used.
            </summary>
            <param name="address">The address to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.AddBypassAddresses(System.String[])">
            <summary>
            Adds addresses to the list of addresses against which the proxy will not be used.
            </summary>
            <param name="addressesToAdd">An array of addresses to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.AddBypassAddresses(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds addresses to the list of addresses against which the proxy will not be used.
            </summary>
            <param name="addressesToAdd">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object of arguments to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.ToCapability">
            <summary>
            Returns a dictionary suitable for serializing to the W3C Specification
            dialect of the wire protocol.
            </summary>
            <returns>A dictionary suitable for serializing to the W3C Specification
            dialect of the wire protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.ToLegacyCapability">
            <summary>
            Returns a dictionary suitable for serializing to the OSS dialect of the
            wire protocol.
            </summary>
            <returns>A dictionary suitable for serializing to the OSS dialect of the
            wire protocol.</returns>
        </member>
        <member name="T:OpenQA.Selenium.RemoteSessionSettings">
            <summary>
            Base class for managing options specific to a browser driver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:OpenQA.Selenium.RemoteSessionSettings"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.#ctor(OpenQA.Selenium.DriverOptions,OpenQA.Selenium.DriverOptions[])">
            <summary>
            Creates a new instance of the <see cref="T:OpenQA.Selenium.RemoteSessionSettings"/> class,
            containing the specified <see cref="T:OpenQA.Selenium.DriverOptions"/> to use in the remote
            session.
            </summary>
            <param name="mustMatchDriverOptions">
            A <see cref="T:OpenQA.Selenium.DriverOptions"/> object that contains values that must be matched
            by the remote end to create the remote session.
            </param>
            <param name="firstMatchDriverOptions">
            A list of <see cref="T:OpenQA.Selenium.DriverOptions"/> objects that contain values that may be matched
            by the remote end to create the remote session.
            </param>
        </member>
        <member name="P:OpenQA.Selenium.RemoteSessionSettings.MustMatchDriverOptions">
            <summary>
            Gets a value indicating the options that must be matched by the remote end to create a session.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.RemoteSessionSettings.FirstMatchOptionsCount">
            <summary>
            Gets a value indicating the number of options that may be matched by the remote end to create a session.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.RemoteSessionSettings.Item(System.String)">
            <summary>
            Gets the capability value with the specified name.
            </summary>
            <param name="capabilityName">The name of the capability to get.</param>
            <returns>The value of the capability.</returns>
            <exception cref="T:System.ArgumentException">
            The specified capability name is not in the set of capabilities.
            </exception>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.AddMetadataSetting(System.String,System.Object)">
            <summary>
            Add a metadata setting to this set of remote session settings.
            </summary>
            <param name="settingName">The name of the setting to set.</param>
            <param name="settingValue">The value of the setting.</param>
            <remarks>
            The value to be set must be serializable to JSON for transmission
            across the wire to the remote end. To be JSON-serializable, the value
            must be a string, a numeric value, a boolean value, an object that
            implmeents <see cref="T:System.Collections.IEnumerable"/> that contains JSON-serializable
            objects, or a <see cref="T:System.Collections.Generic.Dictionary`2"/> where the keys
            are strings and the values are JSON-serializable.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Thrown if the setting name is null, the empty string, or one of the
            reserved names of metadata settings; or if the setting value is not
            JSON serializable.
            </exception>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.AddFirstMatchDriverOption(OpenQA.Selenium.DriverOptions)">
            <summary>
            Adds a <see cref="T:OpenQA.Selenium.DriverOptions"/> object to the list of options containing values to be
            "first matched" by the remote end.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.DriverOptions"/> to add to the list of "first matched" options.</param>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.SetMustMatchDriverOptions(OpenQA.Selenium.DriverOptions)">
            <summary>
            Adds a <see cref="T:OpenQA.Selenium.DriverOptions"/> object containing values that must be matched
            by the remote end to successfully create a session.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.DriverOptions"/> that must be matched by
            the remote end to successfully create a session.</param>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.HasCapability(System.String)">
            <summary>
            Gets a value indicating whether the browser has a given capability.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>Returns <see langword="true"/> if this set of capabilities has the capability;
            otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.GetCapability(System.String)">
            <summary>
            Gets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>An object associated with the capability, or <see langword="null"/>
            if the capability is not set in this set of capabilities.</returns>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.ToDictionary">
            <summary>
            Return a dictionary representation of this <see cref="T:OpenQA.Selenium.RemoteSessionSettings"/>.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> representation of this <see cref="T:OpenQA.Selenium.RemoteSessionSettings"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.RemoteSessionSettings.ToString">
            <summary>
            Return a string representation of the remote session settings to be sent.
            </summary>
            <returns>String representation of the remote session settings to be sent.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariDriver">
            <summary>
            Provides a way to access Safari to run your tests by creating a SafariDriver instance
            </summary>
            <remarks>
            When the WebDriver object has been instantiated the browser will load. The test can then navigate to the URL under test and
            start your test.
            </remarks>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new SafariDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                    driver.Dispose();
                }
            }
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor(OpenQA.Selenium.Safari.SafariOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class using the specified <see cref="T:OpenQA.Selenium.Safari.SafariOptions"/>.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.Safari.SafariOptions"/> to use for this <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> instance.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor(OpenQA.Selenium.Safari.SafariDriverService)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class using the specified driver service.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Safari.SafariDriverService"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class using the specified path
            to the directory containing ChromeDriver.exe.
            </summary>
            <param name="safariDriverDirectory">The full path to the directory containing SafariDriver executable.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor(System.String,OpenQA.Selenium.Safari.SafariOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class using the specified path
            to the directory containing ChromeDriver.exe and options.
            </summary>
            <param name="safariDriverDirectory">The full path to the directory containing SafariDriver executable.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Safari.SafariOptions"/> to be used with the Safari driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor(System.String,OpenQA.Selenium.Safari.SafariOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class using the specified path
            to the directory containing ChromeDriver.exe, options, and command timeout.
            </summary>
            <param name="safariDriverDirectory">The full path to the directory containing SafariDriver executable.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Safari.SafariOptions"/> to be used with the Safari driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor(OpenQA.Selenium.Safari.SafariDriverService,OpenQA.Selenium.Safari.SafariOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class using the specified
            <see cref="T:OpenQA.Selenium.Safari.SafariDriverService"/> and options.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Safari.SafariDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Safari.SafariOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor(OpenQA.Selenium.Safari.SafariDriverService,OpenQA.Selenium.Safari.SafariOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class using the specified <see cref="T:OpenQA.Selenium.Safari.SafariDriverService"/>.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Safari.SafariDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Safari.SafariOptions"/> to be used with the Safari driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariDriver.FileDetector">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.IFileDetector"/> responsible for detecting
            sequences of keystrokes representing file paths and names.
            </summary>
            <remarks>The Safari driver does not allow a file detector to be set,
            as the server component of the Safari driver (the Safari extension) only
            allows uploads from the local computer environment. Attempting to set
            this property has no effect, but does not throw an exception. If you
            are attempting to run the Safari driver remotely, use <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/>
            in conjunction with a standalone WebDriver server.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariDriverService">
            <summary>
            Exposes the service provided by the native SafariDriver executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverService.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriverService"/> class.
            </summary>
            <param name="executablePath">The full path to the SafariDriver executable.</param>
            <param name="executableFileName">The file name of the SafariDriver executable.</param>
            <param name="port">The port on which the SafariDriver executable should listen.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariDriverService.UseLegacyProtocol">
            <summary>
            Gets or sets a value indicating whether to use the default open-source project
            dialect of the protocol instead of the default dialect compliant with the
            W3C WebDriver Specification.
            </summary>
            <remarks>
            This is only valid for versions of the driver for Safari that target Safari 12
            or later, and will result in an error if used with prior versions of the driver.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariDriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariDriverService.TerminationTimeout">
            <summary>
            Gets a value indicating the time to wait for the service to terminate before forcing it to terminate.
            For the Safari driver, there is no time for termination
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariDriverService.HasShutdown">
            <summary>
            Gets a value indicating whether the service has a shutdown API that can be called to terminate
            it gracefully before forcing a termination.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariDriverService.IsInitialized">
            <summary>
            Gets a value indicating whether the service is responding to HTTP requests.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverService.CreateDefaultService">
            <summary>
            Creates a default instance of the SafariDriverService.
            </summary>
            <returns>A SafariDriverService that implements default settings.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverService.CreateDefaultService(System.String)">
            <summary>
            Creates a default instance of the SafariDriverService using a specified path to the ChromeDriver executable.
            </summary>
            <param name="driverPath">The directory containing the ChromeDriver executable.</param>
            <returns>A ChromeDriverService using a random port.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverService.CreateDefaultService(System.String,System.String)">
            <summary>
            Creates a default instance of the SafariDriverService using a specified path to the ChromeDriver executable with the given name.
            </summary>
            <param name="driverPath">The directory containing the ChromeDriver executable.</param>
            <param name="driverExecutableFileName">The name of the ChromeDriver executable file.</param>
            <returns>A ChromeDriverService using a random port.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariOptions">
            <summary>
            Class to manage options specific to <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/>
            </summary>
            <example>
            <code>
            SafariOptions options = new SafariOptions();
            options.SkipExtensionInstallation = true;
            </code>
            <para></para>
            <para>For use with SafariDriver:</para>
            <para></para>
            <code>
            SafariDriver driver = new SafariDriver(options);
            </code>
            <para></para>
            <para>For use with RemoteWebDriver:</para>
            <para></para>
            <code>
            RemoteWebDriver driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), options.ToCapabilities());
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariOptions"/> class.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariOptions.EnableAutomaticInspection">
            <summary>
            Gets or sets a value indicating whether to have the driver preload the
            Web Inspector and JavaScript debugger in the background.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariOptions.EnableAutomaticProfiling">
            <summary>
            Gets or sets a value indicating whether to have the driver preload the
            Web Inspector and start a timeline recording in the background.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariOptions.IsTechnologyPreview">
            <summary>
            Gets or sets a value indicating whether the browser is the technology preview.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariOptions.AddAdditionalCapability(System.String,System.Object)">
            <summary>
            Provides a means to add additional capabilities not yet added as type safe options
            for the Safari driver.
            </summary>
            <param name="capabilityName">The name of the capability to add.</param>
            <param name="capabilityValue">The value of the capability to add.</param>
            <exception cref="T:System.ArgumentException">
            thrown when attempting to add a capability for which there is already a type safe option, or
            when <paramref name="capabilityName"/> is <see langword="null"/> or the empty string.
            </exception>
            <remarks>Calling <see cref="M:OpenQA.Selenium.Safari.SafariOptions.AddAdditionalCapability(System.String,System.Object)"/> where <paramref name="capabilityName"/>
            has already been added will overwrite the existing value with the new value in <paramref name="capabilityValue"/></remarks>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariOptions.ToCapabilities">
            <summary>
            Returns ICapabilities for Safari with these options included as
            capabilities. This copies the options. Further changes will not be
            reflected in the returned capabilities.
            </summary>
            <returns>The ICapabilities for Safari with these options.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ScreenOrientation">
            <summary>
            Represents possible screen orientations.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenOrientation.Portrait">
            <summary>
            Represents a portrait mode, where the screen is vertical.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenOrientation.Landscape">
            <summary>
            Represents Landscape mode, where the screen is horizontal.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ScreenshotImageFormat">
            <summary>
            File format for saving screenshots.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenshotImageFormat.Png">
            <summary>
            W3C Portable Network Graphics image format.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenshotImageFormat.Jpeg">
            <summary>
            Joint Photgraphic Experts Group image format.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenshotImageFormat.Gif">
            <summary>
            Graphics Interchange Format image format.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenshotImageFormat.Tiff">
            <summary>
            Tagged Image File Format image format.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenshotImageFormat.Bmp">
            <summary>
            Bitmap image format.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Screenshot">
            <summary>
            Represents an image of the page currently loaded in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Screenshot"/> class.
            </summary>
            <param name="base64EncodedScreenshot">The image of the page as a Base64-encoded string.</param>
        </member>
        <member name="P:OpenQA.Selenium.Screenshot.AsBase64EncodedString">
            <summary>
            Gets the value of the screenshot image as a Base64-encoded string.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Screenshot.AsByteArray">
            <summary>
            Gets the value of the screenshot image as an array of bytes.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.SaveAsFile(System.String)">
            <summary>
            Saves the screenshot to a Portable Network Graphics (PNG) file, overwriting the
            file if it already exists.
            </summary>
            <param name="fileName">The full path and file name to save the screenshot to.</param>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.SaveAsFile(System.String,OpenQA.Selenium.ScreenshotImageFormat)">
            <summary>
            Saves the screenshot to a file, overwriting the file if it already exists.
            </summary>
            <param name="fileName">The full path and file name to save the screenshot to.</param>
            <param name="format">A <see cref="T:OpenQA.Selenium.ScreenshotImageFormat"/> value indicating the format
            to save the image to.</param>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.ToString">
            <summary>
            Returns a <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.
            </summary>
            <returns>A <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.StaleElementReferenceException">
            <summary>
            The exception that is thrown when a reference to an element is no longer valid.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.Support.UI.DefaultWait`1">
            <summary>
            An implementation of the <see cref="T:OpenQA.Selenium.Support.UI.IWait`1"/> interface that may have its timeout and polling interval
            configured on the fly.
            </summary>
            <typeparam name="T">The type of object on which the wait it to be applied.</typeparam>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.DefaultWait`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Support.UI.DefaultWait`1"/> class.
            </summary>
            <param name="input">The input value to pass to the evaluated conditions.</param>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.DefaultWait`1.#ctor(`0,OpenQA.Selenium.Support.UI.IClock)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Support.UI.DefaultWait`1"/> class.
            </summary>
            <param name="input">The input value to pass to the evaluated conditions.</param>
            <param name="clock">The clock to use when measuring the timeout.</param>
        </member>
        <member name="P:OpenQA.Selenium.Support.UI.DefaultWait`1.Timeout">
            <summary>
            Gets or sets how long to wait for the evaluated condition to be true. The default timeout is 500 milliseconds.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Support.UI.DefaultWait`1.PollingInterval">
            <summary>
            Gets or sets how often the condition should be evaluated. The default timeout is 500 milliseconds.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Support.UI.DefaultWait`1.Message">
            <summary>
            Gets or sets the message to be displayed when time expires.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.DefaultWait`1.IgnoreExceptionTypes(System.Type[])">
            <summary>
            Configures this instance to ignore specific types of exceptions while waiting for a condition.
            Any exceptions not whitelisted will be allowed to propagate, terminating the wait.
            </summary>
            <param name="exceptionTypes">The types of exceptions to ignore.</param>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.DefaultWait`1.Until``1(System.Func{`0,``0})">
            <summary>
            Repeatedly applies this instance's input value to the given function until one of the following
            occurs:
            <para>
            <list type="bullet">
            <item>the function returns neither null nor false</item>
            <item>the function throws an exception that is not in the list of ignored exception types</item>
            <item>the timeout expires</item>
            </list>
            </para>
            </summary>
            <typeparam name="TResult">The delegate's expected return type.</typeparam>
            <param name="condition">A delegate taking an object of type T as its parameter, and returning a TResult.</param>
            <returns>The delegate's return value.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.DefaultWait`1.ThrowTimeoutException(System.String,System.Exception)">
            <summary>
            Throws a <see cref="T:OpenQA.Selenium.WebDriverTimeoutException"/> with the given message.
            </summary>
            <param name="exceptionMessage">The message of the exception.</param>
            <param name="lastException">The last exception thrown by the condition.</param>
            <remarks>This method may be overridden to throw an exception that is
            idiomatic for a particular test infrastructure.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Support.UI.IClock">
            <summary>
            An interface describing time handling functions for timeouts.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Support.UI.IClock.Now">
            <summary>
            Gets the current date and time values.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.IClock.LaterBy(System.TimeSpan)">
            <summary>
            Gets the <see cref="T:System.DateTime"/> at a specified offset in the future.
            </summary>
            <param name="delay">The offset to use.</param>
            <returns>The <see cref="T:System.DateTime"/> at the specified offset in the future.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.IClock.IsNowBefore(System.DateTime)">
            <summary>
            Gets a value indicating whether the current date and time is before the specified date and time.
            </summary>
            <param name="otherDateTime">The date and time values to compare the current date and time values to.</param>
            <returns><see langword="true"/> if the current date and time is before the specified date and time; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Support.UI.IWait`1">
            <summary>
            Interface describing a class designed to wait for a condition.
            </summary>
            <typeparam name="T">The type of object used to detect the condition.</typeparam>
        </member>
        <member name="P:OpenQA.Selenium.Support.UI.IWait`1.Timeout">
            <summary>
            Gets or sets how long to wait for the evaluated condition to be true.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Support.UI.IWait`1.PollingInterval">
            <summary>
            Gets or sets how often the condition should be evaluated.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Support.UI.IWait`1.Message">
            <summary>
            Gets or sets the message to be displayed when time expires.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.IWait`1.IgnoreExceptionTypes(System.Type[])">
            <summary>
            Configures this instance to ignore specific types of exceptions while waiting for a condition.
            Any exceptions not whitelisted will be allowed to propagate, terminating the wait.
            </summary>
            <param name="exceptionTypes">The types of exceptions to ignore.</param>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.IWait`1.Until``1(System.Func{`0,``0})">
            <summary>
            Waits until a condition is true or times out.
            </summary>
            <typeparam name="TResult">The type of result to expect from the condition.</typeparam>
            <param name="condition">A delegate taking a TSource as its parameter, and returning a TResult.</param>
            <returns>If TResult is a boolean, the method returns <see langword="true"/> when the condition is true, and <see langword="false"/> otherwise.
            If TResult is an object, the method returns the object when the condition evaluates to a value other than <see langword="null"/>.</returns>
            <exception cref="T:System.ArgumentException">Thrown when TResult is not boolean or an object type.</exception>
        </member>
        <member name="T:OpenQA.Selenium.Support.UI.SystemClock">
            <summary>
            Uses the system clock to calculate time for timeouts.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Support.UI.SystemClock.Now">
            <summary>
            Gets the current date and time values.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.SystemClock.LaterBy(System.TimeSpan)">
            <summary>
            Calculates the date and time values after a specific delay.
            </summary>
            <param name="delay">The delay after to calculate.</param>
            <returns>The future date and time values.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.SystemClock.IsNowBefore(System.DateTime)">
            <summary>
            Gets a value indicating whether the current date and time is before the specified date and time.
            </summary>
            <param name="otherDateTime">The date and time values to compare the current date and time values to.</param>
            <returns><see langword="true"/> if the current date and time is before the specified date and time; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Support.UI.WebDriverWait">
            <summary>
            Provides the ability to wait for an arbitrary condition during test execution.
            </summary>
            <example>
            <code>
            IWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(3))
            IWebElement element = wait.Until(driver => driver.FindElement(By.Name("q")));
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.WebDriverWait.#ctor(OpenQA.Selenium.IWebDriver,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait"/> class.
            </summary>
            <param name="driver">The WebDriver instance used to wait.</param>
            <param name="timeout">The timeout value indicating how long to wait for the condition.</param>
        </member>
        <member name="M:OpenQA.Selenium.Support.UI.WebDriverWait.#ctor(OpenQA.Selenium.Support.UI.IClock,OpenQA.Selenium.IWebDriver,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Support.UI.WebDriverWait"/> class.
            </summary>
            <param name="clock">An object implementing the <see cref="T:OpenQA.Selenium.Support.UI.IClock"/> interface used to determine when time has passed.</param>
            <param name="driver">The WebDriver instance used to wait.</param>
            <param name="timeout">The timeout value indicating how long to wait for the condition.</param>
            <param name="sleepInterval">A <see cref="T:System.TimeSpan"/> value indicating how often to check for the condition to be true.</param>
        </member>
        <member name="T:OpenQA.Selenium.UnableToSetCookieException">
            <summary>
            The exception that is thrown when the user is unable to set a cookie.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnableToSetCookieException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnableToSetCookieException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnableToSetCookieException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnableToSetCookieException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnableToSetCookieException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnableToSetCookieException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnableToSetCookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnableToSetCookieException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.UnhandledAlertException">
            <summary>
            The exception that is thrown when an unhandled alert is present.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class with
            a specified error message and alert text.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="alertText">The text of the unhandled alert.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="P:OpenQA.Selenium.UnhandledAlertException.AlertText">
            <summary>
            Gets the text of the unhandled alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.WebDriverException">
            <summary>
            Represents exceptions that are thrown when an error occurs during actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.WebDriverResult">
            <summary>
            Specifies return values for actions in the driver.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.Success">
            <summary>
            The action was successful.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.IndexOutOfBounds">
            <summary>
            The index specified for the action was out of the acceptable range.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoCollection">
            <summary>
            No collection was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoString">
            <summary>
            No string was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoStringLength">
            <summary>
            No string length was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoStringWrapper">
            <summary>
            No string wrapper was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchDriver">
            <summary>
            No driver matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchElement">
            <summary>
            No element matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchFrame">
            <summary>
            No frame matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnknownCommand">
            <summary>
            The functionality is not supported.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ObsoleteElement">
            <summary>
            The specified element is no longer valid.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementNotDisplayed">
            <summary>
            The specified element is not displayed.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidElementState">
            <summary>
            The specified element is not enabled.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnhandledError">
            <summary>
            An unhandled error occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ExpectedError">
            <summary>
            An error occurred, but it was expected.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementNotSelectable">
            <summary>
            The specified element is not selected.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchDocument">
            <summary>
            No document matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnexpectedJavaScriptError">
            <summary>
            An unexpected JavaScript error occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoScriptResult">
            <summary>
            No result is available from the JavaScript execution.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.XPathLookupError">
            <summary>
            The result from the JavaScript execution is not recognized.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchCollection">
            <summary>
            No collection matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.Timeout">
            <summary>
            A timeout occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NullPointer">
            <summary>
            A null pointer was received.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchWindow">
            <summary>
            No window matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidCookieDomain">
            <summary>
            An illegal attempt was made to set a cookie under a different domain than the current page.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnableToSetCookie">
            <summary>
            A request to set a cookie's value could not be satisfied.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnexpectedAlertOpen">
            <summary>
            An alert was found open unexpectedly.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoAlertPresent">
            <summary>
            A request was made to switch to an alert, but no alert is currently open.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.AsyncScriptTimeout">
            <summary>
            An asynchronous JavaScript execution timed out.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidElementCoordinates">
            <summary>
            The coordinates of the element are invalid.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidSelector">
            <summary>
            The selector used (CSS/XPath) was invalid.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.SessionNotCreated">
            <summary>
            A session was not created by the driver
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.MoveTargetOutOfBounds">
            <summary>
            The requested move was outside the active view port
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidXPathSelector">
            <summary>
            The XPath selector was invalid.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InsecureCertificate">
            <summary>
            An insecure SSl certificate was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementNotInteractable">
            <summary>
            The element was not interactable
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidArgument">
            <summary>
            An invalid argument was passed to the command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchCookie">
            <summary>
            No cookie was found matching the name requested.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnableToCaptureScreen">
            <summary>
            The driver was unable to capture the screen.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementClickIntercepted">
            <summary>
            The click on the element was intercepted by a different element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.WebDriverTimeoutException">
            <summary>
            Represents exceptions that are thrown when an error occurs during actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverTimeoutException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverTimeoutException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverTimeoutException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.XPathLookupException">
            <summary>
            The exception that is thrown when an error occurs during an XPath lookup.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual
            information about the source or destination.</param>
        </member>
        <member name="T:System.IO.Compression.ZipStorer">
            <summary>
            Unique class for compression/decompression file. Represents a Zip file.
            </summary>
        </member>
        <member name="T:System.IO.Compression.ZipStorer.CompressionMethod">
            <summary>
            Compression method enumeration.
            </summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.CompressionMethod.Store">
            <summary>Uncompressed storage.</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.CompressionMethod.Deflate">
            <summary>Deflate compression method.</summary>
        </member>
        <member name="P:System.IO.Compression.ZipStorer.EncodeUtf8">
            <summary>
            Gets a value indicating whether file names and comments should be encoded using UTF-8.
            </summary>
        </member>
        <member name="P:System.IO.Compression.ZipStorer.ForceDeflating">
            <summary>
            Gets a value indicating whether to force using the deflate algorithm,
            even if doing so inflates the stored file.
            </summary>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Create(System.IO.Stream,System.String)">
            <summary>
            Create a new zip storage in a stream.
            </summary>
            <param name="zipStream">The stream to use to create the Zip file.</param>
            <param name="fileComment">General comment for Zip file.</param>
            <returns>A valid ZipStorer object.</returns>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Open(System.IO.Stream,System.IO.FileAccess)">
            <summary>
            Open the existing Zip storage in a stream.
            </summary>
            <param name="stream">Already opened stream with zip contents.</param>
            <param name="access">File access mode for stream operations.</param>
            <returns>A valid ZipStorer object.</returns>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.AddFile(System.IO.Compression.ZipStorer.CompressionMethod,System.String,System.String,System.String)">
            <summary>
            Add full contents of a file into the Zip storage.
            </summary>
            <param name="compressionMethod">Compression method used to store the file.</param>
            <param name="sourceFile">Full path of file to add to Zip storage.</param>
            <param name="fileNameInZip">File name and path as desired in Zip directory.</param>
            <param name="fileEntryComment">Comment for stored file.</param>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.AddStream(System.IO.Compression.ZipStorer.CompressionMethod,System.IO.Stream,System.String,System.DateTime,System.String)">
            <summary>
            Add full contents of a stream into the Zip storage.
            </summary>
            <param name="compressionMethod">Compression method used to store the stream.</param>
            <param name="sourceStream">Stream object containing the data to store in Zip.</param>
            <param name="fileNameInZip">File name and path as desired in Zip directory.</param>
            <param name="modificationTimeStamp">Modification time of the data to store.</param>
            <param name="fileEntryComment">Comment for stored file.</param>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Close">
            <summary>
            Updates central directory (if needed) and close the Zip storage.
            </summary>
            <remarks>This is a required step, unless automatic dispose is used.</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ReadCentralDirectory">
            <summary>
            Read all the file records in the central directory.
            </summary>
            <returns>List of all entries in directory.</returns>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ExtractFile(System.IO.Compression.ZipStorer.ZipFileEntry,System.String)">
            <summary>
            Copy the contents of a stored file into a physical file.
            </summary>
            <param name="zipFileEntry">Entry information of file to extract.</param>
            <param name="destinationFileName">Name of file to store uncompressed data.</param>
            <returns><see langword="true"/> if the file is successfully extracted; otherwise, <see langword="false"/>.</returns>
            <remarks>Unique compression methods are Store and Deflate.</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ExtractFile(System.IO.Compression.ZipStorer.ZipFileEntry,System.IO.Stream)">
            <summary>
            Copy the contents of a stored file into an open stream.
            </summary>
            <param name="zipFileEntry">Entry information of file to extract.</param>
            <param name="destinationStream">Stream to store the uncompressed data.</param>
            <returns><see langword="true"/> if the file is successfully extracted; otherwise, <see langword="false"/>.</returns>
            <remarks>Unique compression methods are Store and Deflate.</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Dispose">
            <summary>
            Closes the Zip file stream.
            </summary>
        </member>
        <member name="T:System.IO.Compression.ZipStorer.ZipFileEntry">
            <summary>
            Represents an entry in Zip file directory
            </summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.Method">
            <summary>Compression method</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.FilenameInZip">
            <summary>Full path and filename as stored in Zip</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.FileSize">
            <summary>Original file size</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.CompressedSize">
            <summary>Compressed file size</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.HeaderOffset">
            <summary>Offset of header information inside Zip storage</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.FileOffset">
            <summary>Offset of file inside Zip storage</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.HeaderSize">
            <summary>Size of header information</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.Crc32">
            <summary>32-bit checksum of entire file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.ModifyTime">
            <summary>Last modification time of file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.Comment">
            <summary>User comment for file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ZipFileEntry.ToString">
            <summary>Overriden method</summary>
            <returns>Filename in Zip</returns>
        </member>
    </members>
</doc>
